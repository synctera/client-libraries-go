/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
	"time"
)

// Customer Represents a Customer's information
type Customer struct {
	// Customer unique identifier
	Id *string `json:"id,omitempty"`
	// Customer's first name
	FirstName *string `json:"first_name,omitempty"`
	// Customer's last name
	LastName *string `json:"last_name,omitempty"`
	// Customer's middle name
	MiddleName *string `json:"middle_name,omitempty"`
	LegalAddress *Address `json:"legal_address,omitempty"`
	ShippingAddress *Address `json:"shipping_address,omitempty"`
	// Customer's date of birth in ISO-8601 date format YYYY-MM-DD
	Dob *string `json:"dob,omitempty"`
	// Customer's full tax ID eg SSN formatted with hyphens 123-45-6789
	Ssn *string `json:"ssn,omitempty"`
	// Customer's masked tax ID eg SSN formatted with hyphens ***-**-6789
	SsnLastFour *string `json:"ssn_last_four,omitempty"`
	// Customer's email
	Email *string `json:"email,omitempty"`
	// Customer's mobile phone number in E.164 format e.g. +19178675309
	MobilePhoneNumber *string `json:"mobile_phone_number,omitempty"`
	// Customer's alternate phone number in E.164 format e.g. +19178675309
	AltPhoneNumber *string `json:"alt_phone_number,omitempty"`
	CreationTime *time.Time `json:"creation_time,omitempty"`
	LastUpdatedTime *time.Time `json:"last_updated_time,omitempty"`
	// List of the Customer's associated devices
	Devices *[]Device `json:"devices,omitempty"`
	// Customer's relationships with other accounts eg. guardian
	RelatedCustomers *[]Relationship1 `json:"related_customers,omitempty"`
	// List of accounts that belong to the customer
	Accounts *[]Account `json:"accounts,omitempty"`
}

// NewCustomer instantiates a new Customer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomer() *Customer {
	this := Customer{}
	return &this
}

// NewCustomerWithDefaults instantiates a new Customer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerWithDefaults() *Customer {
	this := Customer{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Customer) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Customer) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Customer) SetId(v string) {
	o.Id = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Customer) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Customer) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Customer) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Customer) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Customer) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Customer) SetLastName(v string) {
	o.LastName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *Customer) GetMiddleName() string {
	if o == nil || o.MiddleName == nil {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetMiddleNameOk() (*string, bool) {
	if o == nil || o.MiddleName == nil {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *Customer) HasMiddleName() bool {
	if o != nil && o.MiddleName != nil {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *Customer) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetLegalAddress returns the LegalAddress field value if set, zero value otherwise.
func (o *Customer) GetLegalAddress() Address {
	if o == nil || o.LegalAddress == nil {
		var ret Address
		return ret
	}
	return *o.LegalAddress
}

// GetLegalAddressOk returns a tuple with the LegalAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetLegalAddressOk() (*Address, bool) {
	if o == nil || o.LegalAddress == nil {
		return nil, false
	}
	return o.LegalAddress, true
}

// HasLegalAddress returns a boolean if a field has been set.
func (o *Customer) HasLegalAddress() bool {
	if o != nil && o.LegalAddress != nil {
		return true
	}

	return false
}

// SetLegalAddress gets a reference to the given Address and assigns it to the LegalAddress field.
func (o *Customer) SetLegalAddress(v Address) {
	o.LegalAddress = &v
}

// GetShippingAddress returns the ShippingAddress field value if set, zero value otherwise.
func (o *Customer) GetShippingAddress() Address {
	if o == nil || o.ShippingAddress == nil {
		var ret Address
		return ret
	}
	return *o.ShippingAddress
}

// GetShippingAddressOk returns a tuple with the ShippingAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetShippingAddressOk() (*Address, bool) {
	if o == nil || o.ShippingAddress == nil {
		return nil, false
	}
	return o.ShippingAddress, true
}

// HasShippingAddress returns a boolean if a field has been set.
func (o *Customer) HasShippingAddress() bool {
	if o != nil && o.ShippingAddress != nil {
		return true
	}

	return false
}

// SetShippingAddress gets a reference to the given Address and assigns it to the ShippingAddress field.
func (o *Customer) SetShippingAddress(v Address) {
	o.ShippingAddress = &v
}

// GetDob returns the Dob field value if set, zero value otherwise.
func (o *Customer) GetDob() string {
	if o == nil || o.Dob == nil {
		var ret string
		return ret
	}
	return *o.Dob
}

// GetDobOk returns a tuple with the Dob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetDobOk() (*string, bool) {
	if o == nil || o.Dob == nil {
		return nil, false
	}
	return o.Dob, true
}

// HasDob returns a boolean if a field has been set.
func (o *Customer) HasDob() bool {
	if o != nil && o.Dob != nil {
		return true
	}

	return false
}

// SetDob gets a reference to the given string and assigns it to the Dob field.
func (o *Customer) SetDob(v string) {
	o.Dob = &v
}

// GetSsn returns the Ssn field value if set, zero value otherwise.
func (o *Customer) GetSsn() string {
	if o == nil || o.Ssn == nil {
		var ret string
		return ret
	}
	return *o.Ssn
}

// GetSsnOk returns a tuple with the Ssn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetSsnOk() (*string, bool) {
	if o == nil || o.Ssn == nil {
		return nil, false
	}
	return o.Ssn, true
}

// HasSsn returns a boolean if a field has been set.
func (o *Customer) HasSsn() bool {
	if o != nil && o.Ssn != nil {
		return true
	}

	return false
}

// SetSsn gets a reference to the given string and assigns it to the Ssn field.
func (o *Customer) SetSsn(v string) {
	o.Ssn = &v
}

// GetSsnLastFour returns the SsnLastFour field value if set, zero value otherwise.
func (o *Customer) GetSsnLastFour() string {
	if o == nil || o.SsnLastFour == nil {
		var ret string
		return ret
	}
	return *o.SsnLastFour
}

// GetSsnLastFourOk returns a tuple with the SsnLastFour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetSsnLastFourOk() (*string, bool) {
	if o == nil || o.SsnLastFour == nil {
		return nil, false
	}
	return o.SsnLastFour, true
}

// HasSsnLastFour returns a boolean if a field has been set.
func (o *Customer) HasSsnLastFour() bool {
	if o != nil && o.SsnLastFour != nil {
		return true
	}

	return false
}

// SetSsnLastFour gets a reference to the given string and assigns it to the SsnLastFour field.
func (o *Customer) SetSsnLastFour(v string) {
	o.SsnLastFour = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Customer) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Customer) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Customer) SetEmail(v string) {
	o.Email = &v
}

// GetMobilePhoneNumber returns the MobilePhoneNumber field value if set, zero value otherwise.
func (o *Customer) GetMobilePhoneNumber() string {
	if o == nil || o.MobilePhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.MobilePhoneNumber
}

// GetMobilePhoneNumberOk returns a tuple with the MobilePhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetMobilePhoneNumberOk() (*string, bool) {
	if o == nil || o.MobilePhoneNumber == nil {
		return nil, false
	}
	return o.MobilePhoneNumber, true
}

// HasMobilePhoneNumber returns a boolean if a field has been set.
func (o *Customer) HasMobilePhoneNumber() bool {
	if o != nil && o.MobilePhoneNumber != nil {
		return true
	}

	return false
}

// SetMobilePhoneNumber gets a reference to the given string and assigns it to the MobilePhoneNumber field.
func (o *Customer) SetMobilePhoneNumber(v string) {
	o.MobilePhoneNumber = &v
}

// GetAltPhoneNumber returns the AltPhoneNumber field value if set, zero value otherwise.
func (o *Customer) GetAltPhoneNumber() string {
	if o == nil || o.AltPhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.AltPhoneNumber
}

// GetAltPhoneNumberOk returns a tuple with the AltPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAltPhoneNumberOk() (*string, bool) {
	if o == nil || o.AltPhoneNumber == nil {
		return nil, false
	}
	return o.AltPhoneNumber, true
}

// HasAltPhoneNumber returns a boolean if a field has been set.
func (o *Customer) HasAltPhoneNumber() bool {
	if o != nil && o.AltPhoneNumber != nil {
		return true
	}

	return false
}

// SetAltPhoneNumber gets a reference to the given string and assigns it to the AltPhoneNumber field.
func (o *Customer) SetAltPhoneNumber(v string) {
	o.AltPhoneNumber = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *Customer) GetCreationTime() time.Time {
	if o == nil || o.CreationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *Customer) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *Customer) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *Customer) GetLastUpdatedTime() time.Time {
	if o == nil || o.LastUpdatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastUpdatedTime == nil {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *Customer) HasLastUpdatedTime() bool {
	if o != nil && o.LastUpdatedTime != nil {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given time.Time and assigns it to the LastUpdatedTime field.
func (o *Customer) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = &v
}

// GetDevices returns the Devices field value if set, zero value otherwise.
func (o *Customer) GetDevices() []Device {
	if o == nil || o.Devices == nil {
		var ret []Device
		return ret
	}
	return *o.Devices
}

// GetDevicesOk returns a tuple with the Devices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetDevicesOk() (*[]Device, bool) {
	if o == nil || o.Devices == nil {
		return nil, false
	}
	return o.Devices, true
}

// HasDevices returns a boolean if a field has been set.
func (o *Customer) HasDevices() bool {
	if o != nil && o.Devices != nil {
		return true
	}

	return false
}

// SetDevices gets a reference to the given []Device and assigns it to the Devices field.
func (o *Customer) SetDevices(v []Device) {
	o.Devices = &v
}

// GetRelatedCustomers returns the RelatedCustomers field value if set, zero value otherwise.
func (o *Customer) GetRelatedCustomers() []Relationship1 {
	if o == nil || o.RelatedCustomers == nil {
		var ret []Relationship1
		return ret
	}
	return *o.RelatedCustomers
}

// GetRelatedCustomersOk returns a tuple with the RelatedCustomers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetRelatedCustomersOk() (*[]Relationship1, bool) {
	if o == nil || o.RelatedCustomers == nil {
		return nil, false
	}
	return o.RelatedCustomers, true
}

// HasRelatedCustomers returns a boolean if a field has been set.
func (o *Customer) HasRelatedCustomers() bool {
	if o != nil && o.RelatedCustomers != nil {
		return true
	}

	return false
}

// SetRelatedCustomers gets a reference to the given []Relationship1 and assigns it to the RelatedCustomers field.
func (o *Customer) SetRelatedCustomers(v []Relationship1) {
	o.RelatedCustomers = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *Customer) GetAccounts() []Account {
	if o == nil || o.Accounts == nil {
		var ret []Account
		return ret
	}
	return *o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAccountsOk() (*[]Account, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *Customer) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []Account and assigns it to the Accounts field.
func (o *Customer) SetAccounts(v []Account) {
	o.Accounts = &v
}

func (o Customer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.MiddleName != nil {
		toSerialize["middle_name"] = o.MiddleName
	}
	if o.LegalAddress != nil {
		toSerialize["legal_address"] = o.LegalAddress
	}
	if o.ShippingAddress != nil {
		toSerialize["shipping_address"] = o.ShippingAddress
	}
	if o.Dob != nil {
		toSerialize["dob"] = o.Dob
	}
	if o.Ssn != nil {
		toSerialize["ssn"] = o.Ssn
	}
	if o.SsnLastFour != nil {
		toSerialize["ssn_last_four"] = o.SsnLastFour
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.MobilePhoneNumber != nil {
		toSerialize["mobile_phone_number"] = o.MobilePhoneNumber
	}
	if o.AltPhoneNumber != nil {
		toSerialize["alt_phone_number"] = o.AltPhoneNumber
	}
	if o.CreationTime != nil {
		toSerialize["creation_time"] = o.CreationTime
	}
	if o.LastUpdatedTime != nil {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if o.Devices != nil {
		toSerialize["devices"] = o.Devices
	}
	if o.RelatedCustomers != nil {
		toSerialize["related_customers"] = o.RelatedCustomers
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	return json.Marshal(toSerialize)
}

type NullableCustomer struct {
	value *Customer
	isSet bool
}

func (v NullableCustomer) Get() *Customer {
	return v.value
}

func (v *NullableCustomer) Set(val *Customer) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomer(val *Customer) *NullableCustomer {
	return &NullableCustomer{value: val, isSet: true}
}

func (v NullableCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


