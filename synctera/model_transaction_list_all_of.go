/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// TransactionListAllOf struct for TransactionListAllOf
type TransactionListAllOf struct {
	// Array of transactions
	Transactions []Transaction `json:"transactions"`
}

// NewTransactionListAllOf instantiates a new TransactionListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionListAllOf(transactions []Transaction) *TransactionListAllOf {
	this := TransactionListAllOf{}
	this.Transactions = transactions
	return &this
}

// NewTransactionListAllOfWithDefaults instantiates a new TransactionListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionListAllOfWithDefaults() *TransactionListAllOf {
	this := TransactionListAllOf{}
	return &this
}

// GetTransactions returns the Transactions field value
func (o *TransactionListAllOf) GetTransactions() []Transaction {
	if o == nil {
		var ret []Transaction
		return ret
	}

	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value
// and a boolean to check if the value has been set.
func (o *TransactionListAllOf) GetTransactionsOk() (*[]Transaction, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Transactions, true
}

// SetTransactions sets field value
func (o *TransactionListAllOf) SetTransactions(v []Transaction) {
	o.Transactions = v
}

func (o TransactionListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["transactions"] = o.Transactions
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionListAllOf struct {
	value *TransactionListAllOf
	isSet bool
}

func (v NullableTransactionListAllOf) Get() *TransactionListAllOf {
	return v.value
}

func (v *NullableTransactionListAllOf) Set(val *TransactionListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionListAllOf(val *TransactionListAllOf) *NullableTransactionListAllOf {
	return &NullableTransactionListAllOf{value: val, isSet: true}
}

func (v NullableTransactionListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


