/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// AccountCreation struct for AccountCreation
type AccountCreation struct {
	// Access status for account. Default ACTIVE
	AccessStatus *string `json:"access_status,omitempty"`
	// Account number
	AccountNumber *string `json:"account_number,omitempty"`
	// Account template ID
	AccountTemplateId *string `json:"account_template_id,omitempty"`
	// Account template version
	AccountTemplateVersion *float32 `json:"account_template_version,omitempty"`
	AccountType *AccountType `json:"account_type,omitempty"`
	// A list of balances for account based on different type
	Balances *[]Balance `json:"balances,omitempty"`
	// Account currency or account settlement currency. ISO 4217 alphabetic currency code. Default USD
	Currency *string `json:"currency,omitempty"`
	// Exchange rate type
	ExchangeRateType *string `json:"exchange_rate_type,omitempty"`
	// International bank account number
	Iban *string `json:"iban,omitempty"`
	// Account ID
	Id *string `json:"id,omitempty"`
	// Account is investment (variable balance) account or a multi-balance account pool. Default false
	IsAccountPool *bool `json:"is_account_pool,omitempty"`
	// The most recent 10 transactions of the account
	RecentTransactions *[]Transaction `json:"recent_transactions,omitempty"`
	Status *Status `json:"status,omitempty"`
	// SWIFT code
	SwiftCode *string `json:"swift_code,omitempty"`
	// A list of the aliases for account. Account alias is the account number of different balance types to link to the same account ID
	Aliases *[]Alias `json:"aliases,omitempty"`
	// List of the relationship for this account to the parties
	Relationships *[]Relationship `json:"relationships,omitempty"`
}

// NewAccountCreation instantiates a new AccountCreation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountCreation() *AccountCreation {
	this := AccountCreation{}
	return &this
}

// NewAccountCreationWithDefaults instantiates a new AccountCreation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountCreationWithDefaults() *AccountCreation {
	this := AccountCreation{}
	return &this
}

// GetAccessStatus returns the AccessStatus field value if set, zero value otherwise.
func (o *AccountCreation) GetAccessStatus() string {
	if o == nil || o.AccessStatus == nil {
		var ret string
		return ret
	}
	return *o.AccessStatus
}

// GetAccessStatusOk returns a tuple with the AccessStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetAccessStatusOk() (*string, bool) {
	if o == nil || o.AccessStatus == nil {
		return nil, false
	}
	return o.AccessStatus, true
}

// HasAccessStatus returns a boolean if a field has been set.
func (o *AccountCreation) HasAccessStatus() bool {
	if o != nil && o.AccessStatus != nil {
		return true
	}

	return false
}

// SetAccessStatus gets a reference to the given string and assigns it to the AccessStatus field.
func (o *AccountCreation) SetAccessStatus(v string) {
	o.AccessStatus = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *AccountCreation) GetAccountNumber() string {
	if o == nil || o.AccountNumber == nil {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetAccountNumberOk() (*string, bool) {
	if o == nil || o.AccountNumber == nil {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *AccountCreation) HasAccountNumber() bool {
	if o != nil && o.AccountNumber != nil {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *AccountCreation) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetAccountTemplateId returns the AccountTemplateId field value if set, zero value otherwise.
func (o *AccountCreation) GetAccountTemplateId() string {
	if o == nil || o.AccountTemplateId == nil {
		var ret string
		return ret
	}
	return *o.AccountTemplateId
}

// GetAccountTemplateIdOk returns a tuple with the AccountTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetAccountTemplateIdOk() (*string, bool) {
	if o == nil || o.AccountTemplateId == nil {
		return nil, false
	}
	return o.AccountTemplateId, true
}

// HasAccountTemplateId returns a boolean if a field has been set.
func (o *AccountCreation) HasAccountTemplateId() bool {
	if o != nil && o.AccountTemplateId != nil {
		return true
	}

	return false
}

// SetAccountTemplateId gets a reference to the given string and assigns it to the AccountTemplateId field.
func (o *AccountCreation) SetAccountTemplateId(v string) {
	o.AccountTemplateId = &v
}

// GetAccountTemplateVersion returns the AccountTemplateVersion field value if set, zero value otherwise.
func (o *AccountCreation) GetAccountTemplateVersion() float32 {
	if o == nil || o.AccountTemplateVersion == nil {
		var ret float32
		return ret
	}
	return *o.AccountTemplateVersion
}

// GetAccountTemplateVersionOk returns a tuple with the AccountTemplateVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetAccountTemplateVersionOk() (*float32, bool) {
	if o == nil || o.AccountTemplateVersion == nil {
		return nil, false
	}
	return o.AccountTemplateVersion, true
}

// HasAccountTemplateVersion returns a boolean if a field has been set.
func (o *AccountCreation) HasAccountTemplateVersion() bool {
	if o != nil && o.AccountTemplateVersion != nil {
		return true
	}

	return false
}

// SetAccountTemplateVersion gets a reference to the given float32 and assigns it to the AccountTemplateVersion field.
func (o *AccountCreation) SetAccountTemplateVersion(v float32) {
	o.AccountTemplateVersion = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *AccountCreation) GetAccountType() AccountType {
	if o == nil || o.AccountType == nil {
		var ret AccountType
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil || o.AccountType == nil {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *AccountCreation) HasAccountType() bool {
	if o != nil && o.AccountType != nil {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given AccountType and assigns it to the AccountType field.
func (o *AccountCreation) SetAccountType(v AccountType) {
	o.AccountType = &v
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *AccountCreation) GetBalances() []Balance {
	if o == nil || o.Balances == nil {
		var ret []Balance
		return ret
	}
	return *o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetBalancesOk() (*[]Balance, bool) {
	if o == nil || o.Balances == nil {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *AccountCreation) HasBalances() bool {
	if o != nil && o.Balances != nil {
		return true
	}

	return false
}

// SetBalances gets a reference to the given []Balance and assigns it to the Balances field.
func (o *AccountCreation) SetBalances(v []Balance) {
	o.Balances = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *AccountCreation) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *AccountCreation) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *AccountCreation) SetCurrency(v string) {
	o.Currency = &v
}

// GetExchangeRateType returns the ExchangeRateType field value if set, zero value otherwise.
func (o *AccountCreation) GetExchangeRateType() string {
	if o == nil || o.ExchangeRateType == nil {
		var ret string
		return ret
	}
	return *o.ExchangeRateType
}

// GetExchangeRateTypeOk returns a tuple with the ExchangeRateType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetExchangeRateTypeOk() (*string, bool) {
	if o == nil || o.ExchangeRateType == nil {
		return nil, false
	}
	return o.ExchangeRateType, true
}

// HasExchangeRateType returns a boolean if a field has been set.
func (o *AccountCreation) HasExchangeRateType() bool {
	if o != nil && o.ExchangeRateType != nil {
		return true
	}

	return false
}

// SetExchangeRateType gets a reference to the given string and assigns it to the ExchangeRateType field.
func (o *AccountCreation) SetExchangeRateType(v string) {
	o.ExchangeRateType = &v
}

// GetIban returns the Iban field value if set, zero value otherwise.
func (o *AccountCreation) GetIban() string {
	if o == nil || o.Iban == nil {
		var ret string
		return ret
	}
	return *o.Iban
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetIbanOk() (*string, bool) {
	if o == nil || o.Iban == nil {
		return nil, false
	}
	return o.Iban, true
}

// HasIban returns a boolean if a field has been set.
func (o *AccountCreation) HasIban() bool {
	if o != nil && o.Iban != nil {
		return true
	}

	return false
}

// SetIban gets a reference to the given string and assigns it to the Iban field.
func (o *AccountCreation) SetIban(v string) {
	o.Iban = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AccountCreation) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AccountCreation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AccountCreation) SetId(v string) {
	o.Id = &v
}

// GetIsAccountPool returns the IsAccountPool field value if set, zero value otherwise.
func (o *AccountCreation) GetIsAccountPool() bool {
	if o == nil || o.IsAccountPool == nil {
		var ret bool
		return ret
	}
	return *o.IsAccountPool
}

// GetIsAccountPoolOk returns a tuple with the IsAccountPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetIsAccountPoolOk() (*bool, bool) {
	if o == nil || o.IsAccountPool == nil {
		return nil, false
	}
	return o.IsAccountPool, true
}

// HasIsAccountPool returns a boolean if a field has been set.
func (o *AccountCreation) HasIsAccountPool() bool {
	if o != nil && o.IsAccountPool != nil {
		return true
	}

	return false
}

// SetIsAccountPool gets a reference to the given bool and assigns it to the IsAccountPool field.
func (o *AccountCreation) SetIsAccountPool(v bool) {
	o.IsAccountPool = &v
}

// GetRecentTransactions returns the RecentTransactions field value if set, zero value otherwise.
func (o *AccountCreation) GetRecentTransactions() []Transaction {
	if o == nil || o.RecentTransactions == nil {
		var ret []Transaction
		return ret
	}
	return *o.RecentTransactions
}

// GetRecentTransactionsOk returns a tuple with the RecentTransactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetRecentTransactionsOk() (*[]Transaction, bool) {
	if o == nil || o.RecentTransactions == nil {
		return nil, false
	}
	return o.RecentTransactions, true
}

// HasRecentTransactions returns a boolean if a field has been set.
func (o *AccountCreation) HasRecentTransactions() bool {
	if o != nil && o.RecentTransactions != nil {
		return true
	}

	return false
}

// SetRecentTransactions gets a reference to the given []Transaction and assigns it to the RecentTransactions field.
func (o *AccountCreation) SetRecentTransactions(v []Transaction) {
	o.RecentTransactions = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AccountCreation) GetStatus() Status {
	if o == nil || o.Status == nil {
		var ret Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetStatusOk() (*Status, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AccountCreation) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given Status and assigns it to the Status field.
func (o *AccountCreation) SetStatus(v Status) {
	o.Status = &v
}

// GetSwiftCode returns the SwiftCode field value if set, zero value otherwise.
func (o *AccountCreation) GetSwiftCode() string {
	if o == nil || o.SwiftCode == nil {
		var ret string
		return ret
	}
	return *o.SwiftCode
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetSwiftCodeOk() (*string, bool) {
	if o == nil || o.SwiftCode == nil {
		return nil, false
	}
	return o.SwiftCode, true
}

// HasSwiftCode returns a boolean if a field has been set.
func (o *AccountCreation) HasSwiftCode() bool {
	if o != nil && o.SwiftCode != nil {
		return true
	}

	return false
}

// SetSwiftCode gets a reference to the given string and assigns it to the SwiftCode field.
func (o *AccountCreation) SetSwiftCode(v string) {
	o.SwiftCode = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *AccountCreation) GetAliases() []Alias {
	if o == nil || o.Aliases == nil {
		var ret []Alias
		return ret
	}
	return *o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetAliasesOk() (*[]Alias, bool) {
	if o == nil || o.Aliases == nil {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *AccountCreation) HasAliases() bool {
	if o != nil && o.Aliases != nil {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []Alias and assigns it to the Aliases field.
func (o *AccountCreation) SetAliases(v []Alias) {
	o.Aliases = &v
}

// GetRelationships returns the Relationships field value if set, zero value otherwise.
func (o *AccountCreation) GetRelationships() []Relationship {
	if o == nil || o.Relationships == nil {
		var ret []Relationship
		return ret
	}
	return *o.Relationships
}

// GetRelationshipsOk returns a tuple with the Relationships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCreation) GetRelationshipsOk() (*[]Relationship, bool) {
	if o == nil || o.Relationships == nil {
		return nil, false
	}
	return o.Relationships, true
}

// HasRelationships returns a boolean if a field has been set.
func (o *AccountCreation) HasRelationships() bool {
	if o != nil && o.Relationships != nil {
		return true
	}

	return false
}

// SetRelationships gets a reference to the given []Relationship and assigns it to the Relationships field.
func (o *AccountCreation) SetRelationships(v []Relationship) {
	o.Relationships = &v
}

func (o AccountCreation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessStatus != nil {
		toSerialize["access_status"] = o.AccessStatus
	}
	if o.AccountNumber != nil {
		toSerialize["account_number"] = o.AccountNumber
	}
	if o.AccountTemplateId != nil {
		toSerialize["account_template_id"] = o.AccountTemplateId
	}
	if o.AccountTemplateVersion != nil {
		toSerialize["account_template_version"] = o.AccountTemplateVersion
	}
	if o.AccountType != nil {
		toSerialize["account_type"] = o.AccountType
	}
	if o.Balances != nil {
		toSerialize["balances"] = o.Balances
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.ExchangeRateType != nil {
		toSerialize["exchange_rate_type"] = o.ExchangeRateType
	}
	if o.Iban != nil {
		toSerialize["iban"] = o.Iban
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsAccountPool != nil {
		toSerialize["is_account_pool"] = o.IsAccountPool
	}
	if o.RecentTransactions != nil {
		toSerialize["recent_transactions"] = o.RecentTransactions
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.SwiftCode != nil {
		toSerialize["swift_code"] = o.SwiftCode
	}
	if o.Aliases != nil {
		toSerialize["aliases"] = o.Aliases
	}
	if o.Relationships != nil {
		toSerialize["relationships"] = o.Relationships
	}
	return json.Marshal(toSerialize)
}

type NullableAccountCreation struct {
	value *AccountCreation
	isSet bool
}

func (v NullableAccountCreation) Get() *AccountCreation {
	return v.value
}

func (v *NullableAccountCreation) Set(val *AccountCreation) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountCreation) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountCreation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountCreation(val *AccountCreation) *NullableAccountCreation {
	return &NullableAccountCreation{value: val, isSet: true}
}

func (v NullableAccountCreation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountCreation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


