/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// Scan Scanning image to be used for remote deposit capture
type Scan struct {
	// RDC Scan ID
	Id string `json:"id"`
	// Account number
	AccountNumber string `json:"account_number"`
	// Bank routing number
	RoutingNumber string `json:"routing_number"`
	// Amount on check in ISO 4217 minor currency units
	CheckAmount int32 `json:"check_amount"`
	// ISO 4217 currency code for the check amount
	CheckCurrency string `json:"check_currency"`
	// Date the check image was scanned, in RFC 3339 format
	DateScanned string `json:"date_scanned"`
	// ID of the image of the front of the check
	FrontImageId string `json:"front_image_id"`
	// ID of the image of the back of the check
	BackImageId string `json:"back_image_id"`
}

// NewScan instantiates a new Scan object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScan(id string, accountNumber string, routingNumber string, checkAmount int32, checkCurrency string, dateScanned string, frontImageId string, backImageId string) *Scan {
	this := Scan{}
	this.Id = id
	this.AccountNumber = accountNumber
	this.RoutingNumber = routingNumber
	this.CheckAmount = checkAmount
	this.CheckCurrency = checkCurrency
	this.DateScanned = dateScanned
	this.FrontImageId = frontImageId
	this.BackImageId = backImageId
	return &this
}

// NewScanWithDefaults instantiates a new Scan object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanWithDefaults() *Scan {
	this := Scan{}
	return &this
}

// GetId returns the Id field value
func (o *Scan) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Scan) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Scan) SetId(v string) {
	o.Id = v
}

// GetAccountNumber returns the AccountNumber field value
func (o *Scan) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *Scan) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *Scan) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetRoutingNumber returns the RoutingNumber field value
func (o *Scan) GetRoutingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value
// and a boolean to check if the value has been set.
func (o *Scan) GetRoutingNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoutingNumber, true
}

// SetRoutingNumber sets field value
func (o *Scan) SetRoutingNumber(v string) {
	o.RoutingNumber = v
}

// GetCheckAmount returns the CheckAmount field value
func (o *Scan) GetCheckAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CheckAmount
}

// GetCheckAmountOk returns a tuple with the CheckAmount field value
// and a boolean to check if the value has been set.
func (o *Scan) GetCheckAmountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckAmount, true
}

// SetCheckAmount sets field value
func (o *Scan) SetCheckAmount(v int32) {
	o.CheckAmount = v
}

// GetCheckCurrency returns the CheckCurrency field value
func (o *Scan) GetCheckCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckCurrency
}

// GetCheckCurrencyOk returns a tuple with the CheckCurrency field value
// and a boolean to check if the value has been set.
func (o *Scan) GetCheckCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckCurrency, true
}

// SetCheckCurrency sets field value
func (o *Scan) SetCheckCurrency(v string) {
	o.CheckCurrency = v
}

// GetDateScanned returns the DateScanned field value
func (o *Scan) GetDateScanned() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateScanned
}

// GetDateScannedOk returns a tuple with the DateScanned field value
// and a boolean to check if the value has been set.
func (o *Scan) GetDateScannedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateScanned, true
}

// SetDateScanned sets field value
func (o *Scan) SetDateScanned(v string) {
	o.DateScanned = v
}

// GetFrontImageId returns the FrontImageId field value
func (o *Scan) GetFrontImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrontImageId
}

// GetFrontImageIdOk returns a tuple with the FrontImageId field value
// and a boolean to check if the value has been set.
func (o *Scan) GetFrontImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FrontImageId, true
}

// SetFrontImageId sets field value
func (o *Scan) SetFrontImageId(v string) {
	o.FrontImageId = v
}

// GetBackImageId returns the BackImageId field value
func (o *Scan) GetBackImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackImageId
}

// GetBackImageIdOk returns a tuple with the BackImageId field value
// and a boolean to check if the value has been set.
func (o *Scan) GetBackImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackImageId, true
}

// SetBackImageId sets field value
func (o *Scan) SetBackImageId(v string) {
	o.BackImageId = v
}

func (o Scan) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	if true {
		toSerialize["routing_number"] = o.RoutingNumber
	}
	if true {
		toSerialize["check_amount"] = o.CheckAmount
	}
	if true {
		toSerialize["check_currency"] = o.CheckCurrency
	}
	if true {
		toSerialize["date_scanned"] = o.DateScanned
	}
	if true {
		toSerialize["front_image_id"] = o.FrontImageId
	}
	if true {
		toSerialize["back_image_id"] = o.BackImageId
	}
	return json.Marshal(toSerialize)
}

type NullableScan struct {
	value *Scan
	isSet bool
}

func (v NullableScan) Get() *Scan {
	return v.value
}

func (v *NullableScan) Set(val *Scan) {
	v.value = val
	v.isSet = true
}

func (v NullableScan) IsSet() bool {
	return v.isSet
}

func (v *NullableScan) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScan(val *Scan) *NullableScan {
	return &NullableScan{value: val, isSet: true}
}

func (v NullableScan) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScan) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


