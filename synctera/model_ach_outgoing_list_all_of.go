/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// AchOutgoingListAllOf struct for AchOutgoingListAllOf
type AchOutgoingListAllOf struct {
	// Array of ACH
	AchOutgoings []AchOutgoing `json:"ach_outgoings"`
}

// NewAchOutgoingListAllOf instantiates a new AchOutgoingListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAchOutgoingListAllOf(achOutgoings []AchOutgoing) *AchOutgoingListAllOf {
	this := AchOutgoingListAllOf{}
	this.AchOutgoings = achOutgoings
	return &this
}

// NewAchOutgoingListAllOfWithDefaults instantiates a new AchOutgoingListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAchOutgoingListAllOfWithDefaults() *AchOutgoingListAllOf {
	this := AchOutgoingListAllOf{}
	return &this
}

// GetAchOutgoings returns the AchOutgoings field value
func (o *AchOutgoingListAllOf) GetAchOutgoings() []AchOutgoing {
	if o == nil {
		var ret []AchOutgoing
		return ret
	}

	return o.AchOutgoings
}

// GetAchOutgoingsOk returns a tuple with the AchOutgoings field value
// and a boolean to check if the value has been set.
func (o *AchOutgoingListAllOf) GetAchOutgoingsOk() (*[]AchOutgoing, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AchOutgoings, true
}

// SetAchOutgoings sets field value
func (o *AchOutgoingListAllOf) SetAchOutgoings(v []AchOutgoing) {
	o.AchOutgoings = v
}

func (o AchOutgoingListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ach_outgoings"] = o.AchOutgoings
	}
	return json.Marshal(toSerialize)
}

type NullableAchOutgoingListAllOf struct {
	value *AchOutgoingListAllOf
	isSet bool
}

func (v NullableAchOutgoingListAllOf) Get() *AchOutgoingListAllOf {
	return v.value
}

func (v *NullableAchOutgoingListAllOf) Set(val *AchOutgoingListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAchOutgoingListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAchOutgoingListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAchOutgoingListAllOf(val *AchOutgoingListAllOf) *NullableAchOutgoingListAllOf {
	return &NullableAchOutgoingListAllOf{value: val, isSet: true}
}

func (v NullableAchOutgoingListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAchOutgoingListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


