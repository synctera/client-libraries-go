/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// InlineObject3 struct for InlineObject3
type InlineObject3 struct {
	// Set true to let the current secret expire in the next 24 hours. Set false to let the current secret expire immediately.
	IsRollingSecret *bool `json:"is_rolling_secret,omitempty"`
}

// NewInlineObject3 instantiates a new InlineObject3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject3() *InlineObject3 {
	this := InlineObject3{}
	return &this
}

// NewInlineObject3WithDefaults instantiates a new InlineObject3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject3WithDefaults() *InlineObject3 {
	this := InlineObject3{}
	return &this
}

// GetIsRollingSecret returns the IsRollingSecret field value if set, zero value otherwise.
func (o *InlineObject3) GetIsRollingSecret() bool {
	if o == nil || o.IsRollingSecret == nil {
		var ret bool
		return ret
	}
	return *o.IsRollingSecret
}

// GetIsRollingSecretOk returns a tuple with the IsRollingSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject3) GetIsRollingSecretOk() (*bool, bool) {
	if o == nil || o.IsRollingSecret == nil {
		return nil, false
	}
	return o.IsRollingSecret, true
}

// HasIsRollingSecret returns a boolean if a field has been set.
func (o *InlineObject3) HasIsRollingSecret() bool {
	if o != nil && o.IsRollingSecret != nil {
		return true
	}

	return false
}

// SetIsRollingSecret gets a reference to the given bool and assigns it to the IsRollingSecret field.
func (o *InlineObject3) SetIsRollingSecret(v bool) {
	o.IsRollingSecret = &v
}

func (o InlineObject3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsRollingSecret != nil {
		toSerialize["is_rolling_secret"] = o.IsRollingSecret
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject3 struct {
	value *InlineObject3
	isSet bool
}

func (v NullableInlineObject3) Get() *InlineObject3 {
	return v.value
}

func (v *NullableInlineObject3) Set(val *InlineObject3) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject3) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject3(val *InlineObject3) *NullableInlineObject3 {
	return &NullableInlineObject3{value: val, isSet: true}
}

func (v NullableInlineObject3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


