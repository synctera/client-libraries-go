/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// Deposit Deposit using remote deposit capture
type Deposit struct {
	// Account number
	AccountNumber string `json:"account_number"`
	// ID of the image of the back of the check
	BackImageId string `json:"back_image_id"`
	// Amount on check in ISO 4217 minor currency units
	CheckAmount int32 `json:"check_amount"`
	// ISO 4217 currency code for the check amount
	CheckCurrency string `json:"check_currency"`
	// Date the deposit was processed, in RFC 3339 format
	DateProcessed string `json:"date_processed"`
	// Date the deposit was submitted, in RFC 3339 format
	DateSubmitted string `json:"date_submitted"`
	// Amount deposited in ISO 4217 minor currency units
	DepositAmount int32 `json:"deposit_amount"`
	// ISO 4217 currency code for the deposit amount
	DepositCurrency string `json:"deposit_currency"`
	// ID of the image of the front of the check
	FrontImageId string `json:"front_image_id"`
	// RDC Deposit ID
	Id string `json:"id"`
	// Bank routing number
	RoutingNumber string `json:"routing_number"`
	// ID of the OCR scan of the check image
	ScanId string `json:"scan_id"`
}

// NewDeposit instantiates a new Deposit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeposit(accountNumber string, backImageId string, checkAmount int32, checkCurrency string, dateProcessed string, dateSubmitted string, depositAmount int32, depositCurrency string, frontImageId string, id string, routingNumber string, scanId string) *Deposit {
	this := Deposit{}
	this.AccountNumber = accountNumber
	this.BackImageId = backImageId
	this.CheckAmount = checkAmount
	this.CheckCurrency = checkCurrency
	this.DateProcessed = dateProcessed
	this.DateSubmitted = dateSubmitted
	this.DepositAmount = depositAmount
	this.DepositCurrency = depositCurrency
	this.FrontImageId = frontImageId
	this.Id = id
	this.RoutingNumber = routingNumber
	this.ScanId = scanId
	return &this
}

// NewDepositWithDefaults instantiates a new Deposit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDepositWithDefaults() *Deposit {
	this := Deposit{}
	return &this
}

// GetAccountNumber returns the AccountNumber field value
func (o *Deposit) GetAccountNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetAccountNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountNumber, true
}

// SetAccountNumber sets field value
func (o *Deposit) SetAccountNumber(v string) {
	o.AccountNumber = v
}

// GetBackImageId returns the BackImageId field value
func (o *Deposit) GetBackImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackImageId
}

// GetBackImageIdOk returns a tuple with the BackImageId field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetBackImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BackImageId, true
}

// SetBackImageId sets field value
func (o *Deposit) SetBackImageId(v string) {
	o.BackImageId = v
}

// GetCheckAmount returns the CheckAmount field value
func (o *Deposit) GetCheckAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CheckAmount
}

// GetCheckAmountOk returns a tuple with the CheckAmount field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetCheckAmountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckAmount, true
}

// SetCheckAmount sets field value
func (o *Deposit) SetCheckAmount(v int32) {
	o.CheckAmount = v
}

// GetCheckCurrency returns the CheckCurrency field value
func (o *Deposit) GetCheckCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckCurrency
}

// GetCheckCurrencyOk returns a tuple with the CheckCurrency field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetCheckCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckCurrency, true
}

// SetCheckCurrency sets field value
func (o *Deposit) SetCheckCurrency(v string) {
	o.CheckCurrency = v
}

// GetDateProcessed returns the DateProcessed field value
func (o *Deposit) GetDateProcessed() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateProcessed
}

// GetDateProcessedOk returns a tuple with the DateProcessed field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetDateProcessedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateProcessed, true
}

// SetDateProcessed sets field value
func (o *Deposit) SetDateProcessed(v string) {
	o.DateProcessed = v
}

// GetDateSubmitted returns the DateSubmitted field value
func (o *Deposit) GetDateSubmitted() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateSubmitted
}

// GetDateSubmittedOk returns a tuple with the DateSubmitted field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetDateSubmittedOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DateSubmitted, true
}

// SetDateSubmitted sets field value
func (o *Deposit) SetDateSubmitted(v string) {
	o.DateSubmitted = v
}

// GetDepositAmount returns the DepositAmount field value
func (o *Deposit) GetDepositAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DepositAmount
}

// GetDepositAmountOk returns a tuple with the DepositAmount field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetDepositAmountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DepositAmount, true
}

// SetDepositAmount sets field value
func (o *Deposit) SetDepositAmount(v int32) {
	o.DepositAmount = v
}

// GetDepositCurrency returns the DepositCurrency field value
func (o *Deposit) GetDepositCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DepositCurrency
}

// GetDepositCurrencyOk returns a tuple with the DepositCurrency field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetDepositCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DepositCurrency, true
}

// SetDepositCurrency sets field value
func (o *Deposit) SetDepositCurrency(v string) {
	o.DepositCurrency = v
}

// GetFrontImageId returns the FrontImageId field value
func (o *Deposit) GetFrontImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FrontImageId
}

// GetFrontImageIdOk returns a tuple with the FrontImageId field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetFrontImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FrontImageId, true
}

// SetFrontImageId sets field value
func (o *Deposit) SetFrontImageId(v string) {
	o.FrontImageId = v
}

// GetId returns the Id field value
func (o *Deposit) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Deposit) SetId(v string) {
	o.Id = v
}

// GetRoutingNumber returns the RoutingNumber field value
func (o *Deposit) GetRoutingNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetRoutingNumberOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.RoutingNumber, true
}

// SetRoutingNumber sets field value
func (o *Deposit) SetRoutingNumber(v string) {
	o.RoutingNumber = v
}

// GetScanId returns the ScanId field value
func (o *Deposit) GetScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value
// and a boolean to check if the value has been set.
func (o *Deposit) GetScanIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ScanId, true
}

// SetScanId sets field value
func (o *Deposit) SetScanId(v string) {
	o.ScanId = v
}

func (o Deposit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_number"] = o.AccountNumber
	}
	if true {
		toSerialize["back_image_id"] = o.BackImageId
	}
	if true {
		toSerialize["check_amount"] = o.CheckAmount
	}
	if true {
		toSerialize["check_currency"] = o.CheckCurrency
	}
	if true {
		toSerialize["date_processed"] = o.DateProcessed
	}
	if true {
		toSerialize["date_submitted"] = o.DateSubmitted
	}
	if true {
		toSerialize["deposit_amount"] = o.DepositAmount
	}
	if true {
		toSerialize["deposit_currency"] = o.DepositCurrency
	}
	if true {
		toSerialize["front_image_id"] = o.FrontImageId
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["routing_number"] = o.RoutingNumber
	}
	if true {
		toSerialize["scan_id"] = o.ScanId
	}
	return json.Marshal(toSerialize)
}

type NullableDeposit struct {
	value *Deposit
	isSet bool
}

func (v NullableDeposit) Get() *Deposit {
	return v.value
}

func (v *NullableDeposit) Set(val *Deposit) {
	v.value = val
	v.isSet = true
}

func (v NullableDeposit) IsSet() bool {
	return v.isSet
}

func (v *NullableDeposit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeposit(val *Deposit) *NullableDeposit {
	return &NullableDeposit{value: val, isSet: true}
}

func (v NullableDeposit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeposit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


