/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// CardAcceptorModel struct for CardAcceptorModel
type CardAcceptorModel struct {
	Address *string `json:"address,omitempty"`
	City *string `json:"city,omitempty"`
	Country *string `json:"country,omitempty"`
	EcommerceSecurityLevelIndicator *string `json:"ecommerce_security_level_indicator,omitempty"`
	Mcc *string `json:"mcc,omitempty"`
	Name *string `json:"name,omitempty"`
	PartialApprovalCapable *bool `json:"partial_approval_capable,omitempty"`
	State *string `json:"state,omitempty"`
	Zip *string `json:"zip,omitempty"`
}

// NewCardAcceptorModel instantiates a new CardAcceptorModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardAcceptorModel() *CardAcceptorModel {
	this := CardAcceptorModel{}
	var partialApprovalCapable bool = false
	this.PartialApprovalCapable = &partialApprovalCapable
	return &this
}

// NewCardAcceptorModelWithDefaults instantiates a new CardAcceptorModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardAcceptorModelWithDefaults() *CardAcceptorModel {
	this := CardAcceptorModel{}
	var partialApprovalCapable bool = false
	this.PartialApprovalCapable = &partialApprovalCapable
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *CardAcceptorModel) SetAddress(v string) {
	o.Address = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *CardAcceptorModel) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *CardAcceptorModel) SetCountry(v string) {
	o.Country = &v
}

// GetEcommerceSecurityLevelIndicator returns the EcommerceSecurityLevelIndicator field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetEcommerceSecurityLevelIndicator() string {
	if o == nil || o.EcommerceSecurityLevelIndicator == nil {
		var ret string
		return ret
	}
	return *o.EcommerceSecurityLevelIndicator
}

// GetEcommerceSecurityLevelIndicatorOk returns a tuple with the EcommerceSecurityLevelIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetEcommerceSecurityLevelIndicatorOk() (*string, bool) {
	if o == nil || o.EcommerceSecurityLevelIndicator == nil {
		return nil, false
	}
	return o.EcommerceSecurityLevelIndicator, true
}

// HasEcommerceSecurityLevelIndicator returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasEcommerceSecurityLevelIndicator() bool {
	if o != nil && o.EcommerceSecurityLevelIndicator != nil {
		return true
	}

	return false
}

// SetEcommerceSecurityLevelIndicator gets a reference to the given string and assigns it to the EcommerceSecurityLevelIndicator field.
func (o *CardAcceptorModel) SetEcommerceSecurityLevelIndicator(v string) {
	o.EcommerceSecurityLevelIndicator = &v
}

// GetMcc returns the Mcc field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetMcc() string {
	if o == nil || o.Mcc == nil {
		var ret string
		return ret
	}
	return *o.Mcc
}

// GetMccOk returns a tuple with the Mcc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetMccOk() (*string, bool) {
	if o == nil || o.Mcc == nil {
		return nil, false
	}
	return o.Mcc, true
}

// HasMcc returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasMcc() bool {
	if o != nil && o.Mcc != nil {
		return true
	}

	return false
}

// SetMcc gets a reference to the given string and assigns it to the Mcc field.
func (o *CardAcceptorModel) SetMcc(v string) {
	o.Mcc = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CardAcceptorModel) SetName(v string) {
	o.Name = &v
}

// GetPartialApprovalCapable returns the PartialApprovalCapable field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetPartialApprovalCapable() bool {
	if o == nil || o.PartialApprovalCapable == nil {
		var ret bool
		return ret
	}
	return *o.PartialApprovalCapable
}

// GetPartialApprovalCapableOk returns a tuple with the PartialApprovalCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetPartialApprovalCapableOk() (*bool, bool) {
	if o == nil || o.PartialApprovalCapable == nil {
		return nil, false
	}
	return o.PartialApprovalCapable, true
}

// HasPartialApprovalCapable returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasPartialApprovalCapable() bool {
	if o != nil && o.PartialApprovalCapable != nil {
		return true
	}

	return false
}

// SetPartialApprovalCapable gets a reference to the given bool and assigns it to the PartialApprovalCapable field.
func (o *CardAcceptorModel) SetPartialApprovalCapable(v bool) {
	o.PartialApprovalCapable = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *CardAcceptorModel) SetState(v string) {
	o.State = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *CardAcceptorModel) GetZip() string {
	if o == nil || o.Zip == nil {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardAcceptorModel) GetZipOk() (*string, bool) {
	if o == nil || o.Zip == nil {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *CardAcceptorModel) HasZip() bool {
	if o != nil && o.Zip != nil {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *CardAcceptorModel) SetZip(v string) {
	o.Zip = &v
}

func (o CardAcceptorModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.EcommerceSecurityLevelIndicator != nil {
		toSerialize["ecommerce_security_level_indicator"] = o.EcommerceSecurityLevelIndicator
	}
	if o.Mcc != nil {
		toSerialize["mcc"] = o.Mcc
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PartialApprovalCapable != nil {
		toSerialize["partial_approval_capable"] = o.PartialApprovalCapable
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Zip != nil {
		toSerialize["zip"] = o.Zip
	}
	return json.Marshal(toSerialize)
}

type NullableCardAcceptorModel struct {
	value *CardAcceptorModel
	isSet bool
}

func (v NullableCardAcceptorModel) Get() *CardAcceptorModel {
	return v.value
}

func (v *NullableCardAcceptorModel) Set(val *CardAcceptorModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCardAcceptorModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCardAcceptorModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardAcceptorModel(val *CardAcceptorModel) *NullableCardAcceptorModel {
	return &NullableCardAcceptorModel{value: val, isSet: true}
}

func (v NullableCardAcceptorModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardAcceptorModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


