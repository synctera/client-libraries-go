/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// Alias struct for Alias
type Alias struct {
	// Connection ID of the account
	ConnectId *string `json:"connect_id,omitempty"`
	// Alias ID
	Id *string `json:"id,omitempty"`
	// Alias type
	AliasType *string `json:"alias_type,omitempty"`
	// Alias name
	AliasName *string `json:"alias_name,omitempty"`
	// Alias
	AliasSource *string `json:"alias_source,omitempty"`
	// Additional information for the alias
	AliasInfo *string `json:"alias_info,omitempty"`
}

// NewAlias instantiates a new Alias object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlias() *Alias {
	this := Alias{}
	return &this
}

// NewAliasWithDefaults instantiates a new Alias object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAliasWithDefaults() *Alias {
	this := Alias{}
	return &this
}

// GetConnectId returns the ConnectId field value if set, zero value otherwise.
func (o *Alias) GetConnectId() string {
	if o == nil || o.ConnectId == nil {
		var ret string
		return ret
	}
	return *o.ConnectId
}

// GetConnectIdOk returns a tuple with the ConnectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alias) GetConnectIdOk() (*string, bool) {
	if o == nil || o.ConnectId == nil {
		return nil, false
	}
	return o.ConnectId, true
}

// HasConnectId returns a boolean if a field has been set.
func (o *Alias) HasConnectId() bool {
	if o != nil && o.ConnectId != nil {
		return true
	}

	return false
}

// SetConnectId gets a reference to the given string and assigns it to the ConnectId field.
func (o *Alias) SetConnectId(v string) {
	o.ConnectId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Alias) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alias) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Alias) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Alias) SetId(v string) {
	o.Id = &v
}

// GetAliasType returns the AliasType field value if set, zero value otherwise.
func (o *Alias) GetAliasType() string {
	if o == nil || o.AliasType == nil {
		var ret string
		return ret
	}
	return *o.AliasType
}

// GetAliasTypeOk returns a tuple with the AliasType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alias) GetAliasTypeOk() (*string, bool) {
	if o == nil || o.AliasType == nil {
		return nil, false
	}
	return o.AliasType, true
}

// HasAliasType returns a boolean if a field has been set.
func (o *Alias) HasAliasType() bool {
	if o != nil && o.AliasType != nil {
		return true
	}

	return false
}

// SetAliasType gets a reference to the given string and assigns it to the AliasType field.
func (o *Alias) SetAliasType(v string) {
	o.AliasType = &v
}

// GetAliasName returns the AliasName field value if set, zero value otherwise.
func (o *Alias) GetAliasName() string {
	if o == nil || o.AliasName == nil {
		var ret string
		return ret
	}
	return *o.AliasName
}

// GetAliasNameOk returns a tuple with the AliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alias) GetAliasNameOk() (*string, bool) {
	if o == nil || o.AliasName == nil {
		return nil, false
	}
	return o.AliasName, true
}

// HasAliasName returns a boolean if a field has been set.
func (o *Alias) HasAliasName() bool {
	if o != nil && o.AliasName != nil {
		return true
	}

	return false
}

// SetAliasName gets a reference to the given string and assigns it to the AliasName field.
func (o *Alias) SetAliasName(v string) {
	o.AliasName = &v
}

// GetAliasSource returns the AliasSource field value if set, zero value otherwise.
func (o *Alias) GetAliasSource() string {
	if o == nil || o.AliasSource == nil {
		var ret string
		return ret
	}
	return *o.AliasSource
}

// GetAliasSourceOk returns a tuple with the AliasSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alias) GetAliasSourceOk() (*string, bool) {
	if o == nil || o.AliasSource == nil {
		return nil, false
	}
	return o.AliasSource, true
}

// HasAliasSource returns a boolean if a field has been set.
func (o *Alias) HasAliasSource() bool {
	if o != nil && o.AliasSource != nil {
		return true
	}

	return false
}

// SetAliasSource gets a reference to the given string and assigns it to the AliasSource field.
func (o *Alias) SetAliasSource(v string) {
	o.AliasSource = &v
}

// GetAliasInfo returns the AliasInfo field value if set, zero value otherwise.
func (o *Alias) GetAliasInfo() string {
	if o == nil || o.AliasInfo == nil {
		var ret string
		return ret
	}
	return *o.AliasInfo
}

// GetAliasInfoOk returns a tuple with the AliasInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Alias) GetAliasInfoOk() (*string, bool) {
	if o == nil || o.AliasInfo == nil {
		return nil, false
	}
	return o.AliasInfo, true
}

// HasAliasInfo returns a boolean if a field has been set.
func (o *Alias) HasAliasInfo() bool {
	if o != nil && o.AliasInfo != nil {
		return true
	}

	return false
}

// SetAliasInfo gets a reference to the given string and assigns it to the AliasInfo field.
func (o *Alias) SetAliasInfo(v string) {
	o.AliasInfo = &v
}

func (o Alias) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConnectId != nil {
		toSerialize["connect_id"] = o.ConnectId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AliasType != nil {
		toSerialize["alias_type"] = o.AliasType
	}
	if o.AliasName != nil {
		toSerialize["alias_name"] = o.AliasName
	}
	if o.AliasSource != nil {
		toSerialize["alias_source"] = o.AliasSource
	}
	if o.AliasInfo != nil {
		toSerialize["alias_info"] = o.AliasInfo
	}
	return json.Marshal(toSerialize)
}

type NullableAlias struct {
	value *Alias
	isSet bool
}

func (v NullableAlias) Get() *Alias {
	return v.value
}

func (v *NullableAlias) Set(val *Alias) {
	v.value = val
	v.isSet = true
}

func (v NullableAlias) IsSet() bool {
	return v.isSet
}

func (v *NullableAlias) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlias(val *Alias) *NullableAlias {
	return &NullableAlias{value: val, isSet: true}
}

func (v NullableAlias) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlias) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


