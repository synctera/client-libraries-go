/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// WatchlistSuppress struct for WatchlistSuppress
type WatchlistSuppress struct {
	// The id of the subject (person) for whom future alerts should be suppressed. 
	ProviderSubjectId string `json:"provider_subject_id"`
	// The provider's id for the subscription that caused the alert(s) that are being suppressed. 
	ProviderSubscriptionId string `json:"provider_subscription_id"`
	// The status of this suppression
	Status string `json:"status"`
}

// NewWatchlistSuppress instantiates a new WatchlistSuppress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchlistSuppress(providerSubjectId string, providerSubscriptionId string, status string) *WatchlistSuppress {
	this := WatchlistSuppress{}
	this.ProviderSubjectId = providerSubjectId
	this.ProviderSubscriptionId = providerSubscriptionId
	this.Status = status
	return &this
}

// NewWatchlistSuppressWithDefaults instantiates a new WatchlistSuppress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchlistSuppressWithDefaults() *WatchlistSuppress {
	this := WatchlistSuppress{}
	return &this
}

// GetProviderSubjectId returns the ProviderSubjectId field value
func (o *WatchlistSuppress) GetProviderSubjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderSubjectId
}

// GetProviderSubjectIdOk returns a tuple with the ProviderSubjectId field value
// and a boolean to check if the value has been set.
func (o *WatchlistSuppress) GetProviderSubjectIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProviderSubjectId, true
}

// SetProviderSubjectId sets field value
func (o *WatchlistSuppress) SetProviderSubjectId(v string) {
	o.ProviderSubjectId = v
}

// GetProviderSubscriptionId returns the ProviderSubscriptionId field value
func (o *WatchlistSuppress) GetProviderSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderSubscriptionId
}

// GetProviderSubscriptionIdOk returns a tuple with the ProviderSubscriptionId field value
// and a boolean to check if the value has been set.
func (o *WatchlistSuppress) GetProviderSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProviderSubscriptionId, true
}

// SetProviderSubscriptionId sets field value
func (o *WatchlistSuppress) SetProviderSubscriptionId(v string) {
	o.ProviderSubscriptionId = v
}

// GetStatus returns the Status field value
func (o *WatchlistSuppress) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WatchlistSuppress) GetStatusOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WatchlistSuppress) SetStatus(v string) {
	o.Status = v
}

func (o WatchlistSuppress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider_subject_id"] = o.ProviderSubjectId
	}
	if true {
		toSerialize["provider_subscription_id"] = o.ProviderSubscriptionId
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableWatchlistSuppress struct {
	value *WatchlistSuppress
	isSet bool
}

func (v NullableWatchlistSuppress) Get() *WatchlistSuppress {
	return v.value
}

func (v *NullableWatchlistSuppress) Set(val *WatchlistSuppress) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchlistSuppress) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchlistSuppress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchlistSuppress(val *WatchlistSuppress) *NullableWatchlistSuppress {
	return &NullableWatchlistSuppress{value: val, isSet: true}
}

func (v NullableWatchlistSuppress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchlistSuppress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


