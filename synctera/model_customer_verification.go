/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// CustomerVerification struct for CustomerVerification
type CustomerVerification struct {
	// IP address
	UserIpAddress *string `json:"user_ip_address,omitempty"`
	VerificationType []VerificationType `json:"verification_type"`
}

// NewCustomerVerification instantiates a new CustomerVerification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerVerification(verificationType []VerificationType) *CustomerVerification {
	this := CustomerVerification{}
	this.VerificationType = verificationType
	return &this
}

// NewCustomerVerificationWithDefaults instantiates a new CustomerVerification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerVerificationWithDefaults() *CustomerVerification {
	this := CustomerVerification{}
	return &this
}

// GetUserIpAddress returns the UserIpAddress field value if set, zero value otherwise.
func (o *CustomerVerification) GetUserIpAddress() string {
	if o == nil || o.UserIpAddress == nil {
		var ret string
		return ret
	}
	return *o.UserIpAddress
}

// GetUserIpAddressOk returns a tuple with the UserIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerVerification) GetUserIpAddressOk() (*string, bool) {
	if o == nil || o.UserIpAddress == nil {
		return nil, false
	}
	return o.UserIpAddress, true
}

// HasUserIpAddress returns a boolean if a field has been set.
func (o *CustomerVerification) HasUserIpAddress() bool {
	if o != nil && o.UserIpAddress != nil {
		return true
	}

	return false
}

// SetUserIpAddress gets a reference to the given string and assigns it to the UserIpAddress field.
func (o *CustomerVerification) SetUserIpAddress(v string) {
	o.UserIpAddress = &v
}

// GetVerificationType returns the VerificationType field value
func (o *CustomerVerification) GetVerificationType() []VerificationType {
	if o == nil {
		var ret []VerificationType
		return ret
	}

	return o.VerificationType
}

// GetVerificationTypeOk returns a tuple with the VerificationType field value
// and a boolean to check if the value has been set.
func (o *CustomerVerification) GetVerificationTypeOk() (*[]VerificationType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VerificationType, true
}

// SetVerificationType sets field value
func (o *CustomerVerification) SetVerificationType(v []VerificationType) {
	o.VerificationType = v
}

func (o CustomerVerification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserIpAddress != nil {
		toSerialize["user_ip_address"] = o.UserIpAddress
	}
	if true {
		toSerialize["verification_type"] = o.VerificationType
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerVerification struct {
	value *CustomerVerification
	isSet bool
}

func (v NullableCustomerVerification) Get() *CustomerVerification {
	return v.value
}

func (v *NullableCustomerVerification) Set(val *CustomerVerification) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerVerification) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerVerification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerVerification(val *CustomerVerification) *NullableCustomerVerification {
	return &NullableCustomerVerification{value: val, isSet: true}
}

func (v NullableCustomerVerification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerVerification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


