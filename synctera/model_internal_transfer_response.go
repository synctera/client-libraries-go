/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InternalTransferResponse struct for InternalTransferResponse
type InternalTransferResponse struct {
	// The amount (in cents) to transfer from originating account to receiving account.
	Amount int32 `json:"amount"`
	// ISO 4217 alphabetic currency code of the transfer amount
	Currency string `json:"currency"`
	// A short note to the recipient
	Memo *string `json:"memo,omitempty"`
	// An alias representing a GL account to debit. This is alternative to specifying by account id
	OriginatingAccountAlias *string `json:"originating_account_alias,omitempty"`
	// The UUID of the account being debited
	OriginatingAccountId *string `json:"originating_account_id,omitempty"`
	// An alias representing a GL account to credit. This is an alternative to specifying by account id
	ReceivingAccountAlias *string `json:"receiving_account_alias,omitempty"`
	// The customer id of the owner of the receiving account. Only required when type is \"outgoing_remittance\"
	ReceivingAccountCustomerId *string `json:"receiving_account_customer_id,omitempty"`
	// The UUID of the account being credited
	ReceivingAccountId *string `json:"receiving_account_id,omitempty"`
	// The desired transaction type to use for this transfer
	Type string `json:"type"`
	// The transaction id associated with the transfer
	Id string `json:"id"`
}

// NewInternalTransferResponse instantiates a new InternalTransferResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternalTransferResponse(amount int32, currency string, type_ string, id string) *InternalTransferResponse {
	this := InternalTransferResponse{}
	this.Amount = amount
	this.Currency = currency
	this.Type = type_
	this.Id = id
	return &this
}

// NewInternalTransferResponseWithDefaults instantiates a new InternalTransferResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternalTransferResponseWithDefaults() *InternalTransferResponse {
	this := InternalTransferResponse{}
	return &this
}

// GetAmount returns the Amount field value
func (o *InternalTransferResponse) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetAmountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *InternalTransferResponse) SetAmount(v int32) {
	o.Amount = v
}

// GetCurrency returns the Currency field value
func (o *InternalTransferResponse) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *InternalTransferResponse) SetCurrency(v string) {
	o.Currency = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *InternalTransferResponse) GetMemo() string {
	if o == nil || o.Memo == nil {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetMemoOk() (*string, bool) {
	if o == nil || o.Memo == nil {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *InternalTransferResponse) HasMemo() bool {
	if o != nil && o.Memo != nil {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *InternalTransferResponse) SetMemo(v string) {
	o.Memo = &v
}

// GetOriginatingAccountAlias returns the OriginatingAccountAlias field value if set, zero value otherwise.
func (o *InternalTransferResponse) GetOriginatingAccountAlias() string {
	if o == nil || o.OriginatingAccountAlias == nil {
		var ret string
		return ret
	}
	return *o.OriginatingAccountAlias
}

// GetOriginatingAccountAliasOk returns a tuple with the OriginatingAccountAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetOriginatingAccountAliasOk() (*string, bool) {
	if o == nil || o.OriginatingAccountAlias == nil {
		return nil, false
	}
	return o.OriginatingAccountAlias, true
}

// HasOriginatingAccountAlias returns a boolean if a field has been set.
func (o *InternalTransferResponse) HasOriginatingAccountAlias() bool {
	if o != nil && o.OriginatingAccountAlias != nil {
		return true
	}

	return false
}

// SetOriginatingAccountAlias gets a reference to the given string and assigns it to the OriginatingAccountAlias field.
func (o *InternalTransferResponse) SetOriginatingAccountAlias(v string) {
	o.OriginatingAccountAlias = &v
}

// GetOriginatingAccountId returns the OriginatingAccountId field value if set, zero value otherwise.
func (o *InternalTransferResponse) GetOriginatingAccountId() string {
	if o == nil || o.OriginatingAccountId == nil {
		var ret string
		return ret
	}
	return *o.OriginatingAccountId
}

// GetOriginatingAccountIdOk returns a tuple with the OriginatingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetOriginatingAccountIdOk() (*string, bool) {
	if o == nil || o.OriginatingAccountId == nil {
		return nil, false
	}
	return o.OriginatingAccountId, true
}

// HasOriginatingAccountId returns a boolean if a field has been set.
func (o *InternalTransferResponse) HasOriginatingAccountId() bool {
	if o != nil && o.OriginatingAccountId != nil {
		return true
	}

	return false
}

// SetOriginatingAccountId gets a reference to the given string and assigns it to the OriginatingAccountId field.
func (o *InternalTransferResponse) SetOriginatingAccountId(v string) {
	o.OriginatingAccountId = &v
}

// GetReceivingAccountAlias returns the ReceivingAccountAlias field value if set, zero value otherwise.
func (o *InternalTransferResponse) GetReceivingAccountAlias() string {
	if o == nil || o.ReceivingAccountAlias == nil {
		var ret string
		return ret
	}
	return *o.ReceivingAccountAlias
}

// GetReceivingAccountAliasOk returns a tuple with the ReceivingAccountAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetReceivingAccountAliasOk() (*string, bool) {
	if o == nil || o.ReceivingAccountAlias == nil {
		return nil, false
	}
	return o.ReceivingAccountAlias, true
}

// HasReceivingAccountAlias returns a boolean if a field has been set.
func (o *InternalTransferResponse) HasReceivingAccountAlias() bool {
	if o != nil && o.ReceivingAccountAlias != nil {
		return true
	}

	return false
}

// SetReceivingAccountAlias gets a reference to the given string and assigns it to the ReceivingAccountAlias field.
func (o *InternalTransferResponse) SetReceivingAccountAlias(v string) {
	o.ReceivingAccountAlias = &v
}

// GetReceivingAccountCustomerId returns the ReceivingAccountCustomerId field value if set, zero value otherwise.
func (o *InternalTransferResponse) GetReceivingAccountCustomerId() string {
	if o == nil || o.ReceivingAccountCustomerId == nil {
		var ret string
		return ret
	}
	return *o.ReceivingAccountCustomerId
}

// GetReceivingAccountCustomerIdOk returns a tuple with the ReceivingAccountCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetReceivingAccountCustomerIdOk() (*string, bool) {
	if o == nil || o.ReceivingAccountCustomerId == nil {
		return nil, false
	}
	return o.ReceivingAccountCustomerId, true
}

// HasReceivingAccountCustomerId returns a boolean if a field has been set.
func (o *InternalTransferResponse) HasReceivingAccountCustomerId() bool {
	if o != nil && o.ReceivingAccountCustomerId != nil {
		return true
	}

	return false
}

// SetReceivingAccountCustomerId gets a reference to the given string and assigns it to the ReceivingAccountCustomerId field.
func (o *InternalTransferResponse) SetReceivingAccountCustomerId(v string) {
	o.ReceivingAccountCustomerId = &v
}

// GetReceivingAccountId returns the ReceivingAccountId field value if set, zero value otherwise.
func (o *InternalTransferResponse) GetReceivingAccountId() string {
	if o == nil || o.ReceivingAccountId == nil {
		var ret string
		return ret
	}
	return *o.ReceivingAccountId
}

// GetReceivingAccountIdOk returns a tuple with the ReceivingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetReceivingAccountIdOk() (*string, bool) {
	if o == nil || o.ReceivingAccountId == nil {
		return nil, false
	}
	return o.ReceivingAccountId, true
}

// HasReceivingAccountId returns a boolean if a field has been set.
func (o *InternalTransferResponse) HasReceivingAccountId() bool {
	if o != nil && o.ReceivingAccountId != nil {
		return true
	}

	return false
}

// SetReceivingAccountId gets a reference to the given string and assigns it to the ReceivingAccountId field.
func (o *InternalTransferResponse) SetReceivingAccountId(v string) {
	o.ReceivingAccountId = &v
}

// GetType returns the Type field value
func (o *InternalTransferResponse) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InternalTransferResponse) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *InternalTransferResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InternalTransferResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InternalTransferResponse) SetId(v string) {
	o.Id = v
}

func (o InternalTransferResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if o.Memo != nil {
		toSerialize["memo"] = o.Memo
	}
	if o.OriginatingAccountAlias != nil {
		toSerialize["originating_account_alias"] = o.OriginatingAccountAlias
	}
	if o.OriginatingAccountId != nil {
		toSerialize["originating_account_id"] = o.OriginatingAccountId
	}
	if o.ReceivingAccountAlias != nil {
		toSerialize["receiving_account_alias"] = o.ReceivingAccountAlias
	}
	if o.ReceivingAccountCustomerId != nil {
		toSerialize["receiving_account_customer_id"] = o.ReceivingAccountCustomerId
	}
	if o.ReceivingAccountId != nil {
		toSerialize["receiving_account_id"] = o.ReceivingAccountId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInternalTransferResponse struct {
	value *InternalTransferResponse
	isSet bool
}

func (v NullableInternalTransferResponse) Get() *InternalTransferResponse {
	return v.value
}

func (v *NullableInternalTransferResponse) Set(val *InternalTransferResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInternalTransferResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInternalTransferResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternalTransferResponse(val *InternalTransferResponse) *NullableInternalTransferResponse {
	return &NullableInternalTransferResponse{value: val, isSet: true}
}

func (v NullableInternalTransferResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternalTransferResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


