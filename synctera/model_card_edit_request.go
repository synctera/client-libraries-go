/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CardEditRequest struct for CardEditRequest
type CardEditRequest struct {
	CardStatus CardStatusRequest `json:"card_status"`
	// Additional details about the reason for the status change
	Memo *string `json:"memo,omitempty"`
	// Additional data to include in the request structured as key-value pairs
	Metadata *map[string]string `json:"metadata,omitempty"`
	Reason CardStatusReasonCode `json:"reason"`
}

// NewCardEditRequest instantiates a new CardEditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardEditRequest(cardStatus CardStatusRequest, reason CardStatusReasonCode) *CardEditRequest {
	this := CardEditRequest{}
	this.CardStatus = cardStatus
	this.Reason = reason
	return &this
}

// NewCardEditRequestWithDefaults instantiates a new CardEditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardEditRequestWithDefaults() *CardEditRequest {
	this := CardEditRequest{}
	return &this
}

// GetCardStatus returns the CardStatus field value
func (o *CardEditRequest) GetCardStatus() CardStatusRequest {
	if o == nil {
		var ret CardStatusRequest
		return ret
	}

	return o.CardStatus
}

// GetCardStatusOk returns a tuple with the CardStatus field value
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetCardStatusOk() (*CardStatusRequest, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CardStatus, true
}

// SetCardStatus sets field value
func (o *CardEditRequest) SetCardStatus(v CardStatusRequest) {
	o.CardStatus = v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *CardEditRequest) GetMemo() string {
	if o == nil || o.Memo == nil {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetMemoOk() (*string, bool) {
	if o == nil || o.Memo == nil {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *CardEditRequest) HasMemo() bool {
	if o != nil && o.Memo != nil {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *CardEditRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CardEditRequest) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CardEditRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CardEditRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetReason returns the Reason field value
func (o *CardEditRequest) GetReason() CardStatusReasonCode {
	if o == nil {
		var ret CardStatusReasonCode
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetReasonOk() (*CardStatusReasonCode, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *CardEditRequest) SetReason(v CardStatusReasonCode) {
	o.Reason = v
}

func (o CardEditRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["card_status"] = o.CardStatus
	}
	if o.Memo != nil {
		toSerialize["memo"] = o.Memo
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableCardEditRequest struct {
	value *CardEditRequest
	isSet bool
}

func (v NullableCardEditRequest) Get() *CardEditRequest {
	return v.value
}

func (v *NullableCardEditRequest) Set(val *CardEditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCardEditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCardEditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardEditRequest(val *CardEditRequest) *NullableCardEditRequest {
	return &NullableCardEditRequest{value: val, isSet: true}
}

func (v NullableCardEditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardEditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


