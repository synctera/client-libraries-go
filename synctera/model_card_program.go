/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CardProgram struct for CardProgram
type CardProgram struct {
	// indicates whether program is active
	Active *bool `json:"active,omitempty"`
	// The ID of the bank partner works with within this program
	BankId *int32 `json:"bank_id,omitempty"`
	CardBrand *CardBrand `json:"card_brand,omitempty"`
	CardCategory *CardCategory `json:"card_category,omitempty"`
	CardProductType *CardProductType `json:"card_product_type,omitempty"`
	// The timestamp representing when the program was created
	CreationTime *time.Time `json:"creation_time,omitempty"`
	// The time when program became inactive
	EndDate *time.Time `json:"end_date,omitempty"`
	// Program ID
	Id *string `json:"id,omitempty"`
	// The timestamp representing when the program was last modified
	LastModifiedTime *time.Time `json:"last_modified_time,omitempty"`
	// Program name
	Name *string `json:"name,omitempty"`
	// The ID of the partner program belongs to
	PartnerId *int32 `json:"partner_id,omitempty"`
	// The time when program becomes active
	StartDate *time.Time `json:"start_date,omitempty"`
}

// NewCardProgram instantiates a new CardProgram object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardProgram() *CardProgram {
	this := CardProgram{}
	return &this
}

// NewCardProgramWithDefaults instantiates a new CardProgram object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardProgramWithDefaults() *CardProgram {
	this := CardProgram{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *CardProgram) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *CardProgram) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *CardProgram) SetActive(v bool) {
	o.Active = &v
}

// GetBankId returns the BankId field value if set, zero value otherwise.
func (o *CardProgram) GetBankId() int32 {
	if o == nil || o.BankId == nil {
		var ret int32
		return ret
	}
	return *o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetBankIdOk() (*int32, bool) {
	if o == nil || o.BankId == nil {
		return nil, false
	}
	return o.BankId, true
}

// HasBankId returns a boolean if a field has been set.
func (o *CardProgram) HasBankId() bool {
	if o != nil && o.BankId != nil {
		return true
	}

	return false
}

// SetBankId gets a reference to the given int32 and assigns it to the BankId field.
func (o *CardProgram) SetBankId(v int32) {
	o.BankId = &v
}

// GetCardBrand returns the CardBrand field value if set, zero value otherwise.
func (o *CardProgram) GetCardBrand() CardBrand {
	if o == nil || o.CardBrand == nil {
		var ret CardBrand
		return ret
	}
	return *o.CardBrand
}

// GetCardBrandOk returns a tuple with the CardBrand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetCardBrandOk() (*CardBrand, bool) {
	if o == nil || o.CardBrand == nil {
		return nil, false
	}
	return o.CardBrand, true
}

// HasCardBrand returns a boolean if a field has been set.
func (o *CardProgram) HasCardBrand() bool {
	if o != nil && o.CardBrand != nil {
		return true
	}

	return false
}

// SetCardBrand gets a reference to the given CardBrand and assigns it to the CardBrand field.
func (o *CardProgram) SetCardBrand(v CardBrand) {
	o.CardBrand = &v
}

// GetCardCategory returns the CardCategory field value if set, zero value otherwise.
func (o *CardProgram) GetCardCategory() CardCategory {
	if o == nil || o.CardCategory == nil {
		var ret CardCategory
		return ret
	}
	return *o.CardCategory
}

// GetCardCategoryOk returns a tuple with the CardCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetCardCategoryOk() (*CardCategory, bool) {
	if o == nil || o.CardCategory == nil {
		return nil, false
	}
	return o.CardCategory, true
}

// HasCardCategory returns a boolean if a field has been set.
func (o *CardProgram) HasCardCategory() bool {
	if o != nil && o.CardCategory != nil {
		return true
	}

	return false
}

// SetCardCategory gets a reference to the given CardCategory and assigns it to the CardCategory field.
func (o *CardProgram) SetCardCategory(v CardCategory) {
	o.CardCategory = &v
}

// GetCardProductType returns the CardProductType field value if set, zero value otherwise.
func (o *CardProgram) GetCardProductType() CardProductType {
	if o == nil || o.CardProductType == nil {
		var ret CardProductType
		return ret
	}
	return *o.CardProductType
}

// GetCardProductTypeOk returns a tuple with the CardProductType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetCardProductTypeOk() (*CardProductType, bool) {
	if o == nil || o.CardProductType == nil {
		return nil, false
	}
	return o.CardProductType, true
}

// HasCardProductType returns a boolean if a field has been set.
func (o *CardProgram) HasCardProductType() bool {
	if o != nil && o.CardProductType != nil {
		return true
	}

	return false
}

// SetCardProductType gets a reference to the given CardProductType and assigns it to the CardProductType field.
func (o *CardProgram) SetCardProductType(v CardProductType) {
	o.CardProductType = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *CardProgram) GetCreationTime() time.Time {
	if o == nil || o.CreationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *CardProgram) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *CardProgram) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CardProgram) GetEndDate() time.Time {
	if o == nil || o.EndDate == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetEndDateOk() (*time.Time, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CardProgram) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *CardProgram) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CardProgram) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CardProgram) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CardProgram) SetId(v string) {
	o.Id = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *CardProgram) GetLastModifiedTime() time.Time {
	if o == nil || o.LastModifiedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedTime == nil {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *CardProgram) HasLastModifiedTime() bool {
	if o != nil && o.LastModifiedTime != nil {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *CardProgram) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CardProgram) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CardProgram) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CardProgram) SetName(v string) {
	o.Name = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *CardProgram) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *CardProgram) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *CardProgram) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CardProgram) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProgram) GetStartDateOk() (*time.Time, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CardProgram) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CardProgram) SetStartDate(v time.Time) {
	o.StartDate = &v
}

func (o CardProgram) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.BankId != nil {
		toSerialize["bank_id"] = o.BankId
	}
	if o.CardBrand != nil {
		toSerialize["card_brand"] = o.CardBrand
	}
	if o.CardCategory != nil {
		toSerialize["card_category"] = o.CardCategory
	}
	if o.CardProductType != nil {
		toSerialize["card_product_type"] = o.CardProductType
	}
	if o.CreationTime != nil {
		toSerialize["creation_time"] = o.CreationTime
	}
	if o.EndDate != nil {
		toSerialize["end_date"] = o.EndDate
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastModifiedTime != nil {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PartnerId != nil {
		toSerialize["partner_id"] = o.PartnerId
	}
	if o.StartDate != nil {
		toSerialize["start_date"] = o.StartDate
	}
	return json.Marshal(toSerialize)
}

type NullableCardProgram struct {
	value *CardProgram
	isSet bool
}

func (v NullableCardProgram) Get() *CardProgram {
	return v.value
}

func (v *NullableCardProgram) Set(val *CardProgram) {
	v.value = val
	v.isSet = true
}

func (v NullableCardProgram) IsSet() bool {
	return v.isSet
}

func (v *NullableCardProgram) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardProgram(val *CardProgram) *NullableCardProgram {
	return &NullableCardProgram{value: val, isSet: true}
}

func (v NullableCardProgram) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardProgram) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


