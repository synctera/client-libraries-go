/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// AddressListAllOf struct for AddressListAllOf
type AddressListAllOf struct {
	// Array of addresses
	Addresses []Address `json:"addresses"`
}

// NewAddressListAllOf instantiates a new AddressListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressListAllOf(addresses []Address) *AddressListAllOf {
	this := AddressListAllOf{}
	this.Addresses = addresses
	return &this
}

// NewAddressListAllOfWithDefaults instantiates a new AddressListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressListAllOfWithDefaults() *AddressListAllOf {
	this := AddressListAllOf{}
	return &this
}

// GetAddresses returns the Addresses field value
func (o *AddressListAllOf) GetAddresses() []Address {
	if o == nil {
		var ret []Address
		return ret
	}

	return o.Addresses
}

// GetAddressesOk returns a tuple with the Addresses field value
// and a boolean to check if the value has been set.
func (o *AddressListAllOf) GetAddressesOk() (*[]Address, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Addresses, true
}

// SetAddresses sets field value
func (o *AddressListAllOf) SetAddresses(v []Address) {
	o.Addresses = v
}

func (o AddressListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["addresses"] = o.Addresses
	}
	return json.Marshal(toSerialize)
}

type NullableAddressListAllOf struct {
	value *AddressListAllOf
	isSet bool
}

func (v NullableAddressListAllOf) Get() *AddressListAllOf {
	return v.value
}

func (v *NullableAddressListAllOf) Set(val *AddressListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressListAllOf(val *AddressListAllOf) *NullableAddressListAllOf {
	return &NullableAddressListAllOf{value: val, isSet: true}
}

func (v NullableAddressListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


