/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExternalAccountTransaction struct for ExternalAccountTransaction
type ExternalAccountTransaction struct {
	// Transaction amount. Number in cents. E.g. 1000 represents $10.00
	Amount *int64 `json:"amount,omitempty"`
	// Date that the transaction is authorized. ISO 8601 format ( YYYY-MM-DD ).
	AuthorizedDate *string `json:"authorized_date,omitempty"`
	// Category of the transaction
	Category *[]string `json:"category,omitempty"`
	// Check number of the transaction. This field will be null if not a check transaction.
	CheckNumber *string `json:"check_number,omitempty"`
	// ISO 4217 alphabetic currency code
	Currency *string `json:"currency,omitempty"`
	// For pending transactions, this represents the date of the transaction occurred; for posted transactions, this represents the date of the transaction posted. ISO 8601 format ( YYYY-MM-DD ). 
	Date *string `json:"date,omitempty"`
	// Indicates the transaction is pending or unsettled if true.
	IsPending *bool `json:"is_pending,omitempty"`
	// Merchant name of the transaction
	MerchantName *string `json:"merchant_name,omitempty"`
	// channel used to make a payment
	PaymentChannel *string `json:"payment_channel,omitempty"`
	// Transfer type of the transaction, e.g. ACH
	PaymentMethod *string `json:"payment_method,omitempty"`
	// case-sensitive transaction ID
	TransactionId *string `json:"transaction_id,omitempty"`
}

// NewExternalAccountTransaction instantiates a new ExternalAccountTransaction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalAccountTransaction() *ExternalAccountTransaction {
	this := ExternalAccountTransaction{}
	return &this
}

// NewExternalAccountTransactionWithDefaults instantiates a new ExternalAccountTransaction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalAccountTransactionWithDefaults() *ExternalAccountTransaction {
	this := ExternalAccountTransaction{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetAmount() int64 {
	if o == nil || o.Amount == nil {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetAmountOk() (*int64, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *ExternalAccountTransaction) SetAmount(v int64) {
	o.Amount = &v
}

// GetAuthorizedDate returns the AuthorizedDate field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetAuthorizedDate() string {
	if o == nil || o.AuthorizedDate == nil {
		var ret string
		return ret
	}
	return *o.AuthorizedDate
}

// GetAuthorizedDateOk returns a tuple with the AuthorizedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetAuthorizedDateOk() (*string, bool) {
	if o == nil || o.AuthorizedDate == nil {
		return nil, false
	}
	return o.AuthorizedDate, true
}

// HasAuthorizedDate returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasAuthorizedDate() bool {
	if o != nil && o.AuthorizedDate != nil {
		return true
	}

	return false
}

// SetAuthorizedDate gets a reference to the given string and assigns it to the AuthorizedDate field.
func (o *ExternalAccountTransaction) SetAuthorizedDate(v string) {
	o.AuthorizedDate = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetCategory() []string {
	if o == nil || o.Category == nil {
		var ret []string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetCategoryOk() (*[]string, bool) {
	if o == nil || o.Category == nil {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasCategory() bool {
	if o != nil && o.Category != nil {
		return true
	}

	return false
}

// SetCategory gets a reference to the given []string and assigns it to the Category field.
func (o *ExternalAccountTransaction) SetCategory(v []string) {
	o.Category = &v
}

// GetCheckNumber returns the CheckNumber field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetCheckNumber() string {
	if o == nil || o.CheckNumber == nil {
		var ret string
		return ret
	}
	return *o.CheckNumber
}

// GetCheckNumberOk returns a tuple with the CheckNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetCheckNumberOk() (*string, bool) {
	if o == nil || o.CheckNumber == nil {
		return nil, false
	}
	return o.CheckNumber, true
}

// HasCheckNumber returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasCheckNumber() bool {
	if o != nil && o.CheckNumber != nil {
		return true
	}

	return false
}

// SetCheckNumber gets a reference to the given string and assigns it to the CheckNumber field.
func (o *ExternalAccountTransaction) SetCheckNumber(v string) {
	o.CheckNumber = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetCurrency() string {
	if o == nil || o.Currency == nil {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetCurrencyOk() (*string, bool) {
	if o == nil || o.Currency == nil {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasCurrency() bool {
	if o != nil && o.Currency != nil {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *ExternalAccountTransaction) SetCurrency(v string) {
	o.Currency = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *ExternalAccountTransaction) SetDate(v string) {
	o.Date = &v
}

// GetIsPending returns the IsPending field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetIsPending() bool {
	if o == nil || o.IsPending == nil {
		var ret bool
		return ret
	}
	return *o.IsPending
}

// GetIsPendingOk returns a tuple with the IsPending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetIsPendingOk() (*bool, bool) {
	if o == nil || o.IsPending == nil {
		return nil, false
	}
	return o.IsPending, true
}

// HasIsPending returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasIsPending() bool {
	if o != nil && o.IsPending != nil {
		return true
	}

	return false
}

// SetIsPending gets a reference to the given bool and assigns it to the IsPending field.
func (o *ExternalAccountTransaction) SetIsPending(v bool) {
	o.IsPending = &v
}

// GetMerchantName returns the MerchantName field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetMerchantName() string {
	if o == nil || o.MerchantName == nil {
		var ret string
		return ret
	}
	return *o.MerchantName
}

// GetMerchantNameOk returns a tuple with the MerchantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetMerchantNameOk() (*string, bool) {
	if o == nil || o.MerchantName == nil {
		return nil, false
	}
	return o.MerchantName, true
}

// HasMerchantName returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasMerchantName() bool {
	if o != nil && o.MerchantName != nil {
		return true
	}

	return false
}

// SetMerchantName gets a reference to the given string and assigns it to the MerchantName field.
func (o *ExternalAccountTransaction) SetMerchantName(v string) {
	o.MerchantName = &v
}

// GetPaymentChannel returns the PaymentChannel field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetPaymentChannel() string {
	if o == nil || o.PaymentChannel == nil {
		var ret string
		return ret
	}
	return *o.PaymentChannel
}

// GetPaymentChannelOk returns a tuple with the PaymentChannel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetPaymentChannelOk() (*string, bool) {
	if o == nil || o.PaymentChannel == nil {
		return nil, false
	}
	return o.PaymentChannel, true
}

// HasPaymentChannel returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasPaymentChannel() bool {
	if o != nil && o.PaymentChannel != nil {
		return true
	}

	return false
}

// SetPaymentChannel gets a reference to the given string and assigns it to the PaymentChannel field.
func (o *ExternalAccountTransaction) SetPaymentChannel(v string) {
	o.PaymentChannel = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetPaymentMethod() string {
	if o == nil || o.PaymentMethod == nil {
		var ret string
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetPaymentMethodOk() (*string, bool) {
	if o == nil || o.PaymentMethod == nil {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasPaymentMethod() bool {
	if o != nil && o.PaymentMethod != nil {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given string and assigns it to the PaymentMethod field.
func (o *ExternalAccountTransaction) SetPaymentMethod(v string) {
	o.PaymentMethod = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *ExternalAccountTransaction) GetTransactionId() string {
	if o == nil || o.TransactionId == nil {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalAccountTransaction) GetTransactionIdOk() (*string, bool) {
	if o == nil || o.TransactionId == nil {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *ExternalAccountTransaction) HasTransactionId() bool {
	if o != nil && o.TransactionId != nil {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *ExternalAccountTransaction) SetTransactionId(v string) {
	o.TransactionId = &v
}

func (o ExternalAccountTransaction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.AuthorizedDate != nil {
		toSerialize["authorized_date"] = o.AuthorizedDate
	}
	if o.Category != nil {
		toSerialize["category"] = o.Category
	}
	if o.CheckNumber != nil {
		toSerialize["check_number"] = o.CheckNumber
	}
	if o.Currency != nil {
		toSerialize["currency"] = o.Currency
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.IsPending != nil {
		toSerialize["is_pending"] = o.IsPending
	}
	if o.MerchantName != nil {
		toSerialize["merchant_name"] = o.MerchantName
	}
	if o.PaymentChannel != nil {
		toSerialize["payment_channel"] = o.PaymentChannel
	}
	if o.PaymentMethod != nil {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	if o.TransactionId != nil {
		toSerialize["transaction_id"] = o.TransactionId
	}
	return json.Marshal(toSerialize)
}

type NullableExternalAccountTransaction struct {
	value *ExternalAccountTransaction
	isSet bool
}

func (v NullableExternalAccountTransaction) Get() *ExternalAccountTransaction {
	return v.value
}

func (v *NullableExternalAccountTransaction) Set(val *ExternalAccountTransaction) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalAccountTransaction) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalAccountTransaction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalAccountTransaction(val *ExternalAccountTransaction) *NullableExternalAccountTransaction {
	return &NullableExternalAccountTransaction{value: val, isSet: true}
}

func (v NullableExternalAccountTransaction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalAccountTransaction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


