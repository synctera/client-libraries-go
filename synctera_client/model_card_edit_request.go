/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// CardEditRequest struct for CardEditRequest
type CardEditRequest struct {
	CardStatus *CardStatusRequest `json:"card_status,omitempty"`
	// The ID of the customer to whom the card will be issued
	CustomerId *string     `json:"customer_id,omitempty"`
	EmbossName *EmbossName `json:"emboss_name,omitempty"`
	// Additional details about the reason for the status change
	Memo *string `json:"memo,omitempty"`
	// Additional data to include in the request structured as key-value pairs
	Metadata *map[string]string    `json:"metadata,omitempty"`
	Reason   *CardStatusReasonCode `json:"reason,omitempty"`
}

// NewCardEditRequest instantiates a new CardEditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardEditRequest() *CardEditRequest {
	this := CardEditRequest{}
	return &this
}

// NewCardEditRequestWithDefaults instantiates a new CardEditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardEditRequestWithDefaults() *CardEditRequest {
	this := CardEditRequest{}
	return &this
}

// GetCardStatus returns the CardStatus field value if set, zero value otherwise.
func (o *CardEditRequest) GetCardStatus() CardStatusRequest {
	if o == nil || o.CardStatus == nil {
		var ret CardStatusRequest
		return ret
	}
	return *o.CardStatus
}

// GetCardStatusOk returns a tuple with the CardStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetCardStatusOk() (*CardStatusRequest, bool) {
	if o == nil || o.CardStatus == nil {
		return nil, false
	}
	return o.CardStatus, true
}

// HasCardStatus returns a boolean if a field has been set.
func (o *CardEditRequest) HasCardStatus() bool {
	if o != nil && o.CardStatus != nil {
		return true
	}

	return false
}

// SetCardStatus gets a reference to the given CardStatusRequest and assigns it to the CardStatus field.
func (o *CardEditRequest) SetCardStatus(v CardStatusRequest) {
	o.CardStatus = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *CardEditRequest) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *CardEditRequest) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *CardEditRequest) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetEmbossName returns the EmbossName field value if set, zero value otherwise.
func (o *CardEditRequest) GetEmbossName() EmbossName {
	if o == nil || o.EmbossName == nil {
		var ret EmbossName
		return ret
	}
	return *o.EmbossName
}

// GetEmbossNameOk returns a tuple with the EmbossName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetEmbossNameOk() (*EmbossName, bool) {
	if o == nil || o.EmbossName == nil {
		return nil, false
	}
	return o.EmbossName, true
}

// HasEmbossName returns a boolean if a field has been set.
func (o *CardEditRequest) HasEmbossName() bool {
	if o != nil && o.EmbossName != nil {
		return true
	}

	return false
}

// SetEmbossName gets a reference to the given EmbossName and assigns it to the EmbossName field.
func (o *CardEditRequest) SetEmbossName(v EmbossName) {
	o.EmbossName = &v
}

// GetMemo returns the Memo field value if set, zero value otherwise.
func (o *CardEditRequest) GetMemo() string {
	if o == nil || o.Memo == nil {
		var ret string
		return ret
	}
	return *o.Memo
}

// GetMemoOk returns a tuple with the Memo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetMemoOk() (*string, bool) {
	if o == nil || o.Memo == nil {
		return nil, false
	}
	return o.Memo, true
}

// HasMemo returns a boolean if a field has been set.
func (o *CardEditRequest) HasMemo() bool {
	if o != nil && o.Memo != nil {
		return true
	}

	return false
}

// SetMemo gets a reference to the given string and assigns it to the Memo field.
func (o *CardEditRequest) SetMemo(v string) {
	o.Memo = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CardEditRequest) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CardEditRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CardEditRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *CardEditRequest) GetReason() CardStatusReasonCode {
	if o == nil || o.Reason == nil {
		var ret CardStatusReasonCode
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardEditRequest) GetReasonOk() (*CardStatusReasonCode, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *CardEditRequest) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given CardStatusReasonCode and assigns it to the Reason field.
func (o *CardEditRequest) SetReason(v CardStatusReasonCode) {
	o.Reason = &v
}

func (o CardEditRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CardStatus != nil {
		toSerialize["card_status"] = o.CardStatus
	}
	if o.CustomerId != nil {
		toSerialize["customer_id"] = o.CustomerId
	}
	if o.EmbossName != nil {
		toSerialize["emboss_name"] = o.EmbossName
	}
	if o.Memo != nil {
		toSerialize["memo"] = o.Memo
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	return json.Marshal(toSerialize)
}

type NullableCardEditRequest struct {
	value *CardEditRequest
	isSet bool
}

func (v NullableCardEditRequest) Get() *CardEditRequest {
	return v.value
}

func (v *NullableCardEditRequest) Set(val *CardEditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCardEditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCardEditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardEditRequest(val *CardEditRequest) *NullableCardEditRequest {
	return &NullableCardEditRequest{value: val, isSet: true}
}

func (v NullableCardEditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardEditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
