/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"time"
)

// HoldModifyRequest struct for HoldModifyRequest
type HoldModifyRequest struct {
	// The account number associated with the hold
	AccountNo    string `json:"account_no"`
	AllowPartial bool   `json:"allow_partial"`
	// The amount of the hold.
	Amount int64 `json:"amount"`
	// The effective date of the transaction once it gets posted
	EffectiveDate time.Time `json:"effective_date"`
	// The date that at which this hold is no longer valid.
	ExpiresAt time.Time `json:"expires_at"`
	// an unstructured json blob representing additional transaction information supplied by the integrator.
	ExternalData map[string]interface{} `json:"external_data"`
	// Whether or not the hold was forced (spending controls ignored)
	ForcePost bool `json:"force_post"`
	// Information received by the transaction risk/fraud service related to this transaction
	RiskInfo map[string]interface{} `json:"risk_info"`
	// The specific transaction type. For example, for `ach`, this may be \"outgoing_debit\".
	Subtype string `json:"subtype"`
	// An unstructured JSON blob representing additional transaction information specific to each payment rail.
	UserData map[string]interface{} `json:"user_data"`
}

// NewHoldModifyRequest instantiates a new HoldModifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHoldModifyRequest(accountNo string, allowPartial bool, amount int64, effectiveDate time.Time, expiresAt time.Time, externalData map[string]interface{}, forcePost bool, riskInfo map[string]interface{}, subtype string, userData map[string]interface{}) *HoldModifyRequest {
	this := HoldModifyRequest{}
	this.AccountNo = accountNo
	this.AllowPartial = allowPartial
	this.Amount = amount
	this.EffectiveDate = effectiveDate
	this.ExpiresAt = expiresAt
	this.ExternalData = externalData
	this.ForcePost = forcePost
	this.RiskInfo = riskInfo
	this.Subtype = subtype
	this.UserData = userData
	return &this
}

// NewHoldModifyRequestWithDefaults instantiates a new HoldModifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHoldModifyRequestWithDefaults() *HoldModifyRequest {
	this := HoldModifyRequest{}
	return &this
}

// GetAccountNo returns the AccountNo field value
func (o *HoldModifyRequest) GetAccountNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value
// and a boolean to check if the value has been set.
func (o *HoldModifyRequest) GetAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNo, true
}

// SetAccountNo sets field value
func (o *HoldModifyRequest) SetAccountNo(v string) {
	o.AccountNo = v
}

// GetAllowPartial returns the AllowPartial field value
func (o *HoldModifyRequest) GetAllowPartial() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowPartial
}

// GetAllowPartialOk returns a tuple with the AllowPartial field value
// and a boolean to check if the value has been set.
func (o *HoldModifyRequest) GetAllowPartialOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowPartial, true
}

// SetAllowPartial sets field value
func (o *HoldModifyRequest) SetAllowPartial(v bool) {
	o.AllowPartial = v
}

// GetAmount returns the Amount field value
func (o *HoldModifyRequest) GetAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *HoldModifyRequest) GetAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *HoldModifyRequest) SetAmount(v int64) {
	o.Amount = v
}

// GetEffectiveDate returns the EffectiveDate field value
func (o *HoldModifyRequest) GetEffectiveDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value
// and a boolean to check if the value has been set.
func (o *HoldModifyRequest) GetEffectiveDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EffectiveDate, true
}

// SetEffectiveDate sets field value
func (o *HoldModifyRequest) SetEffectiveDate(v time.Time) {
	o.EffectiveDate = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *HoldModifyRequest) GetExpiresAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *HoldModifyRequest) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *HoldModifyRequest) SetExpiresAt(v time.Time) {
	o.ExpiresAt = v
}

// GetExternalData returns the ExternalData field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *HoldModifyRequest) GetExternalData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ExternalData
}

// GetExternalDataOk returns a tuple with the ExternalData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldModifyRequest) GetExternalDataOk() (map[string]interface{}, bool) {
	if o == nil || o.ExternalData == nil {
		return nil, false
	}
	return o.ExternalData, true
}

// SetExternalData sets field value
func (o *HoldModifyRequest) SetExternalData(v map[string]interface{}) {
	o.ExternalData = v
}

// GetForcePost returns the ForcePost field value
func (o *HoldModifyRequest) GetForcePost() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ForcePost
}

// GetForcePostOk returns a tuple with the ForcePost field value
// and a boolean to check if the value has been set.
func (o *HoldModifyRequest) GetForcePostOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForcePost, true
}

// SetForcePost sets field value
func (o *HoldModifyRequest) SetForcePost(v bool) {
	o.ForcePost = v
}

// GetRiskInfo returns the RiskInfo field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *HoldModifyRequest) GetRiskInfo() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RiskInfo
}

// GetRiskInfoOk returns a tuple with the RiskInfo field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldModifyRequest) GetRiskInfoOk() (map[string]interface{}, bool) {
	if o == nil || o.RiskInfo == nil {
		return nil, false
	}
	return o.RiskInfo, true
}

// SetRiskInfo sets field value
func (o *HoldModifyRequest) SetRiskInfo(v map[string]interface{}) {
	o.RiskInfo = v
}

// GetSubtype returns the Subtype field value
func (o *HoldModifyRequest) GetSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *HoldModifyRequest) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *HoldModifyRequest) SetSubtype(v string) {
	o.Subtype = v
}

// GetUserData returns the UserData field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *HoldModifyRequest) GetUserData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.UserData
}

// GetUserDataOk returns a tuple with the UserData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HoldModifyRequest) GetUserDataOk() (map[string]interface{}, bool) {
	if o == nil || o.UserData == nil {
		return nil, false
	}
	return o.UserData, true
}

// SetUserData sets field value
func (o *HoldModifyRequest) SetUserData(v map[string]interface{}) {
	o.UserData = v
}

func (o HoldModifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_no"] = o.AccountNo
	}
	if true {
		toSerialize["allow_partial"] = o.AllowPartial
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["effective_date"] = o.EffectiveDate
	}
	if true {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if o.ExternalData != nil {
		toSerialize["external_data"] = o.ExternalData
	}
	if true {
		toSerialize["force_post"] = o.ForcePost
	}
	if o.RiskInfo != nil {
		toSerialize["risk_info"] = o.RiskInfo
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	if o.UserData != nil {
		toSerialize["user_data"] = o.UserData
	}
	return json.Marshal(toSerialize)
}

type NullableHoldModifyRequest struct {
	value *HoldModifyRequest
	isSet bool
}

func (v NullableHoldModifyRequest) Get() *HoldModifyRequest {
	return v.value
}

func (v *NullableHoldModifyRequest) Set(val *HoldModifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHoldModifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHoldModifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHoldModifyRequest(val *HoldModifyRequest) *NullableHoldModifyRequest {
	return &NullableHoldModifyRequest{value: val, isSet: true}
}

func (v NullableHoldModifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHoldModifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
