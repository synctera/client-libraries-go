/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// PaymentScheduleListAllOf struct for PaymentScheduleListAllOf
type PaymentScheduleListAllOf struct {
	// Array of payment schedules.
	PaymentSchedules []PaymentSchedule `json:"payment_schedules"`
}

// NewPaymentScheduleListAllOf instantiates a new PaymentScheduleListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentScheduleListAllOf(paymentSchedules []PaymentSchedule) *PaymentScheduleListAllOf {
	this := PaymentScheduleListAllOf{}
	this.PaymentSchedules = paymentSchedules
	return &this
}

// NewPaymentScheduleListAllOfWithDefaults instantiates a new PaymentScheduleListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentScheduleListAllOfWithDefaults() *PaymentScheduleListAllOf {
	this := PaymentScheduleListAllOf{}
	return &this
}

// GetPaymentSchedules returns the PaymentSchedules field value
func (o *PaymentScheduleListAllOf) GetPaymentSchedules() []PaymentSchedule {
	if o == nil {
		var ret []PaymentSchedule
		return ret
	}

	return o.PaymentSchedules
}

// GetPaymentSchedulesOk returns a tuple with the PaymentSchedules field value
// and a boolean to check if the value has been set.
func (o *PaymentScheduleListAllOf) GetPaymentSchedulesOk() ([]PaymentSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return o.PaymentSchedules, true
}

// SetPaymentSchedules sets field value
func (o *PaymentScheduleListAllOf) SetPaymentSchedules(v []PaymentSchedule) {
	o.PaymentSchedules = v
}

func (o PaymentScheduleListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["payment_schedules"] = o.PaymentSchedules
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentScheduleListAllOf struct {
	value *PaymentScheduleListAllOf
	isSet bool
}

func (v NullablePaymentScheduleListAllOf) Get() *PaymentScheduleListAllOf {
	return v.value
}

func (v *NullablePaymentScheduleListAllOf) Set(val *PaymentScheduleListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentScheduleListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentScheduleListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentScheduleListAllOf(val *PaymentScheduleListAllOf) *NullablePaymentScheduleListAllOf {
	return &NullablePaymentScheduleListAllOf{value: val, isSet: true}
}

func (v NullablePaymentScheduleListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentScheduleListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
