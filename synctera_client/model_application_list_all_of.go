/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// ApplicationListAllOf struct for ApplicationListAllOf
type ApplicationListAllOf struct {
	// Array of credit applications.
	Applications []ApplicationResponse `json:"applications"`
}

// NewApplicationListAllOf instantiates a new ApplicationListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationListAllOf(applications []ApplicationResponse) *ApplicationListAllOf {
	this := ApplicationListAllOf{}
	this.Applications = applications
	return &this
}

// NewApplicationListAllOfWithDefaults instantiates a new ApplicationListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationListAllOfWithDefaults() *ApplicationListAllOf {
	this := ApplicationListAllOf{}
	return &this
}

// GetApplications returns the Applications field value
func (o *ApplicationListAllOf) GetApplications() []ApplicationResponse {
	if o == nil {
		var ret []ApplicationResponse
		return ret
	}

	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value
// and a boolean to check if the value has been set.
func (o *ApplicationListAllOf) GetApplicationsOk() ([]ApplicationResponse, bool) {
	if o == nil {
		return nil, false
	}
	return o.Applications, true
}

// SetApplications sets field value
func (o *ApplicationListAllOf) SetApplications(v []ApplicationResponse) {
	o.Applications = v
}

func (o ApplicationListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["applications"] = o.Applications
	}
	return json.Marshal(toSerialize)
}

type NullableApplicationListAllOf struct {
	value *ApplicationListAllOf
	isSet bool
}

func (v NullableApplicationListAllOf) Get() *ApplicationListAllOf {
	return v.value
}

func (v *NullableApplicationListAllOf) Set(val *ApplicationListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationListAllOf(val *ApplicationListAllOf) *NullableApplicationListAllOf {
	return &NullableApplicationListAllOf{value: val, isSet: true}
}

func (v NullableApplicationListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
