/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// ExternalPaymentDate Principalâ€™s date of birth
type ExternalPaymentDate struct {
	// Day of birth
	Day int32 `json:"day"`
	// Month of birth
	Month int32 `json:"month"`
	// Year of birth
	Year int32 `json:"year"`
}

// NewExternalPaymentDate instantiates a new ExternalPaymentDate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalPaymentDate(day int32, month int32, year int32) *ExternalPaymentDate {
	this := ExternalPaymentDate{}
	this.Day = day
	this.Month = month
	this.Year = year
	return &this
}

// NewExternalPaymentDateWithDefaults instantiates a new ExternalPaymentDate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalPaymentDateWithDefaults() *ExternalPaymentDate {
	this := ExternalPaymentDate{}
	return &this
}

// GetDay returns the Day field value
func (o *ExternalPaymentDate) GetDay() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Day
}

// GetDayOk returns a tuple with the Day field value
// and a boolean to check if the value has been set.
func (o *ExternalPaymentDate) GetDayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Day, true
}

// SetDay sets field value
func (o *ExternalPaymentDate) SetDay(v int32) {
	o.Day = v
}

// GetMonth returns the Month field value
func (o *ExternalPaymentDate) GetMonth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Month
}

// GetMonthOk returns a tuple with the Month field value
// and a boolean to check if the value has been set.
func (o *ExternalPaymentDate) GetMonthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Month, true
}

// SetMonth sets field value
func (o *ExternalPaymentDate) SetMonth(v int32) {
	o.Month = v
}

// GetYear returns the Year field value
func (o *ExternalPaymentDate) GetYear() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Year
}

// GetYearOk returns a tuple with the Year field value
// and a boolean to check if the value has been set.
func (o *ExternalPaymentDate) GetYearOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Year, true
}

// SetYear sets field value
func (o *ExternalPaymentDate) SetYear(v int32) {
	o.Year = v
}

func (o ExternalPaymentDate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["day"] = o.Day
	}
	if true {
		toSerialize["month"] = o.Month
	}
	if true {
		toSerialize["year"] = o.Year
	}
	return json.Marshal(toSerialize)
}

type NullableExternalPaymentDate struct {
	value *ExternalPaymentDate
	isSet bool
}

func (v NullableExternalPaymentDate) Get() *ExternalPaymentDate {
	return v.value
}

func (v *NullableExternalPaymentDate) Set(val *ExternalPaymentDate) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalPaymentDate) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalPaymentDate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalPaymentDate(val *ExternalPaymentDate) *NullableExternalPaymentDate {
	return &NullableExternalPaymentDate{value: val, isSet: true}
}

func (v NullableExternalPaymentDate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalPaymentDate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
