/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// CustomHeaders struct for CustomHeaders
type CustomHeaders struct {
	MyHeaderName1 *string `json:"my_header_name_1,omitempty"`
	MyHeaderName2 *string `json:"my_header_name_2,omitempty"`
	MyHeaderName3 *string `json:"my_header_name_3,omitempty"`
}

// NewCustomHeaders instantiates a new CustomHeaders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomHeaders() *CustomHeaders {
	this := CustomHeaders{}
	return &this
}

// NewCustomHeadersWithDefaults instantiates a new CustomHeaders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomHeadersWithDefaults() *CustomHeaders {
	this := CustomHeaders{}
	return &this
}

// GetMyHeaderName1 returns the MyHeaderName1 field value if set, zero value otherwise.
func (o *CustomHeaders) GetMyHeaderName1() string {
	if o == nil || o.MyHeaderName1 == nil {
		var ret string
		return ret
	}
	return *o.MyHeaderName1
}

// GetMyHeaderName1Ok returns a tuple with the MyHeaderName1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomHeaders) GetMyHeaderName1Ok() (*string, bool) {
	if o == nil || o.MyHeaderName1 == nil {
		return nil, false
	}
	return o.MyHeaderName1, true
}

// HasMyHeaderName1 returns a boolean if a field has been set.
func (o *CustomHeaders) HasMyHeaderName1() bool {
	if o != nil && o.MyHeaderName1 != nil {
		return true
	}

	return false
}

// SetMyHeaderName1 gets a reference to the given string and assigns it to the MyHeaderName1 field.
func (o *CustomHeaders) SetMyHeaderName1(v string) {
	o.MyHeaderName1 = &v
}

// GetMyHeaderName2 returns the MyHeaderName2 field value if set, zero value otherwise.
func (o *CustomHeaders) GetMyHeaderName2() string {
	if o == nil || o.MyHeaderName2 == nil {
		var ret string
		return ret
	}
	return *o.MyHeaderName2
}

// GetMyHeaderName2Ok returns a tuple with the MyHeaderName2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomHeaders) GetMyHeaderName2Ok() (*string, bool) {
	if o == nil || o.MyHeaderName2 == nil {
		return nil, false
	}
	return o.MyHeaderName2, true
}

// HasMyHeaderName2 returns a boolean if a field has been set.
func (o *CustomHeaders) HasMyHeaderName2() bool {
	if o != nil && o.MyHeaderName2 != nil {
		return true
	}

	return false
}

// SetMyHeaderName2 gets a reference to the given string and assigns it to the MyHeaderName2 field.
func (o *CustomHeaders) SetMyHeaderName2(v string) {
	o.MyHeaderName2 = &v
}

// GetMyHeaderName3 returns the MyHeaderName3 field value if set, zero value otherwise.
func (o *CustomHeaders) GetMyHeaderName3() string {
	if o == nil || o.MyHeaderName3 == nil {
		var ret string
		return ret
	}
	return *o.MyHeaderName3
}

// GetMyHeaderName3Ok returns a tuple with the MyHeaderName3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomHeaders) GetMyHeaderName3Ok() (*string, bool) {
	if o == nil || o.MyHeaderName3 == nil {
		return nil, false
	}
	return o.MyHeaderName3, true
}

// HasMyHeaderName3 returns a boolean if a field has been set.
func (o *CustomHeaders) HasMyHeaderName3() bool {
	if o != nil && o.MyHeaderName3 != nil {
		return true
	}

	return false
}

// SetMyHeaderName3 gets a reference to the given string and assigns it to the MyHeaderName3 field.
func (o *CustomHeaders) SetMyHeaderName3(v string) {
	o.MyHeaderName3 = &v
}

func (o CustomHeaders) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MyHeaderName1 != nil {
		toSerialize["my_header_name_1"] = o.MyHeaderName1
	}
	if o.MyHeaderName2 != nil {
		toSerialize["my_header_name_2"] = o.MyHeaderName2
	}
	if o.MyHeaderName3 != nil {
		toSerialize["my_header_name_3"] = o.MyHeaderName3
	}
	return json.Marshal(toSerialize)
}

type NullableCustomHeaders struct {
	value *CustomHeaders
	isSet bool
}

func (v NullableCustomHeaders) Get() *CustomHeaders {
	return v.value
}

func (v *NullableCustomHeaders) Set(val *CustomHeaders) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomHeaders) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomHeaders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomHeaders(val *CustomHeaders) *NullableCustomHeaders {
	return &NullableCustomHeaders{value: val, isSet: true}
}

func (v NullableCustomHeaders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomHeaders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
