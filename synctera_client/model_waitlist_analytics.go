/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// WaitlistAnalytics Daily Waitlist Analytics
type WaitlistAnalytics struct {
	// Total number of prospects that were admitted on the given day
	Admitted *int32 `json:"admitted,omitempty"`
	// Total number of prospects that signed up on the given day
	Created *int32 `json:"created,omitempty"`
	// Date
	Date *string `json:"date,omitempty"`
	// Total number of prospects that were deleted on the given day
	Deleted *int32 `json:"deleted,omitempty"`
	// Total number of prospects that were verified on the given day
	Verified *int32 `json:"verified,omitempty"`
	// Total number of prospects that were withdrawn on the given day
	Withdrawn *int32 `json:"withdrawn,omitempty"`
}

// NewWaitlistAnalytics instantiates a new WaitlistAnalytics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWaitlistAnalytics() *WaitlistAnalytics {
	this := WaitlistAnalytics{}
	return &this
}

// NewWaitlistAnalyticsWithDefaults instantiates a new WaitlistAnalytics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWaitlistAnalyticsWithDefaults() *WaitlistAnalytics {
	this := WaitlistAnalytics{}
	return &this
}

// GetAdmitted returns the Admitted field value if set, zero value otherwise.
func (o *WaitlistAnalytics) GetAdmitted() int32 {
	if o == nil || o.Admitted == nil {
		var ret int32
		return ret
	}
	return *o.Admitted
}

// GetAdmittedOk returns a tuple with the Admitted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitlistAnalytics) GetAdmittedOk() (*int32, bool) {
	if o == nil || o.Admitted == nil {
		return nil, false
	}
	return o.Admitted, true
}

// HasAdmitted returns a boolean if a field has been set.
func (o *WaitlistAnalytics) HasAdmitted() bool {
	if o != nil && o.Admitted != nil {
		return true
	}

	return false
}

// SetAdmitted gets a reference to the given int32 and assigns it to the Admitted field.
func (o *WaitlistAnalytics) SetAdmitted(v int32) {
	o.Admitted = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WaitlistAnalytics) GetCreated() int32 {
	if o == nil || o.Created == nil {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitlistAnalytics) GetCreatedOk() (*int32, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WaitlistAnalytics) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *WaitlistAnalytics) SetCreated(v int32) {
	o.Created = &v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *WaitlistAnalytics) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitlistAnalytics) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *WaitlistAnalytics) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *WaitlistAnalytics) SetDate(v string) {
	o.Date = &v
}

// GetDeleted returns the Deleted field value if set, zero value otherwise.
func (o *WaitlistAnalytics) GetDeleted() int32 {
	if o == nil || o.Deleted == nil {
		var ret int32
		return ret
	}
	return *o.Deleted
}

// GetDeletedOk returns a tuple with the Deleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitlistAnalytics) GetDeletedOk() (*int32, bool) {
	if o == nil || o.Deleted == nil {
		return nil, false
	}
	return o.Deleted, true
}

// HasDeleted returns a boolean if a field has been set.
func (o *WaitlistAnalytics) HasDeleted() bool {
	if o != nil && o.Deleted != nil {
		return true
	}

	return false
}

// SetDeleted gets a reference to the given int32 and assigns it to the Deleted field.
func (o *WaitlistAnalytics) SetDeleted(v int32) {
	o.Deleted = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *WaitlistAnalytics) GetVerified() int32 {
	if o == nil || o.Verified == nil {
		var ret int32
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitlistAnalytics) GetVerifiedOk() (*int32, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *WaitlistAnalytics) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given int32 and assigns it to the Verified field.
func (o *WaitlistAnalytics) SetVerified(v int32) {
	o.Verified = &v
}

// GetWithdrawn returns the Withdrawn field value if set, zero value otherwise.
func (o *WaitlistAnalytics) GetWithdrawn() int32 {
	if o == nil || o.Withdrawn == nil {
		var ret int32
		return ret
	}
	return *o.Withdrawn
}

// GetWithdrawnOk returns a tuple with the Withdrawn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitlistAnalytics) GetWithdrawnOk() (*int32, bool) {
	if o == nil || o.Withdrawn == nil {
		return nil, false
	}
	return o.Withdrawn, true
}

// HasWithdrawn returns a boolean if a field has been set.
func (o *WaitlistAnalytics) HasWithdrawn() bool {
	if o != nil && o.Withdrawn != nil {
		return true
	}

	return false
}

// SetWithdrawn gets a reference to the given int32 and assigns it to the Withdrawn field.
func (o *WaitlistAnalytics) SetWithdrawn(v int32) {
	o.Withdrawn = &v
}

func (o WaitlistAnalytics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Admitted != nil {
		toSerialize["admitted"] = o.Admitted
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.Deleted != nil {
		toSerialize["deleted"] = o.Deleted
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	if o.Withdrawn != nil {
		toSerialize["withdrawn"] = o.Withdrawn
	}
	return json.Marshal(toSerialize)
}

type NullableWaitlistAnalytics struct {
	value *WaitlistAnalytics
	isSet bool
}

func (v NullableWaitlistAnalytics) Get() *WaitlistAnalytics {
	return v.value
}

func (v *NullableWaitlistAnalytics) Set(val *WaitlistAnalytics) {
	v.value = val
	v.isSet = true
}

func (v NullableWaitlistAnalytics) IsSet() bool {
	return v.isSet
}

func (v *NullableWaitlistAnalytics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWaitlistAnalytics(val *WaitlistAnalytics) *NullableWaitlistAnalytics {
	return &NullableWaitlistAnalytics{value: val, isSet: true}
}

func (v NullableWaitlistAnalytics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWaitlistAnalytics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
