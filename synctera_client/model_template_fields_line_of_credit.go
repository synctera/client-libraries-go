/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// TemplateFieldsLineOfCredit struct for TemplateFieldsLineOfCredit
type TemplateFieldsLineOfCredit struct {
	AccountType AccountType `json:"account_type"`
	// Bank country of the account. ISO 3166-1 Alpha-2 or Alpha-3 country code.
	BankCountry string `json:"bank_country"`
	// Account currency. ISO 4217 alphabetic currency code
	Currency string `json:"currency"`
	// The number of days an account can stay delinquent before marking an account as charged-off.
	ChargeoffPeriod *int32 `json:"chargeoff_period,omitempty"`
	// The number of days past the due date to wait for a minimum payment before marking an account as delinquent.
	DelinquencyPeriod *int32 `json:"delinquency_period,omitempty"`
	// The number of days past the billing period to allow for payment before it is considered due. This directly infers the due date for a payment.
	GracePeriod *int32 `json:"grace_period,omitempty"`
	// An interest account product that the current account associates with. The account product must have its calculation_method set to COMPOUNDED_DAILY.
	InterestProductId *string        `json:"interest_product_id,omitempty"`
	MinimumPayment    MinimumPayment `json:"minimum_payment"`
}

// NewTemplateFieldsLineOfCredit instantiates a new TemplateFieldsLineOfCredit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateFieldsLineOfCredit(accountType AccountType, bankCountry string, currency string, minimumPayment MinimumPayment) *TemplateFieldsLineOfCredit {
	this := TemplateFieldsLineOfCredit{}
	this.AccountType = accountType
	this.BankCountry = bankCountry
	this.Currency = currency
	var chargeoffPeriod int32 = 90
	this.ChargeoffPeriod = &chargeoffPeriod
	var delinquencyPeriod int32 = 30
	this.DelinquencyPeriod = &delinquencyPeriod
	var gracePeriod int32 = 30
	this.GracePeriod = &gracePeriod
	this.MinimumPayment = minimumPayment
	return &this
}

// NewTemplateFieldsLineOfCreditWithDefaults instantiates a new TemplateFieldsLineOfCredit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateFieldsLineOfCreditWithDefaults() *TemplateFieldsLineOfCredit {
	this := TemplateFieldsLineOfCredit{}
	var chargeoffPeriod int32 = 90
	this.ChargeoffPeriod = &chargeoffPeriod
	var delinquencyPeriod int32 = 30
	this.DelinquencyPeriod = &delinquencyPeriod
	var gracePeriod int32 = 30
	this.GracePeriod = &gracePeriod
	return &this
}

// GetAccountType returns the AccountType field value
func (o *TemplateFieldsLineOfCredit) GetAccountType() AccountType {
	if o == nil {
		var ret AccountType
		return ret
	}

	return o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetAccountTypeOk() (*AccountType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountType, true
}

// SetAccountType sets field value
func (o *TemplateFieldsLineOfCredit) SetAccountType(v AccountType) {
	o.AccountType = v
}

// GetBankCountry returns the BankCountry field value
func (o *TemplateFieldsLineOfCredit) GetBankCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankCountry
}

// GetBankCountryOk returns a tuple with the BankCountry field value
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetBankCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankCountry, true
}

// SetBankCountry sets field value
func (o *TemplateFieldsLineOfCredit) SetBankCountry(v string) {
	o.BankCountry = v
}

// GetCurrency returns the Currency field value
func (o *TemplateFieldsLineOfCredit) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *TemplateFieldsLineOfCredit) SetCurrency(v string) {
	o.Currency = v
}

// GetChargeoffPeriod returns the ChargeoffPeriod field value if set, zero value otherwise.
func (o *TemplateFieldsLineOfCredit) GetChargeoffPeriod() int32 {
	if o == nil || o.ChargeoffPeriod == nil {
		var ret int32
		return ret
	}
	return *o.ChargeoffPeriod
}

// GetChargeoffPeriodOk returns a tuple with the ChargeoffPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetChargeoffPeriodOk() (*int32, bool) {
	if o == nil || o.ChargeoffPeriod == nil {
		return nil, false
	}
	return o.ChargeoffPeriod, true
}

// HasChargeoffPeriod returns a boolean if a field has been set.
func (o *TemplateFieldsLineOfCredit) HasChargeoffPeriod() bool {
	if o != nil && o.ChargeoffPeriod != nil {
		return true
	}

	return false
}

// SetChargeoffPeriod gets a reference to the given int32 and assigns it to the ChargeoffPeriod field.
func (o *TemplateFieldsLineOfCredit) SetChargeoffPeriod(v int32) {
	o.ChargeoffPeriod = &v
}

// GetDelinquencyPeriod returns the DelinquencyPeriod field value if set, zero value otherwise.
func (o *TemplateFieldsLineOfCredit) GetDelinquencyPeriod() int32 {
	if o == nil || o.DelinquencyPeriod == nil {
		var ret int32
		return ret
	}
	return *o.DelinquencyPeriod
}

// GetDelinquencyPeriodOk returns a tuple with the DelinquencyPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetDelinquencyPeriodOk() (*int32, bool) {
	if o == nil || o.DelinquencyPeriod == nil {
		return nil, false
	}
	return o.DelinquencyPeriod, true
}

// HasDelinquencyPeriod returns a boolean if a field has been set.
func (o *TemplateFieldsLineOfCredit) HasDelinquencyPeriod() bool {
	if o != nil && o.DelinquencyPeriod != nil {
		return true
	}

	return false
}

// SetDelinquencyPeriod gets a reference to the given int32 and assigns it to the DelinquencyPeriod field.
func (o *TemplateFieldsLineOfCredit) SetDelinquencyPeriod(v int32) {
	o.DelinquencyPeriod = &v
}

// GetGracePeriod returns the GracePeriod field value if set, zero value otherwise.
func (o *TemplateFieldsLineOfCredit) GetGracePeriod() int32 {
	if o == nil || o.GracePeriod == nil {
		var ret int32
		return ret
	}
	return *o.GracePeriod
}

// GetGracePeriodOk returns a tuple with the GracePeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetGracePeriodOk() (*int32, bool) {
	if o == nil || o.GracePeriod == nil {
		return nil, false
	}
	return o.GracePeriod, true
}

// HasGracePeriod returns a boolean if a field has been set.
func (o *TemplateFieldsLineOfCredit) HasGracePeriod() bool {
	if o != nil && o.GracePeriod != nil {
		return true
	}

	return false
}

// SetGracePeriod gets a reference to the given int32 and assigns it to the GracePeriod field.
func (o *TemplateFieldsLineOfCredit) SetGracePeriod(v int32) {
	o.GracePeriod = &v
}

// GetInterestProductId returns the InterestProductId field value if set, zero value otherwise.
func (o *TemplateFieldsLineOfCredit) GetInterestProductId() string {
	if o == nil || o.InterestProductId == nil {
		var ret string
		return ret
	}
	return *o.InterestProductId
}

// GetInterestProductIdOk returns a tuple with the InterestProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetInterestProductIdOk() (*string, bool) {
	if o == nil || o.InterestProductId == nil {
		return nil, false
	}
	return o.InterestProductId, true
}

// HasInterestProductId returns a boolean if a field has been set.
func (o *TemplateFieldsLineOfCredit) HasInterestProductId() bool {
	if o != nil && o.InterestProductId != nil {
		return true
	}

	return false
}

// SetInterestProductId gets a reference to the given string and assigns it to the InterestProductId field.
func (o *TemplateFieldsLineOfCredit) SetInterestProductId(v string) {
	o.InterestProductId = &v
}

// GetMinimumPayment returns the MinimumPayment field value
func (o *TemplateFieldsLineOfCredit) GetMinimumPayment() MinimumPayment {
	if o == nil {
		var ret MinimumPayment
		return ret
	}

	return o.MinimumPayment
}

// GetMinimumPaymentOk returns a tuple with the MinimumPayment field value
// and a boolean to check if the value has been set.
func (o *TemplateFieldsLineOfCredit) GetMinimumPaymentOk() (*MinimumPayment, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinimumPayment, true
}

// SetMinimumPayment sets field value
func (o *TemplateFieldsLineOfCredit) SetMinimumPayment(v MinimumPayment) {
	o.MinimumPayment = v
}

func (o TemplateFieldsLineOfCredit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_type"] = o.AccountType
	}
	if true {
		toSerialize["bank_country"] = o.BankCountry
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if o.ChargeoffPeriod != nil {
		toSerialize["chargeoff_period"] = o.ChargeoffPeriod
	}
	if o.DelinquencyPeriod != nil {
		toSerialize["delinquency_period"] = o.DelinquencyPeriod
	}
	if o.GracePeriod != nil {
		toSerialize["grace_period"] = o.GracePeriod
	}
	if o.InterestProductId != nil {
		toSerialize["interest_product_id"] = o.InterestProductId
	}
	if true {
		toSerialize["minimum_payment"] = o.MinimumPayment
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateFieldsLineOfCredit struct {
	value *TemplateFieldsLineOfCredit
	isSet bool
}

func (v NullableTemplateFieldsLineOfCredit) Get() *TemplateFieldsLineOfCredit {
	return v.value
}

func (v *NullableTemplateFieldsLineOfCredit) Set(val *TemplateFieldsLineOfCredit) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateFieldsLineOfCredit) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateFieldsLineOfCredit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateFieldsLineOfCredit(val *TemplateFieldsLineOfCredit) *NullableTemplateFieldsLineOfCredit {
	return &NullableTemplateFieldsLineOfCredit{value: val, isSet: true}
}

func (v NullableTemplateFieldsLineOfCredit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateFieldsLineOfCredit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
