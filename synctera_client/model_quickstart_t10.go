/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// QuickstartT10 struct for QuickstartT10
type QuickstartT10 struct {
	// The ID of the bank partner works with within this program
	BankId int32 `json:"bank_id"`
	// The ID of the partner
	PartnerId int32 `json:"partner_id"`
}

// NewQuickstartT10 instantiates a new QuickstartT10 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuickstartT10(bankId int32, partnerId int32) *QuickstartT10 {
	this := QuickstartT10{}
	this.BankId = bankId
	this.PartnerId = partnerId
	return &this
}

// NewQuickstartT10WithDefaults instantiates a new QuickstartT10 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuickstartT10WithDefaults() *QuickstartT10 {
	this := QuickstartT10{}
	return &this
}

// GetBankId returns the BankId field value
func (o *QuickstartT10) GetBankId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value
// and a boolean to check if the value has been set.
func (o *QuickstartT10) GetBankIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankId, true
}

// SetBankId sets field value
func (o *QuickstartT10) SetBankId(v int32) {
	o.BankId = v
}

// GetPartnerId returns the PartnerId field value
func (o *QuickstartT10) GetPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value
// and a boolean to check if the value has been set.
func (o *QuickstartT10) GetPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerId, true
}

// SetPartnerId sets field value
func (o *QuickstartT10) SetPartnerId(v int32) {
	o.PartnerId = v
}

func (o QuickstartT10) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bank_id"] = o.BankId
	}
	if true {
		toSerialize["partner_id"] = o.PartnerId
	}
	return json.Marshal(toSerialize)
}

type NullableQuickstartT10 struct {
	value *QuickstartT10
	isSet bool
}

func (v NullableQuickstartT10) Get() *QuickstartT10 {
	return v.value
}

func (v *NullableQuickstartT10) Set(val *QuickstartT10) {
	v.value = val
	v.isSet = true
}

func (v NullableQuickstartT10) IsSet() bool {
	return v.isSet
}

func (v *NullableQuickstartT10) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuickstartT10(val *QuickstartT10) *NullableQuickstartT10 {
	return &NullableQuickstartT10{value: val, isSet: true}
}

func (v NullableQuickstartT10) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuickstartT10) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
