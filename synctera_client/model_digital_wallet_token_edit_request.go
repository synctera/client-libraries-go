/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.19.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// DigitalWalletTokenEditRequest struct for DigitalWalletTokenEditRequest
type DigitalWalletTokenEditRequest struct {
	// The status indicating the digital wallet token lifecycle state
	TokenStatus string `json:"token_status"`
}

// NewDigitalWalletTokenEditRequest instantiates a new DigitalWalletTokenEditRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDigitalWalletTokenEditRequest(tokenStatus string) *DigitalWalletTokenEditRequest {
	this := DigitalWalletTokenEditRequest{}
	this.TokenStatus = tokenStatus
	return &this
}

// NewDigitalWalletTokenEditRequestWithDefaults instantiates a new DigitalWalletTokenEditRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDigitalWalletTokenEditRequestWithDefaults() *DigitalWalletTokenEditRequest {
	this := DigitalWalletTokenEditRequest{}
	return &this
}

// GetTokenStatus returns the TokenStatus field value
func (o *DigitalWalletTokenEditRequest) GetTokenStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenStatus
}

// GetTokenStatusOk returns a tuple with the TokenStatus field value
// and a boolean to check if the value has been set.
func (o *DigitalWalletTokenEditRequest) GetTokenStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenStatus, true
}

// SetTokenStatus sets field value
func (o *DigitalWalletTokenEditRequest) SetTokenStatus(v string) {
	o.TokenStatus = v
}

func (o DigitalWalletTokenEditRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["token_status"] = o.TokenStatus
	}
	return json.Marshal(toSerialize)
}

type NullableDigitalWalletTokenEditRequest struct {
	value *DigitalWalletTokenEditRequest
	isSet bool
}

func (v NullableDigitalWalletTokenEditRequest) Get() *DigitalWalletTokenEditRequest {
	return v.value
}

func (v *NullableDigitalWalletTokenEditRequest) Set(val *DigitalWalletTokenEditRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDigitalWalletTokenEditRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDigitalWalletTokenEditRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDigitalWalletTokenEditRequest(val *DigitalWalletTokenEditRequest) *NullableDigitalWalletTokenEditRequest {
	return &NullableDigitalWalletTokenEditRequest{value: val, isSet: true}
}

func (v NullableDigitalWalletTokenEditRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDigitalWalletTokenEditRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


