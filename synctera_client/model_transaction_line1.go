/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.19.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"time"
)

// TransactionLine1 struct for TransactionLine1
type TransactionLine1 struct {
	// The account uuid associated with this transaction line
	AccountId string `json:"account_id"`
	// The account number associated with this transaction line
	AccountNo string `json:"account_no"`
	// The amount (in cents) of the transaction
	Amount int32 `json:"amount"`
	// The account \"available balance\" at the point in time this transaction was posted
	AvailableBalance int32 `json:"available_balance"`
	// The account balance at the point in time this transaction was posted
	Balance int32 `json:"balance"`
	// The creation date of the transaction
	Created time.Time `json:"created"`
	// ISO 4217 alphabetic currency code of the transfer amount
	Currency string `json:"currency"`
	DcSign DcSign `json:"dc_sign"`
	// Whether or not this line is considered a fee
	IsFee bool `json:"is_fee"`
	// Whether or not this line represents a GL account
	IsGlAcc bool `json:"is_gl_acc"`
	// Whether or not this line is considered the \"offset\" line
	IsOffset bool `json:"is_offset"`
	// Whether or not this line is considered the \"primary\" line
	IsPrimary bool `json:"is_primary"`
	Meta map[string]interface{} `json:"meta"`
	// The network this transaction is associated with
	Network string `json:"network"`
	RelatedLine int32 `json:"related_line"`
	Seq int32 `json:"seq"`
	// The tenant associated with this transaction, in the form \"<bankid>_<partnerid>\"
	Tenant string `json:"tenant"`
	// The creation date of the transaction
	Updated time.Time `json:"updated"`
	Uuid string `json:"uuid"`
}

// NewTransactionLine1 instantiates a new TransactionLine1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransactionLine1(accountId string, accountNo string, amount int32, availableBalance int32, balance int32, created time.Time, currency string, dcSign DcSign, isFee bool, isGlAcc bool, isOffset bool, isPrimary bool, meta map[string]interface{}, network string, relatedLine int32, seq int32, tenant string, updated time.Time, uuid string) *TransactionLine1 {
	this := TransactionLine1{}
	this.AccountId = accountId
	this.AccountNo = accountNo
	this.Amount = amount
	this.AvailableBalance = availableBalance
	this.Balance = balance
	this.Created = created
	this.Currency = currency
	this.DcSign = dcSign
	this.IsFee = isFee
	this.IsGlAcc = isGlAcc
	this.IsOffset = isOffset
	this.IsPrimary = isPrimary
	this.Meta = meta
	this.Network = network
	this.RelatedLine = relatedLine
	this.Seq = seq
	this.Tenant = tenant
	this.Updated = updated
	this.Uuid = uuid
	return &this
}

// NewTransactionLine1WithDefaults instantiates a new TransactionLine1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransactionLine1WithDefaults() *TransactionLine1 {
	this := TransactionLine1{}
	return &this
}

// GetAccountId returns the AccountId field value
func (o *TransactionLine1) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *TransactionLine1) SetAccountId(v string) {
	o.AccountId = v
}

// GetAccountNo returns the AccountNo field value
func (o *TransactionLine1) GetAccountNo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountNo
}

// GetAccountNoOk returns a tuple with the AccountNo field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetAccountNoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountNo, true
}

// SetAccountNo sets field value
func (o *TransactionLine1) SetAccountNo(v string) {
	o.AccountNo = v
}

// GetAmount returns the Amount field value
func (o *TransactionLine1) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransactionLine1) SetAmount(v int32) {
	o.Amount = v
}

// GetAvailableBalance returns the AvailableBalance field value
func (o *TransactionLine1) GetAvailableBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AvailableBalance
}

// GetAvailableBalanceOk returns a tuple with the AvailableBalance field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetAvailableBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableBalance, true
}

// SetAvailableBalance sets field value
func (o *TransactionLine1) SetAvailableBalance(v int32) {
	o.AvailableBalance = v
}

// GetBalance returns the Balance field value
func (o *TransactionLine1) GetBalance() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetBalanceOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balance, true
}

// SetBalance sets field value
func (o *TransactionLine1) SetBalance(v int32) {
	o.Balance = v
}

// GetCreated returns the Created field value
func (o *TransactionLine1) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *TransactionLine1) SetCreated(v time.Time) {
	o.Created = v
}

// GetCurrency returns the Currency field value
func (o *TransactionLine1) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *TransactionLine1) SetCurrency(v string) {
	o.Currency = v
}

// GetDcSign returns the DcSign field value
func (o *TransactionLine1) GetDcSign() DcSign {
	if o == nil {
		var ret DcSign
		return ret
	}

	return o.DcSign
}

// GetDcSignOk returns a tuple with the DcSign field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetDcSignOk() (*DcSign, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DcSign, true
}

// SetDcSign sets field value
func (o *TransactionLine1) SetDcSign(v DcSign) {
	o.DcSign = v
}

// GetIsFee returns the IsFee field value
func (o *TransactionLine1) GetIsFee() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFee
}

// GetIsFeeOk returns a tuple with the IsFee field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetIsFeeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFee, true
}

// SetIsFee sets field value
func (o *TransactionLine1) SetIsFee(v bool) {
	o.IsFee = v
}

// GetIsGlAcc returns the IsGlAcc field value
func (o *TransactionLine1) GetIsGlAcc() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsGlAcc
}

// GetIsGlAccOk returns a tuple with the IsGlAcc field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetIsGlAccOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsGlAcc, true
}

// SetIsGlAcc sets field value
func (o *TransactionLine1) SetIsGlAcc(v bool) {
	o.IsGlAcc = v
}

// GetIsOffset returns the IsOffset field value
func (o *TransactionLine1) GetIsOffset() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOffset
}

// GetIsOffsetOk returns a tuple with the IsOffset field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetIsOffsetOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOffset, true
}

// SetIsOffset sets field value
func (o *TransactionLine1) SetIsOffset(v bool) {
	o.IsOffset = v
}

// GetIsPrimary returns the IsPrimary field value
func (o *TransactionLine1) GetIsPrimary() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsPrimary
}

// GetIsPrimaryOk returns a tuple with the IsPrimary field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetIsPrimaryOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsPrimary, true
}

// SetIsPrimary sets field value
func (o *TransactionLine1) SetIsPrimary(v bool) {
	o.IsPrimary = v
}

// GetMeta returns the Meta field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *TransactionLine1) GetMeta() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TransactionLine1) GetMetaOk() (map[string]interface{}, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// SetMeta sets field value
func (o *TransactionLine1) SetMeta(v map[string]interface{}) {
	o.Meta = v
}

// GetNetwork returns the Network field value
func (o *TransactionLine1) GetNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetNetworkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *TransactionLine1) SetNetwork(v string) {
	o.Network = v
}

// GetRelatedLine returns the RelatedLine field value
func (o *TransactionLine1) GetRelatedLine() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelatedLine
}

// GetRelatedLineOk returns a tuple with the RelatedLine field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetRelatedLineOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelatedLine, true
}

// SetRelatedLine sets field value
func (o *TransactionLine1) SetRelatedLine(v int32) {
	o.RelatedLine = v
}

// GetSeq returns the Seq field value
func (o *TransactionLine1) GetSeq() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Seq
}

// GetSeqOk returns a tuple with the Seq field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetSeqOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Seq, true
}

// SetSeq sets field value
func (o *TransactionLine1) SetSeq(v int32) {
	o.Seq = v
}

// GetTenant returns the Tenant field value
func (o *TransactionLine1) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *TransactionLine1) SetTenant(v string) {
	o.Tenant = v
}

// GetUpdated returns the Updated field value
func (o *TransactionLine1) GetUpdated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetUpdatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Updated, true
}

// SetUpdated sets field value
func (o *TransactionLine1) SetUpdated(v time.Time) {
	o.Updated = v
}

// GetUuid returns the Uuid field value
func (o *TransactionLine1) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *TransactionLine1) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *TransactionLine1) SetUuid(v string) {
	o.Uuid = v
}

func (o TransactionLine1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_id"] = o.AccountId
	}
	if true {
		toSerialize["account_no"] = o.AccountNo
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["available_balance"] = o.AvailableBalance
	}
	if true {
		toSerialize["balance"] = o.Balance
	}
	if true {
		toSerialize["created"] = o.Created
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["dc_sign"] = o.DcSign
	}
	if true {
		toSerialize["is_fee"] = o.IsFee
	}
	if true {
		toSerialize["is_gl_acc"] = o.IsGlAcc
	}
	if true {
		toSerialize["is_offset"] = o.IsOffset
	}
	if true {
		toSerialize["is_primary"] = o.IsPrimary
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if true {
		toSerialize["network"] = o.Network
	}
	if true {
		toSerialize["related_line"] = o.RelatedLine
	}
	if true {
		toSerialize["seq"] = o.Seq
	}
	if true {
		toSerialize["tenant"] = o.Tenant
	}
	if true {
		toSerialize["updated"] = o.Updated
	}
	if true {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableTransactionLine1 struct {
	value *TransactionLine1
	isSet bool
}

func (v NullableTransactionLine1) Get() *TransactionLine1 {
	return v.value
}

func (v *NullableTransactionLine1) Set(val *TransactionLine1) {
	v.value = val
	v.isSet = true
}

func (v NullableTransactionLine1) IsSet() bool {
	return v.isSet
}

func (v *NullableTransactionLine1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransactionLine1(val *TransactionLine1) *NullableTransactionLine1 {
	return &NullableTransactionLine1{value: val, isSet: true}
}

func (v NullableTransactionLine1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransactionLine1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


