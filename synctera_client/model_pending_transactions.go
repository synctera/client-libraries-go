/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// PendingTransactions struct for PendingTransactions
type PendingTransactions struct {
	// If returned, use the next_page_token to query for the next page of results. Not returned if there are no more rows.
	NextPageToken NullableString `json:"next_page_token"`
	// List of pending transactions
	Result []PendingTransaction `json:"result"`
}

// NewPendingTransactions instantiates a new PendingTransactions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPendingTransactions(nextPageToken NullableString, result []PendingTransaction) *PendingTransactions {
	this := PendingTransactions{}
	this.NextPageToken = nextPageToken
	this.Result = result
	return &this
}

// NewPendingTransactionsWithDefaults instantiates a new PendingTransactions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPendingTransactionsWithDefaults() *PendingTransactions {
	this := PendingTransactions{}
	return &this
}

// GetNextPageToken returns the NextPageToken field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PendingTransactions) GetNextPageToken() string {
	if o == nil || o.NextPageToken.Get() == nil {
		var ret string
		return ret
	}

	return *o.NextPageToken.Get()
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PendingTransactions) GetNextPageTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextPageToken.Get(), o.NextPageToken.IsSet()
}

// SetNextPageToken sets field value
func (o *PendingTransactions) SetNextPageToken(v string) {
	o.NextPageToken.Set(&v)
}

// GetResult returns the Result field value
func (o *PendingTransactions) GetResult() []PendingTransaction {
	if o == nil {
		var ret []PendingTransaction
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *PendingTransactions) GetResultOk() ([]PendingTransaction, bool) {
	if o == nil {
		return nil, false
	}
	return o.Result, true
}

// SetResult sets field value
func (o *PendingTransactions) SetResult(v []PendingTransaction) {
	o.Result = v
}

func (o PendingTransactions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["next_page_token"] = o.NextPageToken.Get()
	}
	if true {
		toSerialize["result"] = o.Result
	}
	return json.Marshal(toSerialize)
}

type NullablePendingTransactions struct {
	value *PendingTransactions
	isSet bool
}

func (v NullablePendingTransactions) Get() *PendingTransactions {
	return v.value
}

func (v *NullablePendingTransactions) Set(val *PendingTransactions) {
	v.value = val
	v.isSet = true
}

func (v NullablePendingTransactions) IsSet() bool {
	return v.isSet
}

func (v *NullablePendingTransactions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePendingTransactions(val *PendingTransactions) *NullablePendingTransactions {
	return &NullablePendingTransactions{value: val, isSet: true}
}

func (v NullablePendingTransactions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePendingTransactions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
