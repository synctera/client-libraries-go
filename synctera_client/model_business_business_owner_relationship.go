/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.19.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"time"
)

// BusinessBusinessOwnerRelationship Denotes the relationship between specified businesses.
type BusinessBusinessOwnerRelationship struct {
	AdditionalData AdditionalOwnerData `json:"additional_data"`
	// The date and time the resource was created.
	CreationTime *time.Time `json:"creation_time,omitempty"`
	// Unique ID for the subject business. 
	FromBusinessId string `json:"from_business_id"`
	// Relationship unique identifier.
	Id *string `json:"id,omitempty"`
	// The date and time the resource was last updated.
	LastUpdatedTime *time.Time `json:"last_updated_time,omitempty"`
	// Optional field to store additional information about the resource. Intended to be used by the integrator to store non-sensitive data. 
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// The relationship type. One of the following: * `BENEFICIAL_OWNER_OF` – a person who directly or indirectly owns a portion of the business. * `MANAGING_PERSON_OF` – a person who is an officer, director, or other notable person of an organization. * `OWNER_OF` – a business with ownership of another business. 
	RelationshipType string `json:"relationship_type"`
	// Unique ID for the related business. 
	ToBusinessId string `json:"to_business_id"`
}

// NewBusinessBusinessOwnerRelationship instantiates a new BusinessBusinessOwnerRelationship object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessBusinessOwnerRelationship(additionalData AdditionalOwnerData, fromBusinessId string, relationshipType string, toBusinessId string) *BusinessBusinessOwnerRelationship {
	this := BusinessBusinessOwnerRelationship{}
	this.AdditionalData = additionalData
	this.FromBusinessId = fromBusinessId
	this.RelationshipType = relationshipType
	this.ToBusinessId = toBusinessId
	return &this
}

// NewBusinessBusinessOwnerRelationshipWithDefaults instantiates a new BusinessBusinessOwnerRelationship object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessBusinessOwnerRelationshipWithDefaults() *BusinessBusinessOwnerRelationship {
	this := BusinessBusinessOwnerRelationship{}
	return &this
}

// GetAdditionalData returns the AdditionalData field value
func (o *BusinessBusinessOwnerRelationship) GetAdditionalData() AdditionalOwnerData {
	if o == nil {
		var ret AdditionalOwnerData
		return ret
	}

	return o.AdditionalData
}

// GetAdditionalDataOk returns a tuple with the AdditionalData field value
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetAdditionalDataOk() (*AdditionalOwnerData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdditionalData, true
}

// SetAdditionalData sets field value
func (o *BusinessBusinessOwnerRelationship) SetAdditionalData(v AdditionalOwnerData) {
	o.AdditionalData = v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *BusinessBusinessOwnerRelationship) GetCreationTime() time.Time {
	if o == nil || o.CreationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *BusinessBusinessOwnerRelationship) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *BusinessBusinessOwnerRelationship) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetFromBusinessId returns the FromBusinessId field value
func (o *BusinessBusinessOwnerRelationship) GetFromBusinessId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromBusinessId
}

// GetFromBusinessIdOk returns a tuple with the FromBusinessId field value
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetFromBusinessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromBusinessId, true
}

// SetFromBusinessId sets field value
func (o *BusinessBusinessOwnerRelationship) SetFromBusinessId(v string) {
	o.FromBusinessId = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BusinessBusinessOwnerRelationship) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BusinessBusinessOwnerRelationship) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BusinessBusinessOwnerRelationship) SetId(v string) {
	o.Id = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *BusinessBusinessOwnerRelationship) GetLastUpdatedTime() time.Time {
	if o == nil || o.LastUpdatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastUpdatedTime == nil {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *BusinessBusinessOwnerRelationship) HasLastUpdatedTime() bool {
	if o != nil && o.LastUpdatedTime != nil {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given time.Time and assigns it to the LastUpdatedTime field.
func (o *BusinessBusinessOwnerRelationship) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *BusinessBusinessOwnerRelationship) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BusinessBusinessOwnerRelationship) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *BusinessBusinessOwnerRelationship) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetRelationshipType returns the RelationshipType field value
func (o *BusinessBusinessOwnerRelationship) GetRelationshipType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RelationshipType
}

// GetRelationshipTypeOk returns a tuple with the RelationshipType field value
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetRelationshipTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelationshipType, true
}

// SetRelationshipType sets field value
func (o *BusinessBusinessOwnerRelationship) SetRelationshipType(v string) {
	o.RelationshipType = v
}

// GetToBusinessId returns the ToBusinessId field value
func (o *BusinessBusinessOwnerRelationship) GetToBusinessId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToBusinessId
}

// GetToBusinessIdOk returns a tuple with the ToBusinessId field value
// and a boolean to check if the value has been set.
func (o *BusinessBusinessOwnerRelationship) GetToBusinessIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToBusinessId, true
}

// SetToBusinessId sets field value
func (o *BusinessBusinessOwnerRelationship) SetToBusinessId(v string) {
	o.ToBusinessId = v
}

func (o BusinessBusinessOwnerRelationship) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["additional_data"] = o.AdditionalData
	}
	if o.CreationTime != nil {
		toSerialize["creation_time"] = o.CreationTime
	}
	if true {
		toSerialize["from_business_id"] = o.FromBusinessId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastUpdatedTime != nil {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["relationship_type"] = o.RelationshipType
	}
	if true {
		toSerialize["to_business_id"] = o.ToBusinessId
	}
	return json.Marshal(toSerialize)
}

type NullableBusinessBusinessOwnerRelationship struct {
	value *BusinessBusinessOwnerRelationship
	isSet bool
}

func (v NullableBusinessBusinessOwnerRelationship) Get() *BusinessBusinessOwnerRelationship {
	return v.value
}

func (v *NullableBusinessBusinessOwnerRelationship) Set(val *BusinessBusinessOwnerRelationship) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessBusinessOwnerRelationship) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessBusinessOwnerRelationship) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessBusinessOwnerRelationship(val *BusinessBusinessOwnerRelationship) *NullableBusinessBusinessOwnerRelationship {
	return &NullableBusinessBusinessOwnerRelationship{value: val, isSet: true}
}

func (v NullableBusinessBusinessOwnerRelationship) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessBusinessOwnerRelationship) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


