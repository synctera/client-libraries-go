/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"time"
)

// Business1 struct for Business1
type Business1 struct {
	CreationTime        *time.Time `json:"creation_time,omitempty"`
	Ein                 *string    `json:"ein,omitempty"`
	Email               *string    `json:"email,omitempty"`
	EntityName          *string    `json:"entity_name,omitempty"`
	FormationDate       *string    `json:"formation_date,omitempty"`
	FormationState      *string    `json:"formation_state,omitempty"`
	Id                  *string    `json:"id,omitempty"`
	LastUpdatedTime     *time.Time `json:"last_updated_time,omitempty"`
	PhoneNumber         *string    `json:"phone_number,omitempty"`
	Status              *string    `json:"status,omitempty"`
	Structure           *string    `json:"structure,omitempty"`
	TradeNames          []string   `json:"trade_names,omitempty"`
	VerificationLastRun *time.Time `json:"verification_last_run,omitempty"`
	VerificationStatus  *string    `json:"verification_status,omitempty"`
}

// NewBusiness1 instantiates a new Business1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusiness1() *Business1 {
	this := Business1{}
	return &this
}

// NewBusiness1WithDefaults instantiates a new Business1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusiness1WithDefaults() *Business1 {
	this := Business1{}
	return &this
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *Business1) GetCreationTime() time.Time {
	if o == nil || o.CreationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *Business1) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *Business1) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetEin returns the Ein field value if set, zero value otherwise.
func (o *Business1) GetEin() string {
	if o == nil || o.Ein == nil {
		var ret string
		return ret
	}
	return *o.Ein
}

// GetEinOk returns a tuple with the Ein field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetEinOk() (*string, bool) {
	if o == nil || o.Ein == nil {
		return nil, false
	}
	return o.Ein, true
}

// HasEin returns a boolean if a field has been set.
func (o *Business1) HasEin() bool {
	if o != nil && o.Ein != nil {
		return true
	}

	return false
}

// SetEin gets a reference to the given string and assigns it to the Ein field.
func (o *Business1) SetEin(v string) {
	o.Ein = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Business1) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Business1) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Business1) SetEmail(v string) {
	o.Email = &v
}

// GetEntityName returns the EntityName field value if set, zero value otherwise.
func (o *Business1) GetEntityName() string {
	if o == nil || o.EntityName == nil {
		var ret string
		return ret
	}
	return *o.EntityName
}

// GetEntityNameOk returns a tuple with the EntityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetEntityNameOk() (*string, bool) {
	if o == nil || o.EntityName == nil {
		return nil, false
	}
	return o.EntityName, true
}

// HasEntityName returns a boolean if a field has been set.
func (o *Business1) HasEntityName() bool {
	if o != nil && o.EntityName != nil {
		return true
	}

	return false
}

// SetEntityName gets a reference to the given string and assigns it to the EntityName field.
func (o *Business1) SetEntityName(v string) {
	o.EntityName = &v
}

// GetFormationDate returns the FormationDate field value if set, zero value otherwise.
func (o *Business1) GetFormationDate() string {
	if o == nil || o.FormationDate == nil {
		var ret string
		return ret
	}
	return *o.FormationDate
}

// GetFormationDateOk returns a tuple with the FormationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetFormationDateOk() (*string, bool) {
	if o == nil || o.FormationDate == nil {
		return nil, false
	}
	return o.FormationDate, true
}

// HasFormationDate returns a boolean if a field has been set.
func (o *Business1) HasFormationDate() bool {
	if o != nil && o.FormationDate != nil {
		return true
	}

	return false
}

// SetFormationDate gets a reference to the given string and assigns it to the FormationDate field.
func (o *Business1) SetFormationDate(v string) {
	o.FormationDate = &v
}

// GetFormationState returns the FormationState field value if set, zero value otherwise.
func (o *Business1) GetFormationState() string {
	if o == nil || o.FormationState == nil {
		var ret string
		return ret
	}
	return *o.FormationState
}

// GetFormationStateOk returns a tuple with the FormationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetFormationStateOk() (*string, bool) {
	if o == nil || o.FormationState == nil {
		return nil, false
	}
	return o.FormationState, true
}

// HasFormationState returns a boolean if a field has been set.
func (o *Business1) HasFormationState() bool {
	if o != nil && o.FormationState != nil {
		return true
	}

	return false
}

// SetFormationState gets a reference to the given string and assigns it to the FormationState field.
func (o *Business1) SetFormationState(v string) {
	o.FormationState = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Business1) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Business1) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Business1) SetId(v string) {
	o.Id = &v
}

// GetLastUpdatedTime returns the LastUpdatedTime field value if set, zero value otherwise.
func (o *Business1) GetLastUpdatedTime() time.Time {
	if o == nil || o.LastUpdatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdatedTime
}

// GetLastUpdatedTimeOk returns a tuple with the LastUpdatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetLastUpdatedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastUpdatedTime == nil {
		return nil, false
	}
	return o.LastUpdatedTime, true
}

// HasLastUpdatedTime returns a boolean if a field has been set.
func (o *Business1) HasLastUpdatedTime() bool {
	if o != nil && o.LastUpdatedTime != nil {
		return true
	}

	return false
}

// SetLastUpdatedTime gets a reference to the given time.Time and assigns it to the LastUpdatedTime field.
func (o *Business1) SetLastUpdatedTime(v time.Time) {
	o.LastUpdatedTime = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Business1) GetPhoneNumber() string {
	if o == nil || o.PhoneNumber == nil {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetPhoneNumberOk() (*string, bool) {
	if o == nil || o.PhoneNumber == nil {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Business1) HasPhoneNumber() bool {
	if o != nil && o.PhoneNumber != nil {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *Business1) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Business1) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Business1) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *Business1) SetStatus(v string) {
	o.Status = &v
}

// GetStructure returns the Structure field value if set, zero value otherwise.
func (o *Business1) GetStructure() string {
	if o == nil || o.Structure == nil {
		var ret string
		return ret
	}
	return *o.Structure
}

// GetStructureOk returns a tuple with the Structure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetStructureOk() (*string, bool) {
	if o == nil || o.Structure == nil {
		return nil, false
	}
	return o.Structure, true
}

// HasStructure returns a boolean if a field has been set.
func (o *Business1) HasStructure() bool {
	if o != nil && o.Structure != nil {
		return true
	}

	return false
}

// SetStructure gets a reference to the given string and assigns it to the Structure field.
func (o *Business1) SetStructure(v string) {
	o.Structure = &v
}

// GetTradeNames returns the TradeNames field value if set, zero value otherwise.
func (o *Business1) GetTradeNames() []string {
	if o == nil || o.TradeNames == nil {
		var ret []string
		return ret
	}
	return o.TradeNames
}

// GetTradeNamesOk returns a tuple with the TradeNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetTradeNamesOk() ([]string, bool) {
	if o == nil || o.TradeNames == nil {
		return nil, false
	}
	return o.TradeNames, true
}

// HasTradeNames returns a boolean if a field has been set.
func (o *Business1) HasTradeNames() bool {
	if o != nil && o.TradeNames != nil {
		return true
	}

	return false
}

// SetTradeNames gets a reference to the given []string and assigns it to the TradeNames field.
func (o *Business1) SetTradeNames(v []string) {
	o.TradeNames = v
}

// GetVerificationLastRun returns the VerificationLastRun field value if set, zero value otherwise.
func (o *Business1) GetVerificationLastRun() time.Time {
	if o == nil || o.VerificationLastRun == nil {
		var ret time.Time
		return ret
	}
	return *o.VerificationLastRun
}

// GetVerificationLastRunOk returns a tuple with the VerificationLastRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetVerificationLastRunOk() (*time.Time, bool) {
	if o == nil || o.VerificationLastRun == nil {
		return nil, false
	}
	return o.VerificationLastRun, true
}

// HasVerificationLastRun returns a boolean if a field has been set.
func (o *Business1) HasVerificationLastRun() bool {
	if o != nil && o.VerificationLastRun != nil {
		return true
	}

	return false
}

// SetVerificationLastRun gets a reference to the given time.Time and assigns it to the VerificationLastRun field.
func (o *Business1) SetVerificationLastRun(v time.Time) {
	o.VerificationLastRun = &v
}

// GetVerificationStatus returns the VerificationStatus field value if set, zero value otherwise.
func (o *Business1) GetVerificationStatus() string {
	if o == nil || o.VerificationStatus == nil {
		var ret string
		return ret
	}
	return *o.VerificationStatus
}

// GetVerificationStatusOk returns a tuple with the VerificationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Business1) GetVerificationStatusOk() (*string, bool) {
	if o == nil || o.VerificationStatus == nil {
		return nil, false
	}
	return o.VerificationStatus, true
}

// HasVerificationStatus returns a boolean if a field has been set.
func (o *Business1) HasVerificationStatus() bool {
	if o != nil && o.VerificationStatus != nil {
		return true
	}

	return false
}

// SetVerificationStatus gets a reference to the given string and assigns it to the VerificationStatus field.
func (o *Business1) SetVerificationStatus(v string) {
	o.VerificationStatus = &v
}

func (o Business1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreationTime != nil {
		toSerialize["creation_time"] = o.CreationTime
	}
	if o.Ein != nil {
		toSerialize["ein"] = o.Ein
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.EntityName != nil {
		toSerialize["entity_name"] = o.EntityName
	}
	if o.FormationDate != nil {
		toSerialize["formation_date"] = o.FormationDate
	}
	if o.FormationState != nil {
		toSerialize["formation_state"] = o.FormationState
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastUpdatedTime != nil {
		toSerialize["last_updated_time"] = o.LastUpdatedTime
	}
	if o.PhoneNumber != nil {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Structure != nil {
		toSerialize["structure"] = o.Structure
	}
	if o.TradeNames != nil {
		toSerialize["trade_names"] = o.TradeNames
	}
	if o.VerificationLastRun != nil {
		toSerialize["verification_last_run"] = o.VerificationLastRun
	}
	if o.VerificationStatus != nil {
		toSerialize["verification_status"] = o.VerificationStatus
	}
	return json.Marshal(toSerialize)
}

type NullableBusiness1 struct {
	value *Business1
	isSet bool
}

func (v NullableBusiness1) Get() *Business1 {
	return v.value
}

func (v *NullableBusiness1) Set(val *Business1) {
	v.value = val
	v.isSet = true
}

func (v NullableBusiness1) IsSet() bool {
	return v.isSet
}

func (v *NullableBusiness1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusiness1(val *Business1) *NullableBusiness1 {
	return &NullableBusiness1{value: val, isSet: true}
}

func (v NullableBusiness1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusiness1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
