/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.19.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"time"
)

// ExternalCardResponse struct for ExternalCardResponse
type ExternalCardResponse struct {
	CreatedTime *time.Time `json:"created_time,omitempty"`
	// ISO 4217  Alpha-3 currency code
	Currency string `json:"currency"`
	// The unique identifier of a customer
	CustomerId string `json:"customer_id"`
	ExpirationMonth string `json:"expiration_month"`
	ExpirationYear string `json:"expiration_year"`
	// External card ID
	Id string `json:"id"`
	// The last 4 digits of the card PAN
	LastFour string `json:"last_four"`
	LastModifiedTime *time.Time `json:"last_modified_time,omitempty"`
	// The external card holder name
	Name string `json:"name"`
	Verifications *ExternalCardVerifications `json:"verifications,omitempty"`
}

// NewExternalCardResponse instantiates a new ExternalCardResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalCardResponse(currency string, customerId string, expirationMonth string, expirationYear string, id string, lastFour string, name string) *ExternalCardResponse {
	this := ExternalCardResponse{}
	this.Currency = currency
	this.CustomerId = customerId
	this.ExpirationMonth = expirationMonth
	this.ExpirationYear = expirationYear
	this.Id = id
	this.LastFour = lastFour
	this.Name = name
	return &this
}

// NewExternalCardResponseWithDefaults instantiates a new ExternalCardResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalCardResponseWithDefaults() *ExternalCardResponse {
	this := ExternalCardResponse{}
	return &this
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *ExternalCardResponse) GetCreatedTime() time.Time {
	if o == nil || o.CreatedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || o.CreatedTime == nil {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *ExternalCardResponse) HasCreatedTime() bool {
	if o != nil && o.CreatedTime != nil {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *ExternalCardResponse) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetCurrency returns the Currency field value
func (o *ExternalCardResponse) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ExternalCardResponse) SetCurrency(v string) {
	o.Currency = v
}

// GetCustomerId returns the CustomerId field value
func (o *ExternalCardResponse) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *ExternalCardResponse) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetExpirationMonth returns the ExpirationMonth field value
func (o *ExternalCardResponse) GetExpirationMonth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpirationMonth
}

// GetExpirationMonthOk returns a tuple with the ExpirationMonth field value
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetExpirationMonthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationMonth, true
}

// SetExpirationMonth sets field value
func (o *ExternalCardResponse) SetExpirationMonth(v string) {
	o.ExpirationMonth = v
}

// GetExpirationYear returns the ExpirationYear field value
func (o *ExternalCardResponse) GetExpirationYear() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpirationYear
}

// GetExpirationYearOk returns a tuple with the ExpirationYear field value
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetExpirationYearOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationYear, true
}

// SetExpirationYear sets field value
func (o *ExternalCardResponse) SetExpirationYear(v string) {
	o.ExpirationYear = v
}

// GetId returns the Id field value
func (o *ExternalCardResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalCardResponse) SetId(v string) {
	o.Id = v
}

// GetLastFour returns the LastFour field value
func (o *ExternalCardResponse) GetLastFour() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastFour
}

// GetLastFourOk returns a tuple with the LastFour field value
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetLastFourOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastFour, true
}

// SetLastFour sets field value
func (o *ExternalCardResponse) SetLastFour(v string) {
	o.LastFour = v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *ExternalCardResponse) GetLastModifiedTime() time.Time {
	if o == nil || o.LastModifiedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedTime == nil {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *ExternalCardResponse) HasLastModifiedTime() bool {
	if o != nil && o.LastModifiedTime != nil {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *ExternalCardResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

// GetName returns the Name field value
func (o *ExternalCardResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalCardResponse) SetName(v string) {
	o.Name = v
}

// GetVerifications returns the Verifications field value if set, zero value otherwise.
func (o *ExternalCardResponse) GetVerifications() ExternalCardVerifications {
	if o == nil || o.Verifications == nil {
		var ret ExternalCardVerifications
		return ret
	}
	return *o.Verifications
}

// GetVerificationsOk returns a tuple with the Verifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalCardResponse) GetVerificationsOk() (*ExternalCardVerifications, bool) {
	if o == nil || o.Verifications == nil {
		return nil, false
	}
	return o.Verifications, true
}

// HasVerifications returns a boolean if a field has been set.
func (o *ExternalCardResponse) HasVerifications() bool {
	if o != nil && o.Verifications != nil {
		return true
	}

	return false
}

// SetVerifications gets a reference to the given ExternalCardVerifications and assigns it to the Verifications field.
func (o *ExternalCardResponse) SetVerifications(v ExternalCardVerifications) {
	o.Verifications = &v
}

func (o ExternalCardResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedTime != nil {
		toSerialize["created_time"] = o.CreatedTime
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["customer_id"] = o.CustomerId
	}
	if true {
		toSerialize["expiration_month"] = o.ExpirationMonth
	}
	if true {
		toSerialize["expiration_year"] = o.ExpirationYear
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["last_four"] = o.LastFour
	}
	if o.LastModifiedTime != nil {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Verifications != nil {
		toSerialize["verifications"] = o.Verifications
	}
	return json.Marshal(toSerialize)
}

type NullableExternalCardResponse struct {
	value *ExternalCardResponse
	isSet bool
}

func (v NullableExternalCardResponse) Get() *ExternalCardResponse {
	return v.value
}

func (v *NullableExternalCardResponse) Set(val *ExternalCardResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalCardResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalCardResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalCardResponse(val *ExternalCardResponse) *NullableExternalCardResponse {
	return &NullableExternalCardResponse{value: val, isSet: true}
}

func (v NullableExternalCardResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalCardResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


