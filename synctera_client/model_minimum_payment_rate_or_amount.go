/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.19.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// MinimumPaymentRateOrAmount struct for MinimumPaymentRateOrAmount
type MinimumPaymentRateOrAmount struct {
	// The maximum amount to charge as a minimum payment, in cents. For example, to set the maximum to $30, set this value to 3000. 
	MinAmount int64 `json:"min_amount"`
	// The percentage of the balance to use, in basis points. For example, to set 12.5% of the balance, set this value to 1250. 
	Rate int32 `json:"rate"`
	Type MinimumPaymentType `json:"type"`
}

// NewMinimumPaymentRateOrAmount instantiates a new MinimumPaymentRateOrAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimumPaymentRateOrAmount(minAmount int64, rate int32, type_ MinimumPaymentType) *MinimumPaymentRateOrAmount {
	this := MinimumPaymentRateOrAmount{}
	this.MinAmount = minAmount
	this.Rate = rate
	this.Type = type_
	return &this
}

// NewMinimumPaymentRateOrAmountWithDefaults instantiates a new MinimumPaymentRateOrAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimumPaymentRateOrAmountWithDefaults() *MinimumPaymentRateOrAmount {
	this := MinimumPaymentRateOrAmount{}
	return &this
}

// GetMinAmount returns the MinAmount field value
func (o *MinimumPaymentRateOrAmount) GetMinAmount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MinAmount
}

// GetMinAmountOk returns a tuple with the MinAmount field value
// and a boolean to check if the value has been set.
func (o *MinimumPaymentRateOrAmount) GetMinAmountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinAmount, true
}

// SetMinAmount sets field value
func (o *MinimumPaymentRateOrAmount) SetMinAmount(v int64) {
	o.MinAmount = v
}

// GetRate returns the Rate field value
func (o *MinimumPaymentRateOrAmount) GetRate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *MinimumPaymentRateOrAmount) GetRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *MinimumPaymentRateOrAmount) SetRate(v int32) {
	o.Rate = v
}

// GetType returns the Type field value
func (o *MinimumPaymentRateOrAmount) GetType() MinimumPaymentType {
	if o == nil {
		var ret MinimumPaymentType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MinimumPaymentRateOrAmount) GetTypeOk() (*MinimumPaymentType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MinimumPaymentRateOrAmount) SetType(v MinimumPaymentType) {
	o.Type = v
}

func (o MinimumPaymentRateOrAmount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["min_amount"] = o.MinAmount
	}
	if true {
		toSerialize["rate"] = o.Rate
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableMinimumPaymentRateOrAmount struct {
	value *MinimumPaymentRateOrAmount
	isSet bool
}

func (v NullableMinimumPaymentRateOrAmount) Get() *MinimumPaymentRateOrAmount {
	return v.value
}

func (v *NullableMinimumPaymentRateOrAmount) Set(val *MinimumPaymentRateOrAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimumPaymentRateOrAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimumPaymentRateOrAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimumPaymentRateOrAmount(val *MinimumPaymentRateOrAmount) *NullableMinimumPaymentRateOrAmount {
	return &NullableMinimumPaymentRateOrAmount{value: val, isSet: true}
}

func (v NullableMinimumPaymentRateOrAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimumPaymentRateOrAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


