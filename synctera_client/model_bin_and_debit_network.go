/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// BinAndDebitNetwork struct for BinAndDebitNetwork
type BinAndDebitNetwork struct {
	// The ID of the bank network
	BankNetworkId string       `json:"bank_network_id"`
	Bin           Bin          `json:"bin"`
	DebitNetwork  DebitNetwork `json:"debit_network"`
}

// NewBinAndDebitNetwork instantiates a new BinAndDebitNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBinAndDebitNetwork(bankNetworkId string, bin Bin, debitNetwork DebitNetwork) *BinAndDebitNetwork {
	this := BinAndDebitNetwork{}
	this.BankNetworkId = bankNetworkId
	this.Bin = bin
	this.DebitNetwork = debitNetwork
	return &this
}

// NewBinAndDebitNetworkWithDefaults instantiates a new BinAndDebitNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBinAndDebitNetworkWithDefaults() *BinAndDebitNetwork {
	this := BinAndDebitNetwork{}
	return &this
}

// GetBankNetworkId returns the BankNetworkId field value
func (o *BinAndDebitNetwork) GetBankNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BankNetworkId
}

// GetBankNetworkIdOk returns a tuple with the BankNetworkId field value
// and a boolean to check if the value has been set.
func (o *BinAndDebitNetwork) GetBankNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankNetworkId, true
}

// SetBankNetworkId sets field value
func (o *BinAndDebitNetwork) SetBankNetworkId(v string) {
	o.BankNetworkId = v
}

// GetBin returns the Bin field value
func (o *BinAndDebitNetwork) GetBin() Bin {
	if o == nil {
		var ret Bin
		return ret
	}

	return o.Bin
}

// GetBinOk returns a tuple with the Bin field value
// and a boolean to check if the value has been set.
func (o *BinAndDebitNetwork) GetBinOk() (*Bin, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bin, true
}

// SetBin sets field value
func (o *BinAndDebitNetwork) SetBin(v Bin) {
	o.Bin = v
}

// GetDebitNetwork returns the DebitNetwork field value
func (o *BinAndDebitNetwork) GetDebitNetwork() DebitNetwork {
	if o == nil {
		var ret DebitNetwork
		return ret
	}

	return o.DebitNetwork
}

// GetDebitNetworkOk returns a tuple with the DebitNetwork field value
// and a boolean to check if the value has been set.
func (o *BinAndDebitNetwork) GetDebitNetworkOk() (*DebitNetwork, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebitNetwork, true
}

// SetDebitNetwork sets field value
func (o *BinAndDebitNetwork) SetDebitNetwork(v DebitNetwork) {
	o.DebitNetwork = v
}

func (o BinAndDebitNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bank_network_id"] = o.BankNetworkId
	}
	if true {
		toSerialize["bin"] = o.Bin
	}
	if true {
		toSerialize["debit_network"] = o.DebitNetwork
	}
	return json.Marshal(toSerialize)
}

type NullableBinAndDebitNetwork struct {
	value *BinAndDebitNetwork
	isSet bool
}

func (v NullableBinAndDebitNetwork) Get() *BinAndDebitNetwork {
	return v.value
}

func (v *NullableBinAndDebitNetwork) Set(val *BinAndDebitNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableBinAndDebitNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableBinAndDebitNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBinAndDebitNetwork(val *BinAndDebitNetwork) *NullableBinAndDebitNetwork {
	return &NullableBinAndDebitNetwork{value: val, isSet: true}
}

func (v NullableBinAndDebitNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBinAndDebitNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
