/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.19.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// PaymentErrorDetails Payment error details. It will be included only when status is ERROR
type PaymentErrorDetails struct {
	Code *string `json:"code,omitempty"`
	Details *string `json:"details,omitempty"`
}

// NewPaymentErrorDetails instantiates a new PaymentErrorDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentErrorDetails() *PaymentErrorDetails {
	this := PaymentErrorDetails{}
	return &this
}

// NewPaymentErrorDetailsWithDefaults instantiates a new PaymentErrorDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentErrorDetailsWithDefaults() *PaymentErrorDetails {
	this := PaymentErrorDetails{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *PaymentErrorDetails) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentErrorDetails) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *PaymentErrorDetails) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *PaymentErrorDetails) SetCode(v string) {
	o.Code = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *PaymentErrorDetails) GetDetails() string {
	if o == nil || o.Details == nil {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentErrorDetails) GetDetailsOk() (*string, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *PaymentErrorDetails) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *PaymentErrorDetails) SetDetails(v string) {
	o.Details = &v
}

func (o PaymentErrorDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentErrorDetails struct {
	value *PaymentErrorDetails
	isSet bool
}

func (v NullablePaymentErrorDetails) Get() *PaymentErrorDetails {
	return v.value
}

func (v *NullablePaymentErrorDetails) Set(val *PaymentErrorDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentErrorDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentErrorDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentErrorDetails(val *PaymentErrorDetails) *NullablePaymentErrorDetails {
	return &NullablePaymentErrorDetails{value: val, isSet: true}
}

func (v NullablePaymentErrorDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentErrorDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


