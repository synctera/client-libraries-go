/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.20.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
	"time"
)

// WatchlistAlert struct for WatchlistAlert
type WatchlistAlert struct {
	// When this alert was created
	Created *time.Time `json:"created,omitempty"`
	// Unique identifier for this alert
	Id *string `json:"id,omitempty"`
	// The information provided to Synctera that triggered this alert, as an arbitrary JSON object. Interpretation of this object is up to the client.
	ProviderInfo map[string]interface{} `json:"provider_info,omitempty"`
	// The id of the provider subject for this alert
	ProviderSubjectId *string `json:"provider_subject_id,omitempty"`
	// The id of the provider subscription for this alert
	ProviderSubscriptionId *string `json:"provider_subscription_id,omitempty"`
	// The name of the provider for this alert
	ProviderWatchlistName *string `json:"provider_watchlist_name,omitempty"`
	// The status of this alert
	Status string `json:"status"`
	// Where to get more information about this alert (according to our third-party data provider).
	Urls       []string    `json:"urls,omitempty"`
	VendorInfo *VendorInfo `json:"vendor_info,omitempty"`
}

// NewWatchlistAlert instantiates a new WatchlistAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWatchlistAlert(status string) *WatchlistAlert {
	this := WatchlistAlert{}
	this.Status = status
	return &this
}

// NewWatchlistAlertWithDefaults instantiates a new WatchlistAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWatchlistAlertWithDefaults() *WatchlistAlert {
	this := WatchlistAlert{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WatchlistAlert) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WatchlistAlert) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *WatchlistAlert) SetCreated(v time.Time) {
	o.Created = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WatchlistAlert) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WatchlistAlert) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WatchlistAlert) SetId(v string) {
	o.Id = &v
}

// GetProviderInfo returns the ProviderInfo field value if set, zero value otherwise.
func (o *WatchlistAlert) GetProviderInfo() map[string]interface{} {
	if o == nil || o.ProviderInfo == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ProviderInfo
}

// GetProviderInfoOk returns a tuple with the ProviderInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetProviderInfoOk() (map[string]interface{}, bool) {
	if o == nil || o.ProviderInfo == nil {
		return nil, false
	}
	return o.ProviderInfo, true
}

// HasProviderInfo returns a boolean if a field has been set.
func (o *WatchlistAlert) HasProviderInfo() bool {
	if o != nil && o.ProviderInfo != nil {
		return true
	}

	return false
}

// SetProviderInfo gets a reference to the given map[string]interface{} and assigns it to the ProviderInfo field.
func (o *WatchlistAlert) SetProviderInfo(v map[string]interface{}) {
	o.ProviderInfo = v
}

// GetProviderSubjectId returns the ProviderSubjectId field value if set, zero value otherwise.
func (o *WatchlistAlert) GetProviderSubjectId() string {
	if o == nil || o.ProviderSubjectId == nil {
		var ret string
		return ret
	}
	return *o.ProviderSubjectId
}

// GetProviderSubjectIdOk returns a tuple with the ProviderSubjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetProviderSubjectIdOk() (*string, bool) {
	if o == nil || o.ProviderSubjectId == nil {
		return nil, false
	}
	return o.ProviderSubjectId, true
}

// HasProviderSubjectId returns a boolean if a field has been set.
func (o *WatchlistAlert) HasProviderSubjectId() bool {
	if o != nil && o.ProviderSubjectId != nil {
		return true
	}

	return false
}

// SetProviderSubjectId gets a reference to the given string and assigns it to the ProviderSubjectId field.
func (o *WatchlistAlert) SetProviderSubjectId(v string) {
	o.ProviderSubjectId = &v
}

// GetProviderSubscriptionId returns the ProviderSubscriptionId field value if set, zero value otherwise.
func (o *WatchlistAlert) GetProviderSubscriptionId() string {
	if o == nil || o.ProviderSubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.ProviderSubscriptionId
}

// GetProviderSubscriptionIdOk returns a tuple with the ProviderSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetProviderSubscriptionIdOk() (*string, bool) {
	if o == nil || o.ProviderSubscriptionId == nil {
		return nil, false
	}
	return o.ProviderSubscriptionId, true
}

// HasProviderSubscriptionId returns a boolean if a field has been set.
func (o *WatchlistAlert) HasProviderSubscriptionId() bool {
	if o != nil && o.ProviderSubscriptionId != nil {
		return true
	}

	return false
}

// SetProviderSubscriptionId gets a reference to the given string and assigns it to the ProviderSubscriptionId field.
func (o *WatchlistAlert) SetProviderSubscriptionId(v string) {
	o.ProviderSubscriptionId = &v
}

// GetProviderWatchlistName returns the ProviderWatchlistName field value if set, zero value otherwise.
func (o *WatchlistAlert) GetProviderWatchlistName() string {
	if o == nil || o.ProviderWatchlistName == nil {
		var ret string
		return ret
	}
	return *o.ProviderWatchlistName
}

// GetProviderWatchlistNameOk returns a tuple with the ProviderWatchlistName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetProviderWatchlistNameOk() (*string, bool) {
	if o == nil || o.ProviderWatchlistName == nil {
		return nil, false
	}
	return o.ProviderWatchlistName, true
}

// HasProviderWatchlistName returns a boolean if a field has been set.
func (o *WatchlistAlert) HasProviderWatchlistName() bool {
	if o != nil && o.ProviderWatchlistName != nil {
		return true
	}

	return false
}

// SetProviderWatchlistName gets a reference to the given string and assigns it to the ProviderWatchlistName field.
func (o *WatchlistAlert) SetProviderWatchlistName(v string) {
	o.ProviderWatchlistName = &v
}

// GetStatus returns the Status field value
func (o *WatchlistAlert) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WatchlistAlert) SetStatus(v string) {
	o.Status = v
}

// GetUrls returns the Urls field value if set, zero value otherwise.
func (o *WatchlistAlert) GetUrls() []string {
	if o == nil || o.Urls == nil {
		var ret []string
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetUrlsOk() ([]string, bool) {
	if o == nil || o.Urls == nil {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *WatchlistAlert) HasUrls() bool {
	if o != nil && o.Urls != nil {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []string and assigns it to the Urls field.
func (o *WatchlistAlert) SetUrls(v []string) {
	o.Urls = v
}

// GetVendorInfo returns the VendorInfo field value if set, zero value otherwise.
func (o *WatchlistAlert) GetVendorInfo() VendorInfo {
	if o == nil || o.VendorInfo == nil {
		var ret VendorInfo
		return ret
	}
	return *o.VendorInfo
}

// GetVendorInfoOk returns a tuple with the VendorInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WatchlistAlert) GetVendorInfoOk() (*VendorInfo, bool) {
	if o == nil || o.VendorInfo == nil {
		return nil, false
	}
	return o.VendorInfo, true
}

// HasVendorInfo returns a boolean if a field has been set.
func (o *WatchlistAlert) HasVendorInfo() bool {
	if o != nil && o.VendorInfo != nil {
		return true
	}

	return false
}

// SetVendorInfo gets a reference to the given VendorInfo and assigns it to the VendorInfo field.
func (o *WatchlistAlert) SetVendorInfo(v VendorInfo) {
	o.VendorInfo = &v
}

func (o WatchlistAlert) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ProviderInfo != nil {
		toSerialize["provider_info"] = o.ProviderInfo
	}
	if o.ProviderSubjectId != nil {
		toSerialize["provider_subject_id"] = o.ProviderSubjectId
	}
	if o.ProviderSubscriptionId != nil {
		toSerialize["provider_subscription_id"] = o.ProviderSubscriptionId
	}
	if o.ProviderWatchlistName != nil {
		toSerialize["provider_watchlist_name"] = o.ProviderWatchlistName
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	if o.VendorInfo != nil {
		toSerialize["vendor_info"] = o.VendorInfo
	}
	return json.Marshal(toSerialize)
}

type NullableWatchlistAlert struct {
	value *WatchlistAlert
	isSet bool
}

func (v NullableWatchlistAlert) Get() *WatchlistAlert {
	return v.value
}

func (v *NullableWatchlistAlert) Set(val *WatchlistAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableWatchlistAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableWatchlistAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWatchlistAlert(val *WatchlistAlert) *NullableWatchlistAlert {
	return &NullableWatchlistAlert{value: val, isSet: true}
}

func (v NullableWatchlistAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWatchlistAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
