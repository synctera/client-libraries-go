/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p> 

API version: 0.19.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera_client

import (
	"encoding/json"
)

// CardImageDetailsListAllOf struct for CardImageDetailsListAllOf
type CardImageDetailsListAllOf struct {
	// Array of image details
	Images []CardImageDetails `json:"images"`
}

// NewCardImageDetailsListAllOf instantiates a new CardImageDetailsListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardImageDetailsListAllOf(images []CardImageDetails) *CardImageDetailsListAllOf {
	this := CardImageDetailsListAllOf{}
	this.Images = images
	return &this
}

// NewCardImageDetailsListAllOfWithDefaults instantiates a new CardImageDetailsListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardImageDetailsListAllOfWithDefaults() *CardImageDetailsListAllOf {
	this := CardImageDetailsListAllOf{}
	return &this
}

// GetImages returns the Images field value
func (o *CardImageDetailsListAllOf) GetImages() []CardImageDetails {
	if o == nil {
		var ret []CardImageDetails
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *CardImageDetailsListAllOf) GetImagesOk() ([]CardImageDetails, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *CardImageDetailsListAllOf) SetImages(v []CardImageDetails) {
	o.Images = v
}

func (o CardImageDetailsListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableCardImageDetailsListAllOf struct {
	value *CardImageDetailsListAllOf
	isSet bool
}

func (v NullableCardImageDetailsListAllOf) Get() *CardImageDetailsListAllOf {
	return v.value
}

func (v *NullableCardImageDetailsListAllOf) Set(val *CardImageDetailsListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCardImageDetailsListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCardImageDetailsListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardImageDetailsListAllOf(val *CardImageDetailsListAllOf) *NullableCardImageDetailsListAllOf {
	return &NullableCardImageDetailsListAllOf{value: val, isSet: true}
}

func (v NullableCardImageDetailsListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardImageDetailsListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


