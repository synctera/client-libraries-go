/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// CreateCardImageRequest struct for CreateCardImageRequest
type CreateCardImageRequest struct {
	// The unique identifier of a customer
	CustomerId string  `json:"customer_id"`
	ImageData  *string `json:"image_data,omitempty"`
}

// NewCreateCardImageRequest instantiates a new CreateCardImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCardImageRequest(customerId string) *CreateCardImageRequest {
	this := CreateCardImageRequest{}
	this.CustomerId = customerId
	return &this
}

// NewCreateCardImageRequestWithDefaults instantiates a new CreateCardImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCardImageRequestWithDefaults() *CreateCardImageRequest {
	this := CreateCardImageRequest{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *CreateCardImageRequest) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *CreateCardImageRequest) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *CreateCardImageRequest) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetImageData returns the ImageData field value if set, zero value otherwise.
func (o *CreateCardImageRequest) GetImageData() string {
	if o == nil || o.ImageData == nil {
		var ret string
		return ret
	}
	return *o.ImageData
}

// GetImageDataOk returns a tuple with the ImageData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCardImageRequest) GetImageDataOk() (*string, bool) {
	if o == nil || o.ImageData == nil {
		return nil, false
	}
	return o.ImageData, true
}

// HasImageData returns a boolean if a field has been set.
func (o *CreateCardImageRequest) HasImageData() bool {
	if o != nil && o.ImageData != nil {
		return true
	}

	return false
}

// SetImageData gets a reference to the given string and assigns it to the ImageData field.
func (o *CreateCardImageRequest) SetImageData(v string) {
	o.ImageData = &v
}

func (o CreateCardImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["customer_id"] = o.CustomerId
	}
	if o.ImageData != nil {
		toSerialize["image_data"] = o.ImageData
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCardImageRequest struct {
	value *CreateCardImageRequest
	isSet bool
}

func (v NullableCreateCardImageRequest) Get() *CreateCardImageRequest {
	return v.value
}

func (v *NullableCreateCardImageRequest) Set(val *CreateCardImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCardImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCardImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCardImageRequest(val *CreateCardImageRequest) *NullableCreateCardImageRequest {
	return &NullableCreateCardImageRequest{value: val, isSet: true}
}

func (v NullableCreateCardImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCardImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
