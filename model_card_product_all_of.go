/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
	"time"
)

// CardProductAllOf struct for CardProductAllOf
type CardProductAllOf struct {
	// Card Product ID
	Id *string `json:"id,omitempty"`
	// The name of the card product
	Name string `json:"name"`
	// The ID of the bank partner works with within this product
	BankId int32 `json:"bank_id"`
	// The ID of the partner card product belongs to
	PartnerId int32 `json:"partner_id"`
	// Program ID
	CardProgramId string `json:"card_program_id"`
	// Funding source ID
	FundingSourceId string `json:"funding_source_id"`
	// Bin ID
	BinId string `json:"bin_id"`
	// ID of the Account Range for which card product was created
	AccountRangeId string `json:"account_range_id"`
	// indicates whether program is active
	Active bool `json:"active"`
	// Identifies whether a new account range will be automatically allocated
	AutoAllocateRange  bool                `json:"auto_allocate_range"`
	PhysicalCardFormat *PhysicalCardFormat `json:"physical_card_format,omitempty"`
	// The time when bin goes live
	StartDate time.Time `json:"start_date"`
	// The time when bin is decommissioned
	EndDate *time.Time `json:"end_date,omitempty"`
	// The timestamp representing when the card product was created
	CreationTime *time.Time `json:"creation_time,omitempty"`
	// The timestamp representing when the card product was last modified
	LastModifiedTime *time.Time `json:"last_modified_time,omitempty"`
}

// NewCardProductAllOf instantiates a new CardProductAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardProductAllOf(name string, bankId int32, partnerId int32, cardProgramId string, fundingSourceId string, binId string, accountRangeId string, active bool, autoAllocateRange bool, startDate time.Time) *CardProductAllOf {
	this := CardProductAllOf{}
	this.Name = name
	this.BankId = bankId
	this.PartnerId = partnerId
	this.CardProgramId = cardProgramId
	this.FundingSourceId = fundingSourceId
	this.BinId = binId
	this.AccountRangeId = accountRangeId
	this.Active = active
	this.AutoAllocateRange = autoAllocateRange
	this.StartDate = startDate
	return &this
}

// NewCardProductAllOfWithDefaults instantiates a new CardProductAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardProductAllOfWithDefaults() *CardProductAllOf {
	this := CardProductAllOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CardProductAllOf) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CardProductAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CardProductAllOf) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *CardProductAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CardProductAllOf) SetName(v string) {
	o.Name = v
}

// GetBankId returns the BankId field value
func (o *CardProductAllOf) GetBankId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetBankIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankId, true
}

// SetBankId sets field value
func (o *CardProductAllOf) SetBankId(v int32) {
	o.BankId = v
}

// GetPartnerId returns the PartnerId field value
func (o *CardProductAllOf) GetPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerId, true
}

// SetPartnerId sets field value
func (o *CardProductAllOf) SetPartnerId(v int32) {
	o.PartnerId = v
}

// GetCardProgramId returns the CardProgramId field value
func (o *CardProductAllOf) GetCardProgramId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardProgramId
}

// GetCardProgramIdOk returns a tuple with the CardProgramId field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetCardProgramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardProgramId, true
}

// SetCardProgramId sets field value
func (o *CardProductAllOf) SetCardProgramId(v string) {
	o.CardProgramId = v
}

// GetFundingSourceId returns the FundingSourceId field value
func (o *CardProductAllOf) GetFundingSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FundingSourceId
}

// GetFundingSourceIdOk returns a tuple with the FundingSourceId field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetFundingSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FundingSourceId, true
}

// SetFundingSourceId sets field value
func (o *CardProductAllOf) SetFundingSourceId(v string) {
	o.FundingSourceId = v
}

// GetBinId returns the BinId field value
func (o *CardProductAllOf) GetBinId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BinId
}

// GetBinIdOk returns a tuple with the BinId field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetBinIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BinId, true
}

// SetBinId sets field value
func (o *CardProductAllOf) SetBinId(v string) {
	o.BinId = v
}

// GetAccountRangeId returns the AccountRangeId field value
func (o *CardProductAllOf) GetAccountRangeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountRangeId
}

// GetAccountRangeIdOk returns a tuple with the AccountRangeId field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetAccountRangeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountRangeId, true
}

// SetAccountRangeId sets field value
func (o *CardProductAllOf) SetAccountRangeId(v string) {
	o.AccountRangeId = v
}

// GetActive returns the Active field value
func (o *CardProductAllOf) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *CardProductAllOf) SetActive(v bool) {
	o.Active = v
}

// GetAutoAllocateRange returns the AutoAllocateRange field value
func (o *CardProductAllOf) GetAutoAllocateRange() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoAllocateRange
}

// GetAutoAllocateRangeOk returns a tuple with the AutoAllocateRange field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetAutoAllocateRangeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoAllocateRange, true
}

// SetAutoAllocateRange sets field value
func (o *CardProductAllOf) SetAutoAllocateRange(v bool) {
	o.AutoAllocateRange = v
}

// GetPhysicalCardFormat returns the PhysicalCardFormat field value if set, zero value otherwise.
func (o *CardProductAllOf) GetPhysicalCardFormat() PhysicalCardFormat {
	if o == nil || o.PhysicalCardFormat == nil {
		var ret PhysicalCardFormat
		return ret
	}
	return *o.PhysicalCardFormat
}

// GetPhysicalCardFormatOk returns a tuple with the PhysicalCardFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetPhysicalCardFormatOk() (*PhysicalCardFormat, bool) {
	if o == nil || o.PhysicalCardFormat == nil {
		return nil, false
	}
	return o.PhysicalCardFormat, true
}

// HasPhysicalCardFormat returns a boolean if a field has been set.
func (o *CardProductAllOf) HasPhysicalCardFormat() bool {
	if o != nil && o.PhysicalCardFormat != nil {
		return true
	}

	return false
}

// SetPhysicalCardFormat gets a reference to the given PhysicalCardFormat and assigns it to the PhysicalCardFormat field.
func (o *CardProductAllOf) SetPhysicalCardFormat(v PhysicalCardFormat) {
	o.PhysicalCardFormat = &v
}

// GetStartDate returns the StartDate field value
func (o *CardProductAllOf) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *CardProductAllOf) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *CardProductAllOf) GetEndDate() time.Time {
	if o == nil || o.EndDate == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetEndDateOk() (*time.Time, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *CardProductAllOf) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *CardProductAllOf) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetCreationTime returns the CreationTime field value if set, zero value otherwise.
func (o *CardProductAllOf) GetCreationTime() time.Time {
	if o == nil || o.CreationTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil || o.CreationTime == nil {
		return nil, false
	}
	return o.CreationTime, true
}

// HasCreationTime returns a boolean if a field has been set.
func (o *CardProductAllOf) HasCreationTime() bool {
	if o != nil && o.CreationTime != nil {
		return true
	}

	return false
}

// SetCreationTime gets a reference to the given time.Time and assigns it to the CreationTime field.
func (o *CardProductAllOf) SetCreationTime(v time.Time) {
	o.CreationTime = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value if set, zero value otherwise.
func (o *CardProductAllOf) GetLastModifiedTime() time.Time {
	if o == nil || o.LastModifiedTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductAllOf) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil || o.LastModifiedTime == nil {
		return nil, false
	}
	return o.LastModifiedTime, true
}

// HasLastModifiedTime returns a boolean if a field has been set.
func (o *CardProductAllOf) HasLastModifiedTime() bool {
	if o != nil && o.LastModifiedTime != nil {
		return true
	}

	return false
}

// SetLastModifiedTime gets a reference to the given time.Time and assigns it to the LastModifiedTime field.
func (o *CardProductAllOf) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = &v
}

func (o CardProductAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["bank_id"] = o.BankId
	}
	if true {
		toSerialize["partner_id"] = o.PartnerId
	}
	if true {
		toSerialize["card_program_id"] = o.CardProgramId
	}
	if true {
		toSerialize["funding_source_id"] = o.FundingSourceId
	}
	if true {
		toSerialize["bin_id"] = o.BinId
	}
	if true {
		toSerialize["account_range_id"] = o.AccountRangeId
	}
	if true {
		toSerialize["active"] = o.Active
	}
	if true {
		toSerialize["auto_allocate_range"] = o.AutoAllocateRange
	}
	if o.PhysicalCardFormat != nil {
		toSerialize["physical_card_format"] = o.PhysicalCardFormat
	}
	if true {
		toSerialize["start_date"] = o.StartDate
	}
	if o.EndDate != nil {
		toSerialize["end_date"] = o.EndDate
	}
	if o.CreationTime != nil {
		toSerialize["creation_time"] = o.CreationTime
	}
	if o.LastModifiedTime != nil {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	return json.Marshal(toSerialize)
}

type NullableCardProductAllOf struct {
	value *CardProductAllOf
	isSet bool
}

func (v NullableCardProductAllOf) Get() *CardProductAllOf {
	return v.value
}

func (v *NullableCardProductAllOf) Set(val *CardProductAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCardProductAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCardProductAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardProductAllOf(val *CardProductAllOf) *NullableCardProductAllOf {
	return &NullableCardProductAllOf{value: val, isSet: true}
}

func (v NullableCardProductAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardProductAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
