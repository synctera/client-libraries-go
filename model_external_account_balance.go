/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// ExternalAccountBalance struct for ExternalAccountBalance
type ExternalAccountBalance struct {
	// The available balance of the account
	Available int64 `json:"available"`
	// The current balance of the account
	Current int64 `json:"current"`
	// ISO 4217 alphabetic currency code
	Currency string `json:"currency"`
	// The limit on the balance amount
	Limit int64 `json:"limit"`
}

// NewExternalAccountBalance instantiates a new ExternalAccountBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalAccountBalance(available int64, current int64, currency string, limit int64) *ExternalAccountBalance {
	this := ExternalAccountBalance{}
	this.Available = available
	this.Current = current
	this.Currency = currency
	this.Limit = limit
	return &this
}

// NewExternalAccountBalanceWithDefaults instantiates a new ExternalAccountBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalAccountBalanceWithDefaults() *ExternalAccountBalance {
	this := ExternalAccountBalance{}
	return &this
}

// GetAvailable returns the Available field value
func (o *ExternalAccountBalance) GetAvailable() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Available
}

// GetAvailableOk returns a tuple with the Available field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountBalance) GetAvailableOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Available, true
}

// SetAvailable sets field value
func (o *ExternalAccountBalance) SetAvailable(v int64) {
	o.Available = v
}

// GetCurrent returns the Current field value
func (o *ExternalAccountBalance) GetCurrent() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountBalance) GetCurrentOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Current, true
}

// SetCurrent sets field value
func (o *ExternalAccountBalance) SetCurrent(v int64) {
	o.Current = v
}

// GetCurrency returns the Currency field value
func (o *ExternalAccountBalance) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountBalance) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ExternalAccountBalance) SetCurrency(v string) {
	o.Currency = v
}

// GetLimit returns the Limit field value
func (o *ExternalAccountBalance) GetLimit() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Limit
}

// GetLimitOk returns a tuple with the Limit field value
// and a boolean to check if the value has been set.
func (o *ExternalAccountBalance) GetLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Limit, true
}

// SetLimit sets field value
func (o *ExternalAccountBalance) SetLimit(v int64) {
	o.Limit = v
}

func (o ExternalAccountBalance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["available"] = o.Available
	}
	if true {
		toSerialize["current"] = o.Current
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	if true {
		toSerialize["limit"] = o.Limit
	}
	return json.Marshal(toSerialize)
}

type NullableExternalAccountBalance struct {
	value *ExternalAccountBalance
	isSet bool
}

func (v NullableExternalAccountBalance) Get() *ExternalAccountBalance {
	return v.value
}

func (v *NullableExternalAccountBalance) Set(val *ExternalAccountBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalAccountBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalAccountBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalAccountBalance(val *ExternalAccountBalance) *NullableExternalAccountBalance {
	return &NullableExternalAccountBalance{value: val, isSet: true}
}

func (v NullableExternalAccountBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalAccountBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
