/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// AccountIdentifiers struct for AccountIdentifiers
type AccountIdentifiers struct {
	// The account number. Value may be masked, in which case only the last four digits are returned.
	Number string `json:"number"`
	// The IBAN of the account. Value may be masked, in which case only the last four digits are returned.
	Iban *string `json:"iban,omitempty"`
}

// NewAccountIdentifiers instantiates a new AccountIdentifiers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountIdentifiers(number string) *AccountIdentifiers {
	this := AccountIdentifiers{}
	this.Number = number
	return &this
}

// NewAccountIdentifiersWithDefaults instantiates a new AccountIdentifiers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountIdentifiersWithDefaults() *AccountIdentifiers {
	this := AccountIdentifiers{}
	return &this
}

// GetNumber returns the Number field value
func (o *AccountIdentifiers) GetNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *AccountIdentifiers) GetNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *AccountIdentifiers) SetNumber(v string) {
	o.Number = v
}

// GetIban returns the Iban field value if set, zero value otherwise.
func (o *AccountIdentifiers) GetIban() string {
	if o == nil || o.Iban == nil {
		var ret string
		return ret
	}
	return *o.Iban
}

// GetIbanOk returns a tuple with the Iban field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountIdentifiers) GetIbanOk() (*string, bool) {
	if o == nil || o.Iban == nil {
		return nil, false
	}
	return o.Iban, true
}

// HasIban returns a boolean if a field has been set.
func (o *AccountIdentifiers) HasIban() bool {
	if o != nil && o.Iban != nil {
		return true
	}

	return false
}

// SetIban gets a reference to the given string and assigns it to the Iban field.
func (o *AccountIdentifiers) SetIban(v string) {
	o.Iban = &v
}

func (o AccountIdentifiers) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["number"] = o.Number
	}
	if o.Iban != nil {
		toSerialize["iban"] = o.Iban
	}
	return json.Marshal(toSerialize)
}

type NullableAccountIdentifiers struct {
	value *AccountIdentifiers
	isSet bool
}

func (v NullableAccountIdentifiers) Get() *AccountIdentifiers {
	return v.value
}

func (v *NullableAccountIdentifiers) Set(val *AccountIdentifiers) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountIdentifiers) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountIdentifiers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountIdentifiers(val *AccountIdentifiers) *NullableAccountIdentifiers {
	return &NullableAccountIdentifiers{value: val, isSet: true}
}

func (v NullableAccountIdentifiers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountIdentifiers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
