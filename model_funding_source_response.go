/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// FundingSourceResponse struct for FundingSourceResponse
type FundingSourceResponse struct {
	// Funding Source ID
	Id string `json:"id"`
	// Funding Source URL
	Url string `json:"url"`
	// Funding Source Name
	Name string `json:"name"`
}

// NewFundingSourceResponse instantiates a new FundingSourceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundingSourceResponse(id string, url string, name string) *FundingSourceResponse {
	this := FundingSourceResponse{}
	this.Id = id
	this.Url = url
	this.Name = name
	return &this
}

// NewFundingSourceResponseWithDefaults instantiates a new FundingSourceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundingSourceResponseWithDefaults() *FundingSourceResponse {
	this := FundingSourceResponse{}
	return &this
}

// GetId returns the Id field value
func (o *FundingSourceResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FundingSourceResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FundingSourceResponse) SetId(v string) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *FundingSourceResponse) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *FundingSourceResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *FundingSourceResponse) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *FundingSourceResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FundingSourceResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FundingSourceResponse) SetName(v string) {
	o.Name = v
}

func (o FundingSourceResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableFundingSourceResponse struct {
	value *FundingSourceResponse
	isSet bool
}

func (v NullableFundingSourceResponse) Get() *FundingSourceResponse {
	return v.value
}

func (v *NullableFundingSourceResponse) Set(val *FundingSourceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFundingSourceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFundingSourceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundingSourceResponse(val *FundingSourceResponse) *NullableFundingSourceResponse {
	return &NullableFundingSourceResponse{value: val, isSet: true}
}

func (v NullableFundingSourceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundingSourceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
