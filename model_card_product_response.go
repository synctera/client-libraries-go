/*
 * Synctera API
 *
 * <h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>
 *
 * API version: 0.5.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
	"time"
)

// CardProductResponse struct for CardProductResponse
type CardProductResponse struct {
	// PHYSICAL or VIRTUAL.
	Form string `json:"form"`
	// ID of the Account Range for which card product was created
	AccountRangeId string `json:"account_range_id"`
	// indicates whether program is active
	Active bool `json:"active"`
	// Identifies whether a new account range will be automatically allocated
	AutoAllocateRange bool `json:"auto_allocate_range"`
	// The ID of the bank partner works with within this product
	BankId int32 `json:"bank_id"`
	// Bin ID
	BinId string `json:"bin_id"`
	// Program ID
	CardProgramId string `json:"card_program_id"`
	// The timestamp representing when the card product was created
	CreationTime time.Time `json:"creation_time"`
	// The time when bin is decommissioned
	EndDate time.Time `json:"end_date"`
	// Funding source ID
	FundingSourceId string `json:"funding_source_id"`
	// Card Product ID
	Id        string         `json:"id"`
	ImageMode *CardImageMode `json:"image_mode,omitempty"`
	// The timestamp representing when the card product was last modified
	LastModifiedTime time.Time `json:"last_modified_time"`
	// The name of the card product
	Name string `json:"name"`
	// The ID of the partner card product belongs to
	PartnerId          int32               `json:"partner_id"`
	PhysicalCardFormat *PhysicalCardFormat `json:"physical_card_format,omitempty"`
	// The time when bin goes live
	StartDate time.Time `json:"start_date"`
}

// NewCardProductResponse instantiates a new CardProductResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardProductResponse(form string, accountRangeId string, active bool, autoAllocateRange bool, bankId int32, binId string, cardProgramId string, creationTime time.Time, endDate time.Time, fundingSourceId string, id string, lastModifiedTime time.Time, name string, partnerId int32, startDate time.Time) *CardProductResponse {
	this := CardProductResponse{}
	this.Form = form
	this.AccountRangeId = accountRangeId
	this.Active = active
	this.AutoAllocateRange = autoAllocateRange
	this.BankId = bankId
	this.BinId = binId
	this.CardProgramId = cardProgramId
	this.CreationTime = creationTime
	this.EndDate = endDate
	this.FundingSourceId = fundingSourceId
	this.Id = id
	this.LastModifiedTime = lastModifiedTime
	this.Name = name
	this.PartnerId = partnerId
	this.StartDate = startDate
	return &this
}

// NewCardProductResponseWithDefaults instantiates a new CardProductResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardProductResponseWithDefaults() *CardProductResponse {
	this := CardProductResponse{}
	return &this
}

// GetForm returns the Form field value
func (o *CardProductResponse) GetForm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Form
}

// GetFormOk returns a tuple with the Form field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetFormOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Form, true
}

// SetForm sets field value
func (o *CardProductResponse) SetForm(v string) {
	o.Form = v
}

// GetAccountRangeId returns the AccountRangeId field value
func (o *CardProductResponse) GetAccountRangeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountRangeId
}

// GetAccountRangeIdOk returns a tuple with the AccountRangeId field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetAccountRangeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountRangeId, true
}

// SetAccountRangeId sets field value
func (o *CardProductResponse) SetAccountRangeId(v string) {
	o.AccountRangeId = v
}

// GetActive returns the Active field value
func (o *CardProductResponse) GetActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Active, true
}

// SetActive sets field value
func (o *CardProductResponse) SetActive(v bool) {
	o.Active = v
}

// GetAutoAllocateRange returns the AutoAllocateRange field value
func (o *CardProductResponse) GetAutoAllocateRange() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoAllocateRange
}

// GetAutoAllocateRangeOk returns a tuple with the AutoAllocateRange field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetAutoAllocateRangeOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoAllocateRange, true
}

// SetAutoAllocateRange sets field value
func (o *CardProductResponse) SetAutoAllocateRange(v bool) {
	o.AutoAllocateRange = v
}

// GetBankId returns the BankId field value
func (o *CardProductResponse) GetBankId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BankId
}

// GetBankIdOk returns a tuple with the BankId field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetBankIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BankId, true
}

// SetBankId sets field value
func (o *CardProductResponse) SetBankId(v int32) {
	o.BankId = v
}

// GetBinId returns the BinId field value
func (o *CardProductResponse) GetBinId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BinId
}

// GetBinIdOk returns a tuple with the BinId field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetBinIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BinId, true
}

// SetBinId sets field value
func (o *CardProductResponse) SetBinId(v string) {
	o.BinId = v
}

// GetCardProgramId returns the CardProgramId field value
func (o *CardProductResponse) GetCardProgramId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardProgramId
}

// GetCardProgramIdOk returns a tuple with the CardProgramId field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetCardProgramIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardProgramId, true
}

// SetCardProgramId sets field value
func (o *CardProductResponse) SetCardProgramId(v string) {
	o.CardProgramId = v
}

// GetCreationTime returns the CreationTime field value
func (o *CardProductResponse) GetCreationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *CardProductResponse) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetEndDate returns the EndDate field value
func (o *CardProductResponse) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *CardProductResponse) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetFundingSourceId returns the FundingSourceId field value
func (o *CardProductResponse) GetFundingSourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FundingSourceId
}

// GetFundingSourceIdOk returns a tuple with the FundingSourceId field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetFundingSourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FundingSourceId, true
}

// SetFundingSourceId sets field value
func (o *CardProductResponse) SetFundingSourceId(v string) {
	o.FundingSourceId = v
}

// GetId returns the Id field value
func (o *CardProductResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CardProductResponse) SetId(v string) {
	o.Id = v
}

// GetImageMode returns the ImageMode field value if set, zero value otherwise.
func (o *CardProductResponse) GetImageMode() CardImageMode {
	if o == nil || o.ImageMode == nil {
		var ret CardImageMode
		return ret
	}
	return *o.ImageMode
}

// GetImageModeOk returns a tuple with the ImageMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetImageModeOk() (*CardImageMode, bool) {
	if o == nil || o.ImageMode == nil {
		return nil, false
	}
	return o.ImageMode, true
}

// HasImageMode returns a boolean if a field has been set.
func (o *CardProductResponse) HasImageMode() bool {
	if o != nil && o.ImageMode != nil {
		return true
	}

	return false
}

// SetImageMode gets a reference to the given CardImageMode and assigns it to the ImageMode field.
func (o *CardProductResponse) SetImageMode(v CardImageMode) {
	o.ImageMode = &v
}

// GetLastModifiedTime returns the LastModifiedTime field value
func (o *CardProductResponse) GetLastModifiedTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModifiedTime
}

// GetLastModifiedTimeOk returns a tuple with the LastModifiedTime field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetLastModifiedTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModifiedTime, true
}

// SetLastModifiedTime sets field value
func (o *CardProductResponse) SetLastModifiedTime(v time.Time) {
	o.LastModifiedTime = v
}

// GetName returns the Name field value
func (o *CardProductResponse) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CardProductResponse) SetName(v string) {
	o.Name = v
}

// GetPartnerId returns the PartnerId field value
func (o *CardProductResponse) GetPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PartnerId, true
}

// SetPartnerId sets field value
func (o *CardProductResponse) SetPartnerId(v int32) {
	o.PartnerId = v
}

// GetPhysicalCardFormat returns the PhysicalCardFormat field value if set, zero value otherwise.
func (o *CardProductResponse) GetPhysicalCardFormat() PhysicalCardFormat {
	if o == nil || o.PhysicalCardFormat == nil {
		var ret PhysicalCardFormat
		return ret
	}
	return *o.PhysicalCardFormat
}

// GetPhysicalCardFormatOk returns a tuple with the PhysicalCardFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetPhysicalCardFormatOk() (*PhysicalCardFormat, bool) {
	if o == nil || o.PhysicalCardFormat == nil {
		return nil, false
	}
	return o.PhysicalCardFormat, true
}

// HasPhysicalCardFormat returns a boolean if a field has been set.
func (o *CardProductResponse) HasPhysicalCardFormat() bool {
	if o != nil && o.PhysicalCardFormat != nil {
		return true
	}

	return false
}

// SetPhysicalCardFormat gets a reference to the given PhysicalCardFormat and assigns it to the PhysicalCardFormat field.
func (o *CardProductResponse) SetPhysicalCardFormat(v PhysicalCardFormat) {
	o.PhysicalCardFormat = &v
}

// GetStartDate returns the StartDate field value
func (o *CardProductResponse) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *CardProductResponse) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *CardProductResponse) SetStartDate(v time.Time) {
	o.StartDate = v
}

func (o CardProductResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["form"] = o.Form
	}
	if true {
		toSerialize["account_range_id"] = o.AccountRangeId
	}
	if true {
		toSerialize["active"] = o.Active
	}
	if true {
		toSerialize["auto_allocate_range"] = o.AutoAllocateRange
	}
	if true {
		toSerialize["bank_id"] = o.BankId
	}
	if true {
		toSerialize["bin_id"] = o.BinId
	}
	if true {
		toSerialize["card_program_id"] = o.CardProgramId
	}
	if true {
		toSerialize["creation_time"] = o.CreationTime
	}
	if true {
		toSerialize["end_date"] = o.EndDate
	}
	if true {
		toSerialize["funding_source_id"] = o.FundingSourceId
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.ImageMode != nil {
		toSerialize["image_mode"] = o.ImageMode
	}
	if true {
		toSerialize["last_modified_time"] = o.LastModifiedTime
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["partner_id"] = o.PartnerId
	}
	if o.PhysicalCardFormat != nil {
		toSerialize["physical_card_format"] = o.PhysicalCardFormat
	}
	if true {
		toSerialize["start_date"] = o.StartDate
	}
	return json.Marshal(toSerialize)
}

type NullableCardProductResponse struct {
	value *CardProductResponse
	isSet bool
}

func (v NullableCardProductResponse) Get() *CardProductResponse {
	return v.value
}

func (v *NullableCardProductResponse) Set(val *CardProductResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCardProductResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCardProductResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardProductResponse(val *CardProductResponse) *NullableCardProductResponse {
	return &NullableCardProductResponse{value: val, isSet: true}
}

func (v NullableCardProductResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardProductResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
