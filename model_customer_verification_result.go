/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
	"time"
)

// CustomerVerificationResult Verification result
type CustomerVerificationResult struct {
	// Unique ID for this verification result.
	Id *string `json:"id,omitempty"`
	// List of potential problems found. These are subject to change.
	// Deprecated
	Issues []string `json:"issues,omitempty"`
	// Deprecated
	RawResponse *RawResponse `json:"raw_response,omitempty"`
	// The determination of this verification.
	Result     string                  `json:"result"`
	VendorInfo *VerificationVendorInfo `json:"vendor_info,omitempty"`
	// The date and time the verification was completed.
	VerificationTime time.Time        `json:"verification_time"`
	VerificationType VerificationType `json:"verification_type"`
}

// NewCustomerVerificationResult instantiates a new CustomerVerificationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerVerificationResult(result string, verificationTime time.Time, verificationType VerificationType) *CustomerVerificationResult {
	this := CustomerVerificationResult{}
	this.Result = result
	this.VerificationTime = verificationTime
	this.VerificationType = verificationType
	return &this
}

// NewCustomerVerificationResultWithDefaults instantiates a new CustomerVerificationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerVerificationResultWithDefaults() *CustomerVerificationResult {
	this := CustomerVerificationResult{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerVerificationResult) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerVerificationResult) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerVerificationResult) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CustomerVerificationResult) SetId(v string) {
	o.Id = &v
}

// GetIssues returns the Issues field value if set, zero value otherwise.
// Deprecated
func (o *CustomerVerificationResult) GetIssues() []string {
	if o == nil || o.Issues == nil {
		var ret []string
		return ret
	}
	return o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CustomerVerificationResult) GetIssuesOk() ([]string, bool) {
	if o == nil || o.Issues == nil {
		return nil, false
	}
	return o.Issues, true
}

// HasIssues returns a boolean if a field has been set.
func (o *CustomerVerificationResult) HasIssues() bool {
	if o != nil && o.Issues != nil {
		return true
	}

	return false
}

// SetIssues gets a reference to the given []string and assigns it to the Issues field.
// Deprecated
func (o *CustomerVerificationResult) SetIssues(v []string) {
	o.Issues = v
}

// GetRawResponse returns the RawResponse field value if set, zero value otherwise.
// Deprecated
func (o *CustomerVerificationResult) GetRawResponse() RawResponse {
	if o == nil || o.RawResponse == nil {
		var ret RawResponse
		return ret
	}
	return *o.RawResponse
}

// GetRawResponseOk returns a tuple with the RawResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *CustomerVerificationResult) GetRawResponseOk() (*RawResponse, bool) {
	if o == nil || o.RawResponse == nil {
		return nil, false
	}
	return o.RawResponse, true
}

// HasRawResponse returns a boolean if a field has been set.
func (o *CustomerVerificationResult) HasRawResponse() bool {
	if o != nil && o.RawResponse != nil {
		return true
	}

	return false
}

// SetRawResponse gets a reference to the given RawResponse and assigns it to the RawResponse field.
// Deprecated
func (o *CustomerVerificationResult) SetRawResponse(v RawResponse) {
	o.RawResponse = &v
}

// GetResult returns the Result field value
func (o *CustomerVerificationResult) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *CustomerVerificationResult) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *CustomerVerificationResult) SetResult(v string) {
	o.Result = v
}

// GetVendorInfo returns the VendorInfo field value if set, zero value otherwise.
func (o *CustomerVerificationResult) GetVendorInfo() VerificationVendorInfo {
	if o == nil || o.VendorInfo == nil {
		var ret VerificationVendorInfo
		return ret
	}
	return *o.VendorInfo
}

// GetVendorInfoOk returns a tuple with the VendorInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerVerificationResult) GetVendorInfoOk() (*VerificationVendorInfo, bool) {
	if o == nil || o.VendorInfo == nil {
		return nil, false
	}
	return o.VendorInfo, true
}

// HasVendorInfo returns a boolean if a field has been set.
func (o *CustomerVerificationResult) HasVendorInfo() bool {
	if o != nil && o.VendorInfo != nil {
		return true
	}

	return false
}

// SetVendorInfo gets a reference to the given VerificationVendorInfo and assigns it to the VendorInfo field.
func (o *CustomerVerificationResult) SetVendorInfo(v VerificationVendorInfo) {
	o.VendorInfo = &v
}

// GetVerificationTime returns the VerificationTime field value
func (o *CustomerVerificationResult) GetVerificationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.VerificationTime
}

// GetVerificationTimeOk returns a tuple with the VerificationTime field value
// and a boolean to check if the value has been set.
func (o *CustomerVerificationResult) GetVerificationTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationTime, true
}

// SetVerificationTime sets field value
func (o *CustomerVerificationResult) SetVerificationTime(v time.Time) {
	o.VerificationTime = v
}

// GetVerificationType returns the VerificationType field value
func (o *CustomerVerificationResult) GetVerificationType() VerificationType {
	if o == nil {
		var ret VerificationType
		return ret
	}

	return o.VerificationType
}

// GetVerificationTypeOk returns a tuple with the VerificationType field value
// and a boolean to check if the value has been set.
func (o *CustomerVerificationResult) GetVerificationTypeOk() (*VerificationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationType, true
}

// SetVerificationType sets field value
func (o *CustomerVerificationResult) SetVerificationType(v VerificationType) {
	o.VerificationType = v
}

func (o CustomerVerificationResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Issues != nil {
		toSerialize["issues"] = o.Issues
	}
	if o.RawResponse != nil {
		toSerialize["raw_response"] = o.RawResponse
	}
	if true {
		toSerialize["result"] = o.Result
	}
	if o.VendorInfo != nil {
		toSerialize["vendor_info"] = o.VendorInfo
	}
	if true {
		toSerialize["verification_time"] = o.VerificationTime
	}
	if true {
		toSerialize["verification_type"] = o.VerificationType
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerVerificationResult struct {
	value *CustomerVerificationResult
	isSet bool
}

func (v NullableCustomerVerificationResult) Get() *CustomerVerificationResult {
	return v.value
}

func (v *NullableCustomerVerificationResult) Set(val *CustomerVerificationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerVerificationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerVerificationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerVerificationResult(val *CustomerVerificationResult) *NullableCustomerVerificationResult {
	return &NullableCustomerVerificationResult{value: val, isSet: true}
}

func (v NullableCustomerVerificationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerVerificationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
