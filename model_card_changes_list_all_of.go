/*
Synctera API

<h2>Let's build something great.</h2><p>Welcome to the official reference documentation for Synctera APIs. Our APIs are the best way to automate your company's banking needs and are designed to be easy to understand and implement.</p><p>We're continuously growing this library and what you see here is just the start, but if you need something specific or have a question, <a class='text-blue-600' href='https://synctera.com/contact' target='_blank' rel='noreferrer'>contact us</a>.</p>

API version: 0.5.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package synctera

import (
	"encoding/json"
)

// CardChangesListAllOf struct for CardChangesListAllOf
type CardChangesListAllOf struct {
	// List of changes in descending chronological order
	Changes []CardChange `json:"changes"`
}

// NewCardChangesListAllOf instantiates a new CardChangesListAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCardChangesListAllOf(changes []CardChange) *CardChangesListAllOf {
	this := CardChangesListAllOf{}
	this.Changes = changes
	return &this
}

// NewCardChangesListAllOfWithDefaults instantiates a new CardChangesListAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCardChangesListAllOfWithDefaults() *CardChangesListAllOf {
	this := CardChangesListAllOf{}
	return &this
}

// GetChanges returns the Changes field value
func (o *CardChangesListAllOf) GetChanges() []CardChange {
	if o == nil {
		var ret []CardChange
		return ret
	}

	return o.Changes
}

// GetChangesOk returns a tuple with the Changes field value
// and a boolean to check if the value has been set.
func (o *CardChangesListAllOf) GetChangesOk() ([]CardChange, bool) {
	if o == nil {
		return nil, false
	}
	return o.Changes, true
}

// SetChanges sets field value
func (o *CardChangesListAllOf) SetChanges(v []CardChange) {
	o.Changes = v
}

func (o CardChangesListAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["changes"] = o.Changes
	}
	return json.Marshal(toSerialize)
}

type NullableCardChangesListAllOf struct {
	value *CardChangesListAllOf
	isSet bool
}

func (v NullableCardChangesListAllOf) Get() *CardChangesListAllOf {
	return v.value
}

func (v *NullableCardChangesListAllOf) Set(val *CardChangesListAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCardChangesListAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCardChangesListAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCardChangesListAllOf(val *CardChangesListAllOf) *NullableCardChangesListAllOf {
	return &NullableCardChangesListAllOf{value: val, isSet: true}
}

func (v NullableCardChangesListAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCardChangesListAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
